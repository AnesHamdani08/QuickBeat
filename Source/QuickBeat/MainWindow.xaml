<hc:Window x:Class="MainWindow" x:Name="YourOwner"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"           
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
           xmlns:hc="https://handyorg.github.io/handycontrol"
           xmlns:utils="clr-namespace:QuickBeat.Utilities"
           xmlns:ctl="clr-namespace:QuickBeat.Controls"
           xmlns:local="clr-namespace:QuickBeat"
           xmlns:cnv="clr-namespace:QuickBeat.Converters"
           xmlns:yt="clr-namespace:QuickBeat.Youtube.WPF"
           xmlns:upnp="clr-namespace:QuickBeat.UPnP"
           xmlns:vfx="clr-namespace:QuickBeat.Player.VFX"
           xmlns:sys="clr-namespace:System;assembly=mscorlib"
           xmlns:wv2="clr-namespace:Microsoft.Web.WebView2.Wpf;assembly=Microsoft.Web.WebView2.Wpf"
           mc:Ignorable="d"
           Title="{DynamicResource LOC_APPNAME}" Height="650" Width="1000" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" ShowIcon="False" AllowDrop="True" WindowStartupLocation="CenterScreen" MinWidth="768" MinHeight="610">
    <hc:Window.Icon>
        <ImageSource>Resources/MusicRecord.png</ImageSource>
    </hc:Window.Icon>
    <hc:Window.Resources>
        <cnv:ValueToStringConverter x:Key="V2S"/>
        <cnv:GenericMultiValueConverter x:Key="GMVC"/>
        <cnv:DoubleToVisibilityConverter x:Key="D2V"/>
        <cnv:MetadataToLyricsConverter x:Key="M2L"/>
        <cnv:NullStringToVisibilityConverter x:Key="NS2V"/>
        <cnv:PlaylistToDefaultImageSourceConverter x:Key="P2I"/>
        <cnv:BooleanToNotBooleanConverter x:Key="B2NB"/>
        <cnv:NumericToRoundedNumericConverter x:Key="N2RN"/>
        <cnv:BooleanToVisibilityPlusConverter x:Key="B2VP"/>
        <cnv:TextToImageSourceConverter x:Key="T2IS"/>
        <cnv:VisibilityToBooleanConverter x:Key="V2B"/>
        <cnv:ValueToSingleMarginPropertyConverter x:Key="V2SMP"/>
        <cnv:PlaylistAddBehaviourToIntegerConverter x:Key="AB2I"/>
        <cnv:TimerActionToIntegerConverter x:Key="STA2I"/>
        <cnv:ColorToBrushConverter x:Key="C2B"/>
        <cnv:ThemeTypeToColorPalleteConverter x:Key="TT2CP"/>
        <cnv:BooleanToApplicationThemeConverter x:Key="B2AT"/>
        <cnv:NullToVisibilityConverter x:Key="N2V"/>
        <BooleanToVisibilityConverter x:Key="B2V" />
        <cnv:CollectionCountToVisibilityConverter x:Key="CC2V"/>
        <cnv:DoubleSubtractToTimeLeftConverter x:Key="DS2TL"/>
        <cnv:FileSizeBytesToStringConverter x:Key="FSB2S"/>
        <cnv:StringToNumericConverter x:Key="S2N"/>
        <RoutedUICommand x:Key="Commands.SetTabIndexCommand" Text="SetTabIndexCommand" />
        <RoutedUICommand x:Key="Commands.Hide" Text="Hide" />
        <RoutedUICommand x:Key="Commands.SortLibrary" Text="SortLibrary"/>
        <RoutedUICommand x:Key="Commands.OpenInExplorer" Text="OpenInExplorer"/>
        <RoutedUICommand x:Key="Commands.StopPlayerVideoEffect" Text="StopVideoEffect"/>
        <RoutedUICommand x:Key="Commands.PickPlayerVideoEffect" Text="PickVideoEffect"/>
        <RoutedUICommand x:Key="Commands.LoadSubtitles" Text="LoadSubtitles"/>
        <RoutedUICommand x:Key="Commands.PlayLibrary" Text="PlayLibrary"/>
        <RoutedUICommand x:Key="Commands.ShowControlPopup" Text="ShowControlPopup"/>
        <RoutedUICommand x:Key="Commands.FreeMP3Download" Text="FreeMP3Download"/>
        <RoutedUICommand x:Key="Commands.WebView2Controls" Text="WebView2Controls"/>
        <RoutedUICommand x:Key="Commands.WriteSYLTToCurrentFile" Text="WriteSYLTToCurrentFile"/>
        <RoutedUICommand x:Key="Commands.SettingsScrollTo" Text="SettingsScrollTo"/>
        <RoutedUICommand x:Key="Commands.ParseSyncedLyricsFromUnsyncedLyrics" Text="ParseSyncedLyricsFromUnsyncedLyrics"/>
        <Style x:Key="TextBlock_HeaderStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,0,0,10" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="DemiBold" />
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonSwitch}">
            <Setter Property="Background" Value="{DynamicResource MainContentBackgroundBrush}"/>
        </Style>
        <upnp:UPnPProvider x:Key="uProvider"/>
        <vfx:ReactiveWaveVideoEffect x:Key="RWVFX" Width="350" Height="20" IsProxied="True" WaveType="0" FramerateLimit="30"/>
    </hc:Window.Resources>
    <hc:Window.CommandBindings>
        <CommandBinding Command="{StaticResource Commands.SetTabIndexCommand}" CanExecute="SetTabIndex_CanExecute" Executed="SetTabIndex_Executed" />
        <CommandBinding Command="{StaticResource Commands.Hide}" CanExecute="Hide_CanExecute" Executed="Hide_Executed" />
        <CommandBinding Command="{x:Static ApplicationCommands.Close}" CanExecute="Close_CanExecute" Executed="Close_Executed" />
        <CommandBinding Command="{StaticResource Commands.SortLibrary}" CanExecute="SortLibrary_CanExecute" Executed="SortLibrary_Executed"/>
        <CommandBinding Command="{StaticResource Commands.OpenInExplorer}" CanExecute="OpenInExplorer_CanExecute" Executed="OpenInExplorer_Executed"/>
        <CommandBinding Command="{StaticResource Commands.StopPlayerVideoEffect}" CanExecute="StopPlayerVideoEffect_CanExecute" Executed="StopPlayerVideoEffect_Executed"/>
        <CommandBinding Command="{StaticResource Commands.PickPlayerVideoEffect}" CanExecute="PickPlayerVideoEffect_CanExecute" Executed="PickPlayerVideoEffect_Executed"/>
        <CommandBinding Command="{StaticResource Commands.LoadSubtitles}" CanExecute="Commands_LoadSubtitles_CanExecute" Executed="Commands_LoadSubtitles_Executed"/>
        <CommandBinding Command="{StaticResource Commands.PlayLibrary}" CanExecute="Commands_PlayLibrary_CanExecute" Executed="Commands_PlayLibrary_Executed"/>
        <CommandBinding Command="{StaticResource Commands.ShowControlPopup}" CanExecute="Commands_ShowControlPopup_CanExecute" Executed="Commands_ShowControlPopup_Executed"/>
        <CommandBinding Command="{StaticResource Commands.FreeMP3Download}" CanExecute="Commands_FreeMP3Download_CanExecute" Executed="Commands_FreeMP3Download_Executed"/>
        <CommandBinding Command="{StaticResource Commands.WebView2Controls}" CanExecute="Commands_WebView2Controls_CanExecute" Executed="Commands_WebView2Controls_Executed"/>
        <CommandBinding Command="{StaticResource Commands.WriteSYLTToCurrentFile}" CanExecute="Commands_WriteSYLTToCurrentFile_CanExecute" Executed="Commands_WriteSYLTToCurrentFile_Executed"/>
        <CommandBinding Command="{StaticResource Commands.SettingsScrollTo}" CanExecute="Commands_SettingsScrollTo_CanExecute" Executed="Commands_SettingsScrollTo_Executed"/>
        <CommandBinding Command="{StaticResource Commands.ParseSyncedLyricsFromUnsyncedLyrics}" CanExecute="Commands_ParseSyncedLyricsFromUnsyncedLyrics_CanExecute" Executed="Commands_ParseSyncedLyricsFromUnsyncedLyrics_Executed"/>
    </hc:Window.CommandBindings>
    <hc:Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="TaskbarItemInfo_Main" ProgressState="{Binding TaskbarState}" ProgressValue="{Binding TaskbarProgress}" Overlay="{Binding TaskbarOverlay}" Description="{Binding StreamMetadata.Title}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}">
                    <ThumbButtonInfo.ImageSource>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing Geometry="{StaticResource GEO_PREVIOUS}" Brush="WhiteSmoke">
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="Black" Thickness="1" />
                                    </GeometryDrawing.Pen>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </ThumbButtonInfo.ImageSource>
                </ThumbButtonInfo>
                <ThumbButtonInfo CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}">
                    <ThumbButtonInfo.ImageSource>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing Geometry="{StaticResource GEO_PLAYPAUSE}" Brush="WhiteSmoke">
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="Black" Thickness="1" />
                                    </GeometryDrawing.Pen>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </ThumbButtonInfo.ImageSource>
                </ThumbButtonInfo>
                <ThumbButtonInfo CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}">
                    <ThumbButtonInfo.ImageSource>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing Geometry="{StaticResource GEO_NEXT}" Brush="WhiteSmoke">
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="Black" Thickness="1" />
                                    </GeometryDrawing.Pen>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </ThumbButtonInfo.ImageSource>
                </ThumbButtonInfo>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </hc:Window.TaskbarItemInfo>
    <hc:Interaction.Behaviors>
        <hc:TaskbarRebuildBehavior Element="{Binding ElementName=NotifyIcon_Main}" />
    </hc:Interaction.Behaviors>
    <hc:Window.NonClientAreaContent>
        <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
            <TextBlock Visibility="{Binding IsDownloading,Converter={StaticResource B2V}}" Margin="0,0,10,0" VerticalAlignment="Center">
                <Run Text="{DynamicResource LOC_BUFFERING}"/> <Run Text="{Binding DownloadPercentage}"/>%
            </TextBlock>
            <!--<Button Command="{Binding DumpDownloadedDataCommand}"/>-->
        </StackPanel>
    </hc:Window.NonClientAreaContent>
    <Grid ClipToBounds="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="953*"/>
            <ColumnDefinition Width="47*"/>
        </Grid.ColumnDefinitions>
        <hc:NotifyIcon x:Name="NotifyIcon_Main" Icon="MusicRecordIcon.ico" Text="{DynamicResource LOC_APPNAME}" MouseDoubleClick="NotifyIcon_Main_MouseDoubleClick" Grid.ColumnSpan="2">
            <hc:NotifyIcon.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Resources>
                        <Style TargetType="ctl:GeoImage">
                            <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                        </Style>
                    </ContextMenu.Resources>
                    <MenuItem Header="{StaticResource LOC_APPNAME}" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="Resources/MusicRecord.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem StaysOpenOnClick="True" Header="{Binding Playlist.PreviousItem.TitleArtist}" InputGestureText="{DynamicResource LOC_PREVIOUS}" CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PREVIOUS}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem StaysOpenOnClick="True" InputGestureText="{DynamicResource LOC_PLAYPAUSE}" CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}">
                        <MenuItem.Icon>
                            <Image Source="{Binding StreamMetadata.DefaultCover}"/>
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding StreamMetadata.TitleArtist,Mode=OneWay}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,5" TextTrimming="CharacterEllipsis" MaxWidth="150"/>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem StaysOpenOnClick="True" Header="{Binding Playlist.NextItem.TitleArtist}" InputGestureText="{DynamicResource LOC_NEXT}" CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_NEXT}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem StaysOpenOnClick="True" InputGestureText="{Binding TimeLeftString,Mode=OneWay}">
                        <MenuItem.Header>
                            <ctl:ClickProgressBar Style="{StaticResource ProgressBarFlat}" Maximum="{Binding Length}" Value="{Binding Position}"/>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_CLOCK}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <!--<MenuItem StaysOpenOnClick="True" InputGestureText="{DynamicResource LOC_VOLUME}">
                        <MenuItem.Header>
                            <ctl:ClickProgressBar Style="{StaticResource ProgressBarFlat}" Maximum="100" Value="{Binding Volume}"/>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_SPEAKER}"/>
                        </MenuItem.Icon>
                    </MenuItem>-->
                    <MenuItem StaysOpenOnClick="True">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.CacheMode>
                                    <BitmapCache/>
                                </StackPanel.CacheMode>
                                <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding StreamMetadata.IsFavorite,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_STAR_EMPTY}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_STAR_FILLED}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                                <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding Playlist.IsLooping,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ALL}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_LOOP_ALL}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                                <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding Playlist.IsShuffling,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ARROW}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_CIRCLE_SHUFFLE}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                                <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding IsLooping,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ONE}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_LOOP_ONE}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                                <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding IsMuted,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_VOLUME}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_SPEAKER}" Height="38" Width="38" VerticalAlignment="Center" />
                                <Slider Width="72" Value="{Binding Volume,Mode=TwoWay,Delay=10}" Maximum="100" SmallChange="5" LargeChange="10" IsMoveToPointEnabled="True" VerticalAlignment="Center">
                                    <Slider.Style>
                                        <Style TargetType="Slider" BasedOn="{StaticResource SliderBaseStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsHighVolume}" Value="True">
                                                    <Setter Property="hc:ThemeManager.RequestedAccentColor" Value="{DynamicResource DangerBrush}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsHighVolume}" Value="False">
                                                    <Setter Property="hc:ThemeManager.RequestedAccentColor" Value="{DynamicResource InfoBrush}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Slider.Style>
                                </Slider>
                            </StackPanel>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource ConfigGeometry}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{StaticResource LOC_EXIT}" Click="MenuItem_NotifyIcon_Exit_Click"/>
                </ContextMenu>
            </hc:NotifyIcon.ContextMenu>
        </hc:NotifyIcon>
        <DockPanel LastChildFill="True" Grid.ColumnSpan="2">
            <Menu d:DockPanel.Dock="Top" Visibility="{Binding ElementName=YourOwner,Path=IsFullScreen,Converter={StaticResource B2VP},ConverterParameter=0}">
                <Menu.Style>
                    <Style TargetType="Menu" BasedOn="{StaticResource MenuBaseStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="False">
                                <Setter Property="DockPanel.Dock" Value="Bottom"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="True">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Menu.Style>
                <Image Height="24" Source="Resources/MusicRecord.png" RenderTransformOrigin="0.5,0.5">
                    <Image.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation From="0" To="359" RepeatBehavior="Forever" Duration="0:0:2.5" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation To="0" Duration="0:0:1" DecelerationRatio="0.9" Storyboard.TargetProperty="(Image.RenderTransform).(RotateTransform.Angle)">
                                        <DoubleAnimation.EasingFunction>
                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                        </DoubleAnimation.EasingFunction>
                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Image.Triggers>
                    <Image.RenderTransform>
                        <RotateTransform Angle="0"/>
                    </Image.RenderTransform>
                </Image>
                <MenuItem Header="{DynamicResource LOC_FILE}">
                    <MenuItem.Icon>
                        <ctl:GeoImage GeoSource="{DynamicResource GEO_FILE}"/>
                    </MenuItem.Icon>
                    <MenuItem Header="{DynamicResource LOC_OPEN}" Command="{Binding LoadCommand}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_FILE_AUDIO}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_REMOTE}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_FILE_REMOTE}"/>
                        </MenuItem.Icon>
                        <MenuItem Header="{DynamicResource LOC_INTERNET}" IsCheckable="True" IsChecked="{Binding Source={x:Static utils:SharedProperties.Instance},Path=IsInternetConnected, Mode=OneWay}" IsEnabled="False"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource LOC_URL}" Command="{Binding LoadURLCommand}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_LINK}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Youtube-DL ⁽ᴮᴱᵀᴬ⁾" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=YoutubeDL}" IsEnabled="{Binding Source={x:Static utils:SharedProperties.Instance},Path=IsInternetConnected, Mode=OneWay}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="M 1.0905515e-7,-1.1678468e-6 V 34.570312 L 82.03125,61.99219 v 0.46875 L 1.0905515e-7,89.76563 v 34.57031 L 116.13281,75.82031 V 47.8125 Z M 143.67188,150.23438 v 13.94531 h 99.60937 v -13.94531 z"/>
                            </MenuItem.Icon>
                            <MenuItem>
                                <MenuItem.Resources>
                                    <yt:Int32ToQualityConverter x:Key="I2Q"/>
                                </MenuItem.Resources>
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <ComboBox Style="{StaticResource ComboBoxCapsule}" SelectedIndex="{Binding VideoQuality,Converter={StaticResource I2Q}}" Margin="5">
                                            <ComboBoxItem Content="best"/>
                                            <ComboBoxItem Content="worst"/>
                                            <!--<ComboBoxItem Content="bestvideo"/>
                                            <ComboBoxItem Content="worstvideo"/>-->
                                            <ComboBoxItem Content="bestaudio"/>
                                            <ComboBoxItem Content="worstaudio"/>
                                        </ComboBox>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <MenuItem>
                                <MenuItem.Resources>
                                    <yt:Int32ToSearchProviderConverter x:Key="I2SP"/>
                                </MenuItem.Resources>
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <ComboBox Style="{StaticResource ComboBoxCapsule}" SelectedIndex="{Binding DefaultSearchProvider,Converter={StaticResource I2SP}}" Margin="5">
                                            <ComboBoxItem Content="YouTube"/>
                                            <ComboBoxItem Content="SoundCloud"/>
                                            <ComboBoxItem Content="YouTube Music"/>
                                        </ComboBox>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{DynamicResource LOC_PATH}" Command="{Binding SetPathCommand}"/>
                            <MenuItem Header="{DynamicResource LOC_QUICKOPEN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" Command="{Binding QuickLoadCommand}"/>
                            <MenuItem Header="{DynamicResource LOC_OPEN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" Command="{Binding LoadCommand}"/>
                            <MenuItem Header="{DynamicResource LOC_FINDANDOPEN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" Command="{Binding SearchAndLoadDefaultCommand}"/>
                            <MenuItem IsEnabled="False"  Header="{DynamicResource LOC_PLAYLIST}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" Command="{Binding LoadPlaylistCommand}"/>
                        </MenuItem>
                        <MenuItem Header="Deezer" IsEnabled="{Binding Source={x:Static utils:SharedProperties.Instance},Path=IsInternetConnected, Mode=OneWay}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_DEEZER}"/>
                            </MenuItem.Icon>
                            <MenuItem Header="{DynamicResource LOC_DEEZER_GRATITUDE}" IsEnabled="False"/>
                            <MenuItem Header="{DynamicResource LOC_PREVIEW}" IsCheckable="True" IsChecked="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand},Path=Preview}" StaysOpenOnClick="True"/>
                            <MenuItem Header="{DynamicResource LOC_SEARCH}">
                                <MenuItem Header="{DynamicResource LOC_TRACK}" CommandParameter="search/track" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_ARTIST}" CommandParameter="search/artist" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_ALBUM}" CommandParameter="search/album" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_PLAYLIST}" CommandParameter="search/playlist" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_RADIO}" CommandParameter="search/radio" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_BYID}">
                                <MenuItem Header="{DynamicResource LOC_TRACK}" CommandParameter="track" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_ARTIST}">
                                    <MenuItem Header="{DynamicResource LOC_TOP}" CommandParameter="artist/top" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                    <MenuItem Header="{DynamicResource LOC_RADIO}" CommandParameter="artist/radio" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_ALBUM}" CommandParameter="album" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_PLAYLIST}" CommandParameter="playlist" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_RADIO}" CommandParameter="radio" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="Enigma ⁽ᴮᴱᵀᴬ⁾" Visibility="Collapsed" Command="{StaticResource Commands.FreeMP3Download}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="M 206.78125,525.34903 V 357.30216 h 104.64844 v 39.60937 h -54.02344 v 24.49219 h 50.74219 v 39.60937 h -50.74219 v 24.72657 h 57.89062 v 39.60937 z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Microsoft Edge WebView2" IsEnabled="{Binding ElementName=YourOwner,Path=IsWebViewInstalled,Converter={StaticResource B2V}}">
                            <MenuItem.Icon>
                                <Canvas Grid.Column="0" RenderTransformOrigin="0.1,0">
                                    <Canvas.RenderTransform>
                                        <ScaleTransform ScaleX="0.08" ScaleY="0.08"/>
                                    </Canvas.RenderTransform>
                                    <Path Fill="#0F5196" Data="m 173.60284,156.72584 a 93.7,93.7 0 0 1 -10.6,4.7 101.9,101.9 0 0 1 -35.9,6.4 c -47.3,0 -88.5,-32.5 -88.5,-74.299999 a 31.5,31.5 0 0 1 16.4,-27.3 c -42.8,1.8 -53.7999998,46.399999 -53.7999998,72.499999 0,74 68.0999998,81.4 82.7999998,81.4 7.9,0 19.8,-2.3 27,-4.6 l 1.3,-0.4 a 128.3,128.3 0 0 0 66.6,-52.8 4,4 0 0 0 -5.3,-5.6 z"/>
                                    <Path Fill="#1B9DE2" Data="m 48.20284,207.52584 a 79.2,79.2 0 0 1 -22.7,-21.3 80.7,80.7 0 0 1 29.5,-119.999999 c 3.2,-1.5 8.5,-4.1 15.6,-4 a 32.4,32.4 0 0 1 25.7,13 31.9,31.9 0 0 1 6.3,18.7 c 0,-0.2 24.5,-79.6 -80,-79.6 -43.9,0 -80,41.6 -80,78.2 a 130.2,130.2 0 0 0 12.1,55.999999 128,128 0 0 0 156.4,67 75.5,75.5 0 0 1 -62.8,-8 z"/>
                                    <Path Data="m 94.90284,115.02584 c -0.9,1 -3.4,2.5 -3.4,5.6 0,2.6 1.7,5.2 4.8,7.3 14.3,10 41.4,8.6 41.5,8.6 a 59.6,59.6 0 0 0 30.3,-8.3 61.4,61.4 0 0 0 30.4,-52.899999 c 0.3,-22.4 -8,-37.3 -11.3,-43.9 -21.3,-41.4000003 -67,-65.2 -116.7,-65.2 a 128,128 0 0 0 -128,126.2 c 0.5,-36.5 36.8,-66 80,-66 3.5,0 23.5,0.3 42,10 a 72.6,72.6 0 0 1 30.9,29.3 c 6.1,10.6 7.2,24.1 7.2,29.5 0,5.399999 -2.7,13.299999 -7.8,19.899999 z">
                                        <Path.Fill>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF35C1F1"/>
                                                <GradientStop Color="#FF36C752" Offset="0.7"/>
                                            </LinearGradientBrush>
                                        </Path.Fill>
                                    </Path>
                                </Canvas>
                            </MenuItem.Icon>
                            <MenuItem Header="{DynamicResource LOC_INFO}" Click="MenuItem_WebView2_Info_Click">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{DynamicResource LOC_REFRESH}" CommandParameter="reload" Command="{StaticResource Commands.WebView2Controls}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource RotateLeftGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_GOBACK}" StaysOpenOnClick="True" CommandParameter="goback" Command="{StaticResource Commands.WebView2Controls}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource LeftGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_GOFORWARD}" StaysOpenOnClick="True" CommandParameter="goforward" Command="{StaticResource Commands.WebView2Controls}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource RightGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{DynamicResource LOC_NAVIGATE}" CommandParameter="navigate" Command="{StaticResource Commands.WebView2Controls}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource SearchGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_VIEW}" CommandParameter="8" Command="{StaticResource Commands.SetTabIndexCommand}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource EyeOpenGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_BlOCKPOPUS}" IsCheckable="True" IsChecked="{Binding ElementName=YourOwner,Path=WebViewBlockPopups,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  StaysOpenOnClick="True">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource TwoPageModeGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_BlOCKFRAMES}" IsCheckable="True" IsChecked="{Binding ElementName=YourOwner,Path=WebViewBlockIFrames,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  StaysOpenOnClick="True">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource WindowRestoreGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <Separator/>
                        <MenuItem DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer}">
                            <MenuItem.Header>
                                <TextBlock>
                                    <Run Text="{DynamicResource LOC_LANMUSICSHARING}"/> ⁽ᴮᴱᵀᴬ⁾
                                </TextBlock>
                            </MenuItem.Header>
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_NETWORK}"/>
                            </MenuItem.Icon>
                            <MenuItem Header="{DynamicResource LOC_SERVER}" IsEnabled="False" IsCheckable="True" IsChecked="{Binding IsRunning,Mode=OneWay}"/>
                            <MenuItem Header="API" StaysOpenOnClick="True" IsCheckable="True" IsChecked="{Binding API,Mode=OneWay}"/>
                            <MenuItem Header="Port">
                                <MenuItem StaysOpenOnClick="True" IsEnabled="{Binding IsRunning,Converter={StaticResource B2NB}}">
                                    <MenuItem.Template>
                                        <ControlTemplate>
                                            <ComboBox Margin="5" MinWidth="100" Style="{StaticResource ComboBoxExtend}" hc:InfoElement.Placeholder="{Binding Port,Converter={StaticResource V2S},Mode=OneWay}"  Text="{Binding Port,Converter={StaticResource V2S},Mode=TwoWay,UpdateSourceTrigger=LostFocus}">
                                                <ComboBoxItem Content="80"/>
                                                <ComboBoxItem Content="443"/>
                                                <ComboBoxItem Content="8080"/>
                                            </ComboBox>
                                        </ControlTemplate>
                                    </MenuItem.Template>
                                </MenuItem>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="QuickLink ⁽ᴮᴱᵀᴬ⁾">
                                <MenuItem Header="{DynamicResource LOC_SCAN}" StaysOpenOnClick="True" IsEnabled="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.IsScanning,Converter={StaticResource B2NB},Mode=OneWay}"  IsCheckable="True" IsChecked="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.IsScanning,Mode=OneWay}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.ScanCommand}"/>
                                <MenuItem Header="{DynamicResource LOC_CANCEL}" StaysOpenOnClick="True" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.IsScanning,Converter={StaticResource B2V},Mode=OneWay}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.ScanCancelCommand}"/>
                                <MenuItem Header="{DynamicResource LOC_DEVICES}" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.FoundServers}">
                                    <MenuItem.ItemContainerStyle>
                                        <Style>
                                            <Setter Property="MenuItem.Header" Value="{Binding Item1}"/>
                                            <Setter Property="MenuItem.CommandParameter" Value="{Binding Item2}"/>
                                            <Setter Property="MenuItem.Command" Value="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.LinkCommand}"/>
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                </MenuItem>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{DynamicResource LOC_START}" StaysOpenOnClick="True" IsEnabled="{Binding IsBusy,Converter={StaticResource B2NB}}" CommandParameter="{Binding .}" Command="{Binding StartCommand}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource RotateLeftGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_STOP}" StaysOpenOnClick="True" IsEnabled="{Binding IsBusy,Converter={StaticResource B2NB}}" CommandParameter="{Binding .}" Command="{Binding StopCommand}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource GEO_EXIT}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_REFRESH}" IsEnabled="{Binding IsBusy,Converter={StaticResource B2NB}}" Command="{Binding RefreshCommand}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource RotateLeftGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{DynamicResource LOC_FIREWALL}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource WindowsGeometry}"/>
                                </MenuItem.Icon>
                                <MenuItem Header="{DynamicResource LOC_FIREWALL_REGARDING}" Click="MenuItem_Firewall_Regarding_Click">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_ADDRULE}" CommandParameter="add" Command="{Binding FirewallControlRuleCommand}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{DynamicResource AddGeometry}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_DELETERULE}" CommandParameter="delete" Command="{Binding FirewallControlRuleCommand}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{DynamicResource RemoveGeometry}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_OPEN}" CommandParameter="{Binding .}" Command="{Binding OpenInBrowserCommand}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource DialogBoxLauncherGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_PUSHCURRENTMEDIATOSELECTEDRENDERER}" CommandParameter="{StaticResource uProvider}" Command="{Binding PushToRendererCommand}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{DynamicResource DialogBoxLauncherGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="{DynamicResource LOC_DISCLAIMER}" Click="MenuItem_DumpStream_Disclaimer_Click">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_DUMPSTREAM}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.DumpDownloadedDataCommand}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{DynamicResource DownloadGeometry}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_SUBTITLES}" Command="{StaticResource Commands.LoadSubtitles}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_SUBTITLES}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{DynamicResource LOC_APPEND}" CommandParameter="{Binding Playlist}" Command="{Binding AddToPlaylistCommand}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource GEO_ADDTOLIST_LAST}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_ENQUEUE}" CommandParameter="{Binding Playlist}" Command="{Binding AddToQueueCommand}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource GEO_ADDTOLIST_FIRST}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="{DynamicResource LOC_HIDE}" Command="{StaticResource Commands.Hide}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource EyeCloseGeometry}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_EXIT}" Command="{x:Static ApplicationCommands.Close}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_EXIT}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource LOC_EDIT}">
                    <MenuItem.Icon>
                        <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}"/>
                    </MenuItem.Icon>
                    <MenuItem Header="{DynamicResource LOC_METADATA}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource ConfigGeometry}"/>
                        </MenuItem.Icon>
                        <MenuItem Header="{DynamicResource LOC_EDIT}" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:Commands.ShowTagEditorCommand}}"/>
                        <MenuItem Header="{DynamicResource LOC_IMPORTSYNCHRONISEDLYRICS}" Command="{StaticResource Commands.WriteSYLTToCurrentFile}"/>
                        <MenuItem Header="{DynamicResource LOC_PARSESYNCEDLYRICSFROMUNSYNCEDLYRICS}" CommandParameter="{Binding StreamMetadata,Converter={StaticResource M2L}}" Command="{StaticResource Commands.ParseSyncedLyricsFromUnsyncedLyrics}"/>
                        <!--TODO Bind this to write sylt to current instace-->
                    </MenuItem>
                    <MenuItem Header="A-B">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_AB}"/>
                        </MenuItem.Icon>
                        <MenuItem Header="{DynamicResource LOC_LOOP}" IsCheckable="True" IsChecked="{Binding IsABLoop}"/>
                        <MenuItem CommandParameter="{Binding Position}" Command="{Binding SetACommand}" StaysOpenOnClick="True">
                            <MenuItem.Header>
                                <TextBlock>
                                    A <Run Text="{Binding ABLoop.AString,Mode=OneWay}"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem CommandParameter="{Binding Position}" Command="{Binding SetBCommand}" StaysOpenOnClick="True">
                            <MenuItem.Header>
                                <TextBlock>
                                    B <Run Text="{Binding ABLoop.BString,Mode=OneWay}"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource LOC_PLAYBACK}">
                    <MenuItem.Icon>
                        <ctl:GeoImage GeoSource="{StaticResource GEO_PLAY}"/>
                    </MenuItem.Icon>
                    <MenuItem Header="{DynamicResource LOC_PLAYPAUSE}" InputGestureText="Ctrl + Space" CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}" StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAY}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_NEXT}" InputGestureText="Ctrl + ➡" CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}" StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_NEXT}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_PREVIOUS}" InputGestureText="Ctrl + ⬅" CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}" StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PREVIOUS}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_SEEKFORWARD}" InputGestureText="Shift + ➡" CommandParameter="{Binding Stream}" Command="{Binding FFCommand}" StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_CLOCK}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_SEEKBACKWARD}" InputGestureText="Shift + ⬅" CommandParameter="{Binding Stream}" Command="{Binding RWCommand}" StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_CLOCK}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_SHUFFLE}" InputGestureText="Ctrl + S" IsCheckable="True" IsChecked="{Binding Playlist.IsShuffling}" StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_SHUFFLE}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_LOOP}" InputGestureText="Shift + R" IsCheckable="True" IsChecked="{Binding Playlist.IsLooping}" StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_LOOP}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_LOOPONE}" InputGestureText="Ctrl + R" IsCheckable="True" IsChecked="{Binding IsLooping}" StaysOpenOnClick="True">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_LOOP_ONE}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource LOC_VIEW}">
                    <MenuItem.Icon>
                        <ctl:GeoImage GeoSource="{StaticResource EyeOpenGeometry}"/>
                    </MenuItem.Icon>
                    <MenuItem Header="{DynamicResource LOC_RIGHTSIDEBAR}" IsCheckable="True" IsChecked="{Binding ElementName=Grid_SideBar_Right,Path=Visibility,Converter={StaticResource V2B}}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource AlignRightGeometry}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_BOTTOMCONTROLBAR}" IsCheckable="True" IsChecked="{Binding ElementName=YourOwner,Path=IsBottomControls,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    <MenuItem Header="{DynamicResource LOC_LIVECONTROLBARBACKGROUND}" IsCheckable="True" IsChecked="{Binding ElementName=YourOwner,Path=IsLiveBackground,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    <MenuItem Header="{DynamicResource LOC_ALWAYSONINFOTIP}" Command="{StaticResource Commands.ShowControlPopup}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_VISUALIZER}" DataContext="{Binding VideoEffect}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource PageModeGeometry}"/>
                        </MenuItem.Icon>
                        <MenuItem Header="{DynamicResource LOC_RETURN}" CommandParameter="0" Command="{StaticResource Commands.SetTabIndexCommand}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource LeftGeometry}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_NOWPLAYING}" CommandParameter="6" Command="{StaticResource Commands.SetTabIndexCommand}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource PageModeGeometry}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="{Binding Name}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource LOC_BIND}" CommandParameter="{x:Reference Name=Image_VisualizerOutput}" Command="{Binding SetOutputCommand}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource NailGeometry}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_VISUALIZER}" IsCheckable="True" IsChecked="{Binding IsEnabled}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource PageModeGeometry}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_CONTROLS}" IsCheckable="True" IsChecked="{Binding ElementName=YourOwner,Path=ShowVisualizerControls}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_FRAMERATE}" StaysOpenOnClick="True">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}"/>
                            </MenuItem.Icon>
                            <MenuItem IsEnabled="False" Header="{Binding ActualFramerate}"/>
                            <Separator/>
                            <MenuItem Header="15" CommandParameter="17" Command="{Binding SetFramerateLimitCommand}"/>
                            <MenuItem Header="30" CommandParameter="34" Command="{Binding SetFramerateLimitCommand}"/>
                            <MenuItem Header="∞" CommandParameter="0" Command="{Binding SetFramerateLimitCommand}"/>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_RESOLUTION}" StaysOpenOnClick="True">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}"/>
                            </MenuItem.Icon>
                            <MenuItem IsEnabled="False">
                                <MenuItem.Header>
                                    <TextBlock>
                                        <Run Text="{Binding Width}"/>x<Run Text="{Binding Height}"/>
                                    </TextBlock>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="SD" CommandParameter="640x480" Command="{Binding SetResolutionCommand}"/>
                            <MenuItem Header="HD" CommandParameter="1280x720" Command="{Binding SetResolutionCommand}"/>
                            <MenuItem Header="FHD" CommandParameter="1920x1080" Command="{Binding SetResolutionCommand}"/>
                            <MenuItem Header="QHD" CommandParameter="2560x1440" Command="{Binding SetResolutionCommand}"/>
                            <MenuItem Header="UHD" CommandParameter="3840x2160" Command="{Binding SetResolutionCommand}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="{DynamicResource LOC_OPEN}" Command="{StaticResource Commands.PickPlayerVideoEffect}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource DialogBoxLauncherGeometry}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_CLOSE}" Command="{StaticResource Commands.StopPlayerVideoEffect}">
                            <MenuItem.Icon>
                                <ctl:GeoImage GeoSource="{StaticResource GEO_EXIT}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_REACTIVESEEKBAR}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource BubbleTailGeometry}"/>
                        </MenuItem.Icon>
                        <MenuItem>
                            <MenuItem.Template>
                                <ControlTemplate>
                                    <ComboBox Style="{StaticResource ComboBoxCapsule}" SelectedIndex="{Binding Source={StaticResource RWVFX},Path=WaveType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Margin="5">
                                        <ComboBoxItem Content="{DynamicResource LOC_WAVE}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_BARS}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_SPECTRUM}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_LINES}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_WAVEFORM}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_SPECTRUMWAVE}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_DOTS}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_NONE}"/>
                                    </ComboBox>
                                </ControlTemplate>
                            </MenuItem.Template>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_FRAMERATE}" StaysOpenOnClick="True" DataContext="{Binding Source={StaticResource RWVFX}}">
                            <MenuItem IsEnabled="False" Header="{Binding ActualFramerate}"/>
                            <Separator/>
                            <MenuItem Header="15" CommandParameter="17" Command="{Binding SetFramerateLimitCommand}"/>
                            <MenuItem Header="30" CommandParameter="34" Command="{Binding SetFramerateLimitCommand}"/>
                            <MenuItem Header="∞" CommandParameter="0" Command="{Binding SetFramerateLimitCommand}"/>
                        </MenuItem>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource LOC_ABOUT}">
                    <MenuItem.Icon>
                        <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                    </MenuItem.Icon>
                    <MenuItem Header="Ascent" IsEnabled="False">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoBrush="#C76D14">
                                <ctl:GeoImage.GeoSource>
                                    M 46.079358,0 37.123832,2.399336 35.895483,2.728515 36.553841,5.184696 37.781673,4.856034 42.660962,3.54862 26.689327,31.213081 20.669539,27.736291 19.361092,32.619197 14.51746,14.533479 0.634586,38.576456 0,39.677681 l 2.200899,1.271757 0.636654,-1.101741 10.812776,-18.728573 5.71283,21.32428 2.906282,-10.8474 5.351612,3.089734 17.157092,-29.715499 0.98547,3.677295 0.329179,1.228349 2.45618,-0.658358 -0.328662,-1.227832 -1.644344,-6.13606 z
                                </ctl:GeoImage.GeoSource>
                            </ctl:GeoImage>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock>
                                Aqua V<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow},Path=AquaVersion}"/>
                            </TextBlock>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <Image Source="Resources/MusicRecord.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock>
                                QuickBeat V<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow},Path=Version}"/>
                            </TextBlock>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <Image Source="Resources/MusicRecord.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="MenuItem_About" Header="{DynamicResource LOC_ABOUT}" IsCheckable="True" IsChecked="False">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_CHECKFORUPDATES}" Click="MenuItem_CheckForUpdates_Click">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource GEO_CIRCLE_INFO}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://github.com/AnesHamdani08/QuickBeat" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    <Run Text="{DynamicResource LOC_REPOSITORY}"/>
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource DialogBoxLauncherGeometry}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_KEYBOARD}" Click="MenuItem_KeyboardNavigation_Click">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Resources/MusicRecord.png" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://icons8.com/icon/63803/music-record" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Music Record Icon By Icons8.com
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Resources/CircledPlay.png" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://icons8.com/icon/KQ5qZwOlaNdR/circled-play" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Circled Play Icon By Icons8.com
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Resources/PauseButton.png" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://icons8.com/icon/bBryBDQG6NDr/pause-button" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Pause Button Icon By Icons8.com
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Resources/StopCircled.png" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://icons8.com/icon/dTY6dSHhkQ8o/stop-circled" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Stop Circled Icon By Icons8.com
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <Grid d:DockPanel.Dock="Bottom" Margin="0,0,0,-80">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="True">
                                <Setter Property="DockPanel.Dock" Value="Bottom"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="False">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard BeginTime="0:0:1">
                                <ThicknessAnimation From="0,0,0,-80" To="0" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)">
                                    <ThicknessAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                                <ThicknessAnimation To="0,0,0,-80" BeginTime="0:0:1.5" Duration="0:0:0.5" AccelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)">
                                    <ThicknessAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
                <TextBlock Text="{Binding Source={x:Static utils:SharedProperties.Instance},Path=CurrentGreeting,Mode=OneWay}" Margin="10,0,10,10" HorizontalAlignment="Center"/>
            </Grid>
            <Grid d:DockPanel.Dock="Bottom" Margin="0,0,0,-40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="True">
                                <Setter Property="DockPanel.Dock" Value="Bottom"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="False">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.IsLinked}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation From="0,0,0,-40" To="0" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)">
                                                <ThicknessAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation To="0,0,0,-40" Duration="0:0:0.5" AccelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)">
                                                <ThicknessAnimation.EasingFunction>
                                                    <SineEase EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <TextBlock Margin="0,5,0,10" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.IsControlling,Converter={StaticResource B2V}}">
                    <Run Text="{DynamicResource LOC_CONTROLLING}"/>
                    <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.LinkedTo,Mode=OneWay}"/>
                </TextBlock>
                <TextBlock Margin="0,5,0,10" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.IsControlled,Converter={StaticResource B2V}}">
                    <Run Text="{DynamicResource LOC_CONTROLLEDBY}"/>
                    <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.LinkedTo,Mode=OneWay}"/>
                </TextBlock>
                <ctl:ClickTextBlock Text="{DynamicResource LOC_UNLINK}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,10,0" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.UnlinkCommand}"/>
                <hc:Badge Style="{StaticResource BadgeDanger}" Status="Dot" ShowBadge="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.NewChat}" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,60,0" BadgeMargin="0,-5,-5,0">
                    <ToggleButton x:Name="ToggleButton_Chat" d:IsChecked="True" IsChecked="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.LockChatRead,Mode=TwoWay}" Content="Chat" Style="{StaticResource ToggleButtonDefault.Small}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.ClearNewChatCommand}"/>
                </hc:Badge>
            </Grid>
            <Grid d:DockPanel.Dock="Bottom" Background="{DynamicResource ThirdlyRegionBrush}" Height="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ElementName=Grid_SideBar_Left,Path=ActualWidth}"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition MaxWidth="350"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" MaxWidth="100"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="63" MaxHeight="63"/>
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.MaxHeight)" From="150" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.MaxHeight)" From="0" To="150" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="True">
                                <Setter Property="DockPanel.Dock" Value="Bottom"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="False">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Image Grid.ColumnSpan="7" Grid.Row="1" Margin="-50,0,-100,0" Source="{Binding StreamMetadata.DefaultCover}" Stretch="UniformToFill" StretchDirection="UpOnly" MaxHeight="63" Visibility="{Binding ElementName=YourOwner,Path=IsLiveBackground,Converter={StaticResource B2V}}">
                    <Image.CacheMode>
                        <BitmapCache/>
                    </Image.CacheMode>
                    <Image.Effect>
                        <BlurEffect Radius="10" KernelType="Box"/>
                    </Image.Effect>
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsTransitioning}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="1" To="0" Duration="0:0:0.5" AutoReverse="True" DecelerationRatio="0.9" Storyboard.TargetProperty="Opacity">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut" Exponent="2"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="7" Grid.RowSpan="2" Margin="-50,0,-100,0"  Opacity="0.5" Visibility="{Binding ElementName=YourOwner,Path=IsLiveBackground,Converter={StaticResource B2V}}"/>
                <Grid Grid.Row="1" Grid.Column="0" Margin="0,10" HorizontalAlignment="Center" ClipToBounds="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="ctl:GeoImage">
                            <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                        </Style>
                    </Grid.Resources>
                    <Grid.CacheMode>
                        <BitmapCache/>
                    </Grid.CacheMode>
                    <ctl:GeoImage GeoSource="{DynamicResource GEO_PREVIOUS}" Width="16" Height="16" Margin="0,0,10,0" CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding Playlist.PreviousItem.TitleArtist}">
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPreviewing}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="-15,0,10,0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="0,0,10,0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                    <ctl:GeoImage GeoSource="{DynamicResource GEO_RETURN}" Width="16" Height="16" Margin="0,0,10,0" CommandParameter="{Binding PreviewControlHandle}" Command="{Binding StopControlHandleCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" Visibility="{Binding IsPreviewing,Converter={StaticResource B2V},Delay=250}">
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPreviewing}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="10,0,10,0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="0,55,10,0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="0" BeginTime="0:0:0.10" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="25" Grid.Column="1" Width="40" Height="40" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding Playlist.CurrentItem.TitleArtist}">
                        <Grid>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAYPAUSE}" Grid.Column="1" Margin="10" CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}" Visibility="{Binding IsPreviewing,ConverterParameter=0,Converter={StaticResource B2VP}}">
                                <ctl:GeoImage.Style>
                                    <Style TargetType="ctl:GeoImage">
                                        <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="False">
                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ctl:GeoImage.Style>
                            </ctl:GeoImage>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAYPAUSE}" Grid.Column="1" Margin="10" CommandParameter="{Binding PreviewControlHandle}" Command="{Binding StopControlHandleAndResumeCommand}" Visibility="{Binding IsPreviewing,Converter={StaticResource B2V}}">
                                <ctl:GeoImage.Style>
                                    <Style TargetType="ctl:GeoImage">
                                        <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="False">
                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ctl:GeoImage.Style>
                            </ctl:GeoImage>
                        </Grid>
                    </Border>
                    <ctl:GeoImage GeoSource="{DynamicResource GEO_NEXT}" Grid.Column="2" Margin="10,0,0,0" Width="16" Height="16" CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding Playlist.NextItem.TitleArtist}">
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPreviewing}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="15,0,0,0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="10,0,0,0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                    <ctl:GeoImage GeoSource="{DynamicResource AddGeometry}" Grid.Column="2" Width="16" Height="16" CommandParameter="{Binding StreamMetadata}" Command="{Binding LoadAndAddCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" Visibility="{Binding IsPreviewing,Converter={StaticResource B2V},Delay=250}">
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPreviewing}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="10,0,0,0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="10,55,0,0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="0" BeginTime="0:0:0.10" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                </Grid>
                <!--Controls-->
                <TextBlock Grid.Row="0" Grid.ColumnSpan="7" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,10" TextAlignment="Center" Visibility="{Binding ElementName=YourOwner,Path=InfoText,Converter={StaticResource N2V}}">                    
                    <Run Text="{Binding ElementName=YourOwner,Path=InfoText,Mode=OneWay}"/>
                </TextBlock>
                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Grid.Row="1" Grid.Column="1" ClipToBounds="True">
                    <ToggleButton Margin="0,10,10,10" Visibility="{Binding ElementName=YourOwner,Path=IsBigCover,Converter={StaticResource B2VP},ConverterParameter=0,Delay=500}" IsChecked="{Binding ElementName=YourOwner,Path=IsBigCover}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonCustom}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBigCover}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation To="-55,10,10,10" Duration="0:0:0.5" AccelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard BeginTime="0:0:0.5">
                                                    <ThicknessAnimation To="0,10,10,10" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <ToggleButton.Content>
                            <Image Source="{Binding StreamMetadata.DefaultCover}">
                                <Image.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource LOC_VIEW}" CommandParameter="{Binding StreamMetadata.DefaultCover}" Command="{Binding Source={x:Static utils:Commands.ViewImageCommand}}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource EyeOpenGeometry}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource LOC_NOWPLAYING}" CommandParameter="6" Command="{StaticResource Commands.SetTabIndexCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource PageModeGeometry}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource LOC_PROPERTIES}" CommandParameter="{Binding StreamMetadata}" Command="{Binding Source={x:Static utils:Commands.ShowMetadataInfoCommand}}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource LOC_ENQUEUE}" Command="{Binding AddToQueueCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource GEO_ADDTOLIST_FIRST}"/>
                                            </MenuItem.Icon>
                                            <MenuItem.CommandParameter>
                                                <MultiBinding Converter="{StaticResource GMVC}">
                                                    <MultiBinding.Bindings>
                                                        <Binding Source="{x:Static utils:SharedProperties.Instance}" Path="Player.Playlist"/>
                                                        <Binding Source="{x:Static utils:SharedProperties.Instance}" Path="Player.StreamMetadata"/>
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </MenuItem.CommandParameter>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource LOC_ADDTOPLAYLIST}" CommandParameter="{Binding StreamMetadata}" Command="{Binding AddToPlaylistFromPickerCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource GEO_LIBRARY}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem CommandParameter="{Binding Playlist}" Command="{Binding SavePlaylistCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource SaveGeometry}"/>
                                            </MenuItem.Icon>
                                            <MenuItem.Header>
                                                <TextBlock>
                                            <Run Text="{DynamicResource LOC_SAVE}"/> <Run Text="{Binding Playlist.Name}"/>
                                                </TextBlock>
                                            </MenuItem.Header>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource LOC_REFRESHCOVER}" CommandParameter="{Binding StreamMetadata}" Command="{Binding RefreshMetadataCoverCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource RotateLeftGeometry}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource LOC_REFRESH}" CommandParameter="{Binding StreamMetadata}" Command="{Binding RefreshMetadataTagsCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource RotateRightGeometry}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                    </ContextMenu>
                                </Image.ContextMenu>
                            </Image>
                        </ToggleButton.Content>
                    </ToggleButton>
                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0">
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding StreamMetadata.Title}" HorizontalAlignment="Left" FontSize="16" FontWeight="DemiBold" Margin="0,0,0,5" TextTrimming="CharacterEllipsis" MaxWidth="150"/>
                        <ctl:ClickTextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Text="{Binding StreamMetadata.DefaultArtist,Mode=OneWay}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" Opacity="0.5" TextTrimming="CharacterEllipsis" MaxWidth="250" />
                    </StackPanel>
                    <TextBlock Text="{Binding PositionString}" d:Text="00:00" VerticalAlignment="Center" Margin="0,0,5,0"/>
                    <TextBlock VerticalAlignment="Center" Margin="0,0,10,0" Visibility="{Binding IsABLoop,Converter={StaticResource B2V}}">
                        (<Run Text="{Binding ABLoop.AString,Mode=OneWay}" d:Text="00:00"/>)
                    </TextBlock>
                </StackPanel>
                <!--Cover, Title/Artist, Position-->
                <Grid Margin="0,0,10,0" Grid.Row="1" Grid.Column="2">
                    <ProgressBar Width="Auto" Height="1" VerticalAlignment="Bottom" Margin="0,0,10,20" Maximum="{Binding Length}" Value="{Binding Position}" Style="{StaticResource ProgressBarFlat}" Background="{DynamicResource SecondaryBorderBrush}"/>
                    <ctl:ClickProgressBar Width="Auto" Height="20" hc:VisualElement.Text="" VerticalAlignment="Center" Margin="0,0,10,0" Maximum="{Binding Length}" Value="{Binding Position}" IsDraggable="True" IsDragging="{Binding SuspendPositionUpdate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ProgressBarFlat}" Background="Transparent">
                        <ctl:ClickProgressBar.Foreground>
                            <ImageBrush ImageSource="{Binding Source={StaticResource RWVFX},Path=CurrentFrame,Mode=OneWay}" Stretch="None" AlignmentX="Left"/>
                        </ctl:ClickProgressBar.Foreground>
                    </ctl:ClickProgressBar>
                    <!--<Slider Width="350" VerticalAlignment="Center" Margin="0,0,10,0" Maximum="{Binding Length}" Value="{Binding Position, Delay=100}" IsMoveToPointEnabled="True" Visibility="Collapsed">
                            <Slider.Style>
                                <Style TargetType="Slider" BasedOn="{StaticResource SliderBaseStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Slider.Width)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="1" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Slider.Width)" To="350" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Slider.Style>
                        </Slider>-->
                    <ProgressBar Width="Auto" IsIndeterminate="True" VerticalAlignment="Center" Margin="0,0,10,0" Visibility="{Binding IsLoadingStream,Converter={StaticResource B2V}}" Style="{StaticResource ProgressBarPrimaryStripe}"/>
                </Grid>
                <!--Seek Bar-->
                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="3">
                    <TextBlock VerticalAlignment="Center" Margin="0,0,10,0" Text="/" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=Opacity,Converter={StaticResource D2V}}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(TextBlock.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock Text="{Binding StreamMetadata.LengthString}" d:Text="00:00" VerticalAlignment="Center" Margin="0,0,5,0" />
                    <TextBlock VerticalAlignment="Center" Margin="0,0,0,0" Visibility="{Binding IsABLoop,Converter={StaticResource B2V}}">
                        (<Run Text="{Binding ABLoop.BString,Mode=OneWay}" d:Text="00:00"/>)
                    </TextBlock>
                </StackPanel>
                <!--Length-->
                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Grid.Row="1" Grid.Column="4">
                    <!--Controls + Volume-->
                    <!--<Button Style="{StaticResource ButtonIcon}" hc:IconElement.Geometry="{StaticResource DownloadGeometry}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" Visibility="Collapsed"/>-->
                    <!--Visibility="{Binding DownloadFinished,Converter={StaticResource Boolean2VisibilityConverter}}"/>-->
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.CacheMode>
                            <BitmapCache/>
                        </StackPanel.CacheMode>
                        <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding StreamMetadata.IsFavorite,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_STAR_EMPTY}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_STAR_FILLED}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                        <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding Playlist.IsLooping,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ALL}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_LOOP_ALL}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                        <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding Playlist.IsShuffling,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ARROW}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_CIRCLE_SHUFFLE}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                        <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding IsLooping,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ONE}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_LOOP_ONE}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                        <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding IsMuted,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_VOLUME}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_SPEAKER}" Height="38" Width="38" VerticalAlignment="Center" />
                    </StackPanel>
                    <Slider Width="72" Value="{Binding Volume,Mode=TwoWay,Delay=10}" Maximum="100" SmallChange="5" LargeChange="10" IsMoveToPointEnabled="True" VerticalAlignment="Center">
                        <Slider.Style>
                            <Style TargetType="Slider" BasedOn="{StaticResource SliderBaseStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHighVolume}" Value="True">
                                        <Setter Property="hc:ThemeManager.RequestedAccentColor" Value="{DynamicResource DangerBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighVolume}" Value="False">
                                        <Setter Property="hc:ThemeManager.RequestedAccentColor" Value="{DynamicResource InfoBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Slider.Style>
                    </Slider>
                </StackPanel>
                <ctl:GeoImage Grid.Column="5" Grid.Row="1" GeoSource="{StaticResource GEO_PULSE}" CheckedBrush="{DynamicResource PrimaryBrush}" Margin="0,0,10,0" MaxHeight="22" IsCheckable="True" IsChecked="{Binding ElementName=Drawer_Right,Path=IsOpen,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                    <ctl:GeoImage.Style>
                        <Style TargetType="ctl:GeoImage">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static utils:SharedProperties.Instance},Path=AllInitialized}" Value="True">
                                    <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Source={x:Static utils:SharedProperties.Instance},Path=AllInitialized}" Value="False">
                                    <Setter Property="GeoBrush" Value="{DynamicResource WarningBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ctl:GeoImage.Style>
                </ctl:GeoImage>
                <ItemsControl Grid.Column="6" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Stretch" ItemsSource="{Binding EffectsProfile}" Background="Transparent" MinWidth="32">
                    <ItemsControl.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{DynamicResource LOC_ADD}" Command="{Binding AddAudioEffectCommand}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{StaticResource AddGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_CLEAR}" Command="{Binding ClearAudioEffectsCommand}">
                                <MenuItem.Icon>
                                    <ctl:GeoImage GeoSource="{StaticResource DeleteFillCircleGeometry}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ItemsControl.ContextMenu>
                    <ItemsControl.Resources>
                        <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonPrimary.Small}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsChecked}" Value="True">
                                    <Setter Property="hc:IconElement.Geometry" Value="{StaticResource AudioGeometry}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsChecked}" Value="False">
                                    <Setter Property="hc:IconElement.Geometry" Value="{x:Null}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ItemsControl.Resources>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ToggleButton IsChecked="{Binding IsEnabled,Mode=TwoWay}" ToolTip="{Binding Description}" Margin="0,0,5,5" HorizontalAlignment="Left">
                                <ToggleButton.Content>
                                    <TextBlock>
                                        <Run Text="{Binding Priority}"/>. <Run Text="{Binding ShortName}"/>
                                    </TextBlock>
                                </ToggleButton.Content>
                                <ToggleButton.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource LOC_CONFIG}" CommandParameter="{Binding }" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.ConfigAudioEffectCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource LOC_REMOVE}" CommandParameter="{Binding }" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.RemoveAudioEffectCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{StaticResource RemoveGeometry}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                    </ContextMenu>
                                </ToggleButton.ContextMenu>
                            </ToggleButton>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Grid>
            <Grid x:Name="Grid_SideBar_Left" DockPanel.Dock="Left" Background="{DynamicResource ThirdlyRegionBrush}" Width="180">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="-500,0,0,0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                <!--To="-150,0,0,0"-->
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <!--Tabs-->
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
                    <ScrollViewer.Resources>
                        <Style TargetType="{x:Type RadioButton}">
                            <Setter Property="Content" Value="" />
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="FontSize" Value="11" />
                            <Setter Property="FontWeight" Value="DemiBold" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Grid Background="{TemplateBinding BorderBrush}">
                                            <StackPanel Orientation="Horizontal" Margin="0,5">
                                                <Rectangle Fill="{TemplateBinding Foreground}" Width="5" Margin="0,0,20,0"/>
                                                <ctl:GeoImage GeoBrush="{TemplateBinding Foreground}" GeoSource="{TemplateBinding hc:IconElement.Geometry}" Margin="0,0,5,0" MaxWidth="12" MaxHeight="12"/>
                                                <ContentPresenter />
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="BorderBrush" Value="{DynamicResource SecondaryRegionBrush}" />
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter Property="BorderBrush" Value="Transparent" />
                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ScrollViewer.Resources>
                    <VirtualizingStackPanel>
                        <VirtualizingStackPanel.CacheMode>
                            <BitmapCache/>
                        </VirtualizingStackPanel.CacheMode>
                        <VirtualizingStackPanel Margin="0,0,0,10">
                            <TextBlock Text="{DynamicResource LOC_TABS}" Margin="30,10,0,10" Opacity="0.5" />
                            <RadioButton x:Name="RadioButton_MainTabControl_Home" hc:IconElement.Geometry="{StaticResource AllGeometry}" GroupName="Tabs" Content="{DynamicResource LOC_HOME}" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="0" Command="{StaticResource Commands.SetTabIndexCommand}" />
                            <RadioButton x:Name="RadioButton_MainTabControl_PlaylistQueue" hc:IconElement.Geometry="{StaticResource AlignLeftGeometry}" GroupName="Tabs" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="1" Command="{StaticResource Commands.SetTabIndexCommand}">
                                <TextBlock><Run Text="{DynamicResource LOC_PLAYLIST}" />/<Run Text="{DynamicResource LOC_QUEUE}" /></TextBlock>
                            </RadioButton>
                            <RadioButton x:Name="RadioButton_MainTabControl_Library" hc:IconElement.Geometry="{StaticResource GEO_LIBRARY}" GroupName="Tabs" Content="{DynamicResource LOC_LIBRARY}" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="2" Command="{StaticResource Commands.SetTabIndexCommand}" />
                            <RadioButton x:Name="RadioButton_MainTabControl_Search" hc:IconElement.Geometry="{StaticResource SearchGeometry}" GroupName="Tabs" Content="{DynamicResource LOC_SEARCH}" HorizontalAlignment="Stretch" CommandParameter="3" Command="{StaticResource Commands.SetTabIndexCommand}" />
                        </VirtualizingStackPanel>
                        <RadioButton x:Name="RadioButton_MainTabControl_Settings" hc:IconElement.Geometry="{StaticResource ConfigGeometry}" GroupName="Tabs" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="4" Command="{StaticResource Commands.SetTabIndexCommand}">
                            <Grid>
                                <TextBlock Text="{DynamicResource LOC_SETTINGS}" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=SleepTimer.IsEnabled,ConverterParameter=0,Converter={StaticResource B2VP}}"/>
                                <TextBlock Text="{Binding Source={x:Static utils:SharedProperties.Instance},Path=SleepTimer.TimeLeft.TotalSeconds,Converter={StaticResource N2RN},ConverterParameter=0+ s}" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=SleepTimer.IsEnabled,Converter={StaticResource B2V}}"/>
                            </Grid>
                        </RadioButton>
                        <RadioButton x:Name="RadioButton_MainTabControl_MetadataGroup" hc:IconElement.Geometry="{StaticResource GEO_MUSICNOTE}" GroupName="Tabs" d:Content="Hello World" Content="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusedGroup.Name}" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusedGroup,Converter={StaticResource N2V}}"  HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="5" Command="{StaticResource Commands.SetTabIndexCommand}" />
                        <RadioButton x:Name="RadioButton_MainTabControl_UPnP" hc:IconElement.Geometry="{StaticResource GEO_NETWORK}" GroupName="Tabs" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="7" Command="{StaticResource Commands.SetTabIndexCommand}">
                            <Grid>
                                <TextBlock Text="{DynamicResource LOC_LAN}" d:Visibility="Collapsed" Visibility="{Binding Source={StaticResource uProvider},Path=IsUsingRenderer,ConverterParameter=0,Converter={StaticResource B2VP}}"/>
                                <TextBlock d:Visibility="Visible" Visibility="{Binding Source={StaticResource uProvider},Path=IsUsingRenderer,Converter={StaticResource B2V}}">
                                    <Run d:Text="Hello World" Text="{Binding Source={StaticResource uProvider},Path=SelectedRenderer.CurrentTrackTitle}"/><LineBreak/>
                                    <Run d:Text="00:00" Text="{Binding Source={StaticResource uProvider},Path=SelectedRenderer.PositionString,Mode=OneWay}"/>/<Run d:Text="00:00" Text="{Binding Source={StaticResource uProvider},Path=SelectedRenderer.DurationString,Mode=OneWay}"/><LineBreak/>                                    
                                    <Run d:Text="Renderer Name" Text="{Binding Source={StaticResource uProvider},Path=SelectedRenderer.Info.Name}" FontSize="11" FontStyle="Italic" FontWeight="Normal"/>
                                </TextBlock>
                            </Grid>
                        </RadioButton>
                        <VirtualizingStackPanel>
                            <TextBlock Text="{DynamicResource LOC_LIBRARY}" Margin="30,0,0,10" Opacity="0.5" />
                            <ItemsControl ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=RecommendedPlaylists}" Margin="5,0,5,10" Style="{StaticResource ItemsControlPlaylistContainerBaseStyle}"/>
                            <TextBlock Text="{DynamicResource LOC_PLAYLIST}" Margin="30,0,0,10" Opacity="0.5" />
                            <ItemsControl ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=CustomPlaylists}" Margin="5,0,5,10" Style="{StaticResource ItemsControlPlaylistContainerBaseStyle}"/>
                        </VirtualizingStackPanel>
                    </VirtualizingStackPanel>
                </ScrollViewer>
                <!--Cover-->
                <Grid Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="True">
                    <ctl:GeoImage x:Name="SideBar_Left_Cover" Grid.Column="0" MaxHeight="348" MinHeight="32" Source="{Binding StreamMetadata.DefaultCover}" d:Source="/Resources/MusicRecord.png" CommandParameter="1" Command="{StaticResource Commands.SetTabIndexCommand}" Visibility="{Binding ElementName=YourOwner,Path=IsBigCover,Converter={StaticResource B2V}}" Tag="{Binding ElementName=YourOwner}">
                        <ctl:GeoImage.CacheMode>
                            <BitmapCache/>
                        </ctl:GeoImage.CacheMode>
                        <ctl:GeoImage.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{DynamicResource LOC_VIEW}" CommandParameter="{Binding StreamMetadata.DefaultCover}" Command="{Binding Source={x:Static utils:Commands.ViewImageCommand}}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{StaticResource EyeOpenGeometry}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_NOWPLAYING}" CommandParameter="6" Command="{StaticResource Commands.SetTabIndexCommand}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{StaticResource PageModeGeometry}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_PROPERTIES}" CommandParameter="{Binding StreamMetadata}" Command="{Binding Source={x:Static utils:Commands.ShowMetadataInfoCommand}}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="{DynamicResource LOC_ENQUEUE}" Command="{Binding AddToQueueCommand}">
                                    <MenuItem.CommandParameter>
                                        <MultiBinding Converter="{StaticResource GMVC}">
                                            <MultiBinding.Bindings>
                                                <Binding Source="{x:Static utils:SharedProperties.Instance}" Path="Player.Playlist"/>
                                                <Binding Source="{x:Static utils:SharedProperties.Instance}" Path="Player.StreamMetadata"/>
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </MenuItem.CommandParameter>
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{StaticResource GEO_ADDTOLIST_FIRST}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_ADDTOPLAYLIST}" CommandParameter="{Binding StreamMetadata}" Command="{Binding AddToPlaylistFromPickerCommand}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{StaticResource GEO_ADDTOLIST_LAST}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem CommandParameter="{Binding Playlist}" Command="{Binding SavePlaylistCommand}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{StaticResource SaveGeometry}"/>
                                    </MenuItem.Icon>
                                    <MenuItem.Header>
                                        <TextBlock>
                                            <Run Text="{DynamicResource LOC_SAVE}"/> <Run Text="{Binding Playlist.Name}"/>
                                        </TextBlock>
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="{DynamicResource LOC_REFRESHCOVER}" CommandParameter="{Binding StreamMetadata}" Command="{Binding RefreshMetadataCoverCommand}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{StaticResource RotateLeftGeometry}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_REFRESH}" CommandParameter="{Binding StreamMetadata}" Command="{Binding RefreshMetadataTagsCommand}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{StaticResource RotateRightGeometry}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="{DynamicResource LOC_PATTERNSELECTION}" IsCheckable="True" IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ContextMenu},Path=PlacementTarget.Tag.IsPatternSelection,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{StaticResource AllGeometry}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </ctl:GeoImage.ContextMenu>
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="1" Duration="0:0:0.2" DecelerationRatio="0.9" Storyboard.TargetProperty="(ctl:GeoImage.Opacity)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation To="0.5" Duration="0:0:0.2" DecelerationRatio="0.9" Storyboard.TargetProperty="(ctl:GeoImage.Opacity)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsTransitioning,Delay=500}" Value="False">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation From="348,0,-348,0" To="0,0,0,0" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ctl:GeoImage.Margin)">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CircleEase EasingMode="EaseOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                    <Grid Background="{DynamicResource WarningBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="{Binding IsPreviewing,Converter={StaticResource B2V}}">
                        <Grid.RenderTransform>
                            <SkewTransform AngleX="-32"/>
                        </Grid.RenderTransform>
                        <TextBlock TextAlignment="Left" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalAlignment="Left" Text="{DynamicResource LOC_PREVIEW}">
                            <TextBlock.RenderTransform>
                                <SkewTransform AngleX="32"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Grid>
                    <ToggleButton VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="{Binding ElementName=YourOwner,Path=IsBigCover,Converter={StaticResource B2V}}" Style="{StaticResource ToggleButtonFlip.Small}" Margin="0,2,2,0" d:IsChecked="True" IsChecked="{Binding ElementName=YourOwner,Path=IsBigCover}">
                        <hc:StatusSwitchElement.CheckedElement>
                            <TextBlock Text="v" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </hc:StatusSwitchElement.CheckedElement>
                    </ToggleButton>
                    <Grid Background="{DynamicResource PrimaryBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Opacity="1">
                        <Grid.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBigCover}" Value="False">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation To="-150,0,0,0" Duration="0:0:0.5" AccelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation To="0" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RenderTransform>
                            <SkewTransform AngleX="-32"/>
                        </Grid.RenderTransform>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock TextAlignment="Left" VerticalAlignment="Center" Margin="5,0,10,0">
                            <TextBlock.RenderTransform>
                                <SkewTransform AngleX="32"/>
                            </TextBlock.RenderTransform>
                            <Run d:Text="XQ" Text="{Binding StreamQuality}"/>: <Run d:Text="000" Text="{Binding Bitrate}"/>Kbps
                        </TextBlock>
                        <ctl:GeoImage Grid.Column="1" VerticalAlignment="Center" MaxHeight="16" GeoSource="{DynamicResource GEO_INTERNET}" Visibility="{Binding StreamMetadata.IsRemote,Converter={StaticResource B2V}}" Margin="0,2,15,2">
                            <ctl:GeoImage.CacheMode>
                                <BitmapCache/>
                            </ctl:GeoImage.CacheMode>
                            <ctl:GeoImage.RenderTransform>
                                <SkewTransform AngleX="32"/>
                            </ctl:GeoImage.RenderTransform>
                        </ctl:GeoImage>
                    </Grid>
                </Grid>
                <ctl:RandomizeGrid Grid.Row="1" Command="{Binding PreviewCommand}" Minimum="0" Maximum="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.Count}" AutoHide="True" d:Visibility="Collapsed" Visibility="{Binding ElementName=YourOwner,Path=IsPatternSelection,Mode=TwoWay,Converter={StaticResource B2V}}"/>
                <Thumb Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" DragDelta="Thumb_Sidebar_Left_DragDelta" Style="{StaticResource ToolBarThumbHorizontalStyle}"/>
            </Grid>
            <Grid x:Name="Grid_SideBar_Right" DockPanel.Dock="Right" Background="{DynamicResource ThirdlyRegionBrush}" Width="180">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="0,0,-500,0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                <!--To="0,0,-150,0"-->
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.CacheMode>
                    <BitmapCache/>
                </Grid.CacheMode>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.Resources>
                    <utils:DeezerProvider x:Key="InfoDeezerProvider" Tag="Right Sidebar" DecodeToThumbnails="True" ArtistInfoOnly="True" ArtistQuery="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.StreamMetadata.DefaultArtist}" BindFetchToDefaultPlayerMediaLoaded="True"/>
                </Grid.Resources>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Margin="10,0,0,10">
                    <StackPanel>
                        <TextBlock Text="{DynamicResource LOC_COMINGNEXT}" Margin="10,0,0,10"/>
                        <Grid DataContext="{Binding Playlist.NextItem}" ToolTip="{DynamicResource LOC_NEXT}" Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col0"/>
                                <ColumnDefinition SharedSizeGroup="Col1"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ctl:ExpandableImage Width="Auto" Height="32" Grid.RowSpan="2" VerticalAlignment="Center" d:Source="Resources/MusicRecord.png" Source="{Binding Title,Converter={StaticResource T2IS}}" Margin="0,0,10,0"/>
                            <ctl:ClickTextBlock Grid.Column="1" CommandTriggerMode="DoubleClick" d:Text="Title" Text="{Binding Title}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Player.Playlist}" Command="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Player.NextCommand}" FontSize="14" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Column="1" Grid.Row="1">
                                <Run d:Text="Artist" Text="{Binding DefaultArtist,Mode=OneWay}"/> • <Run d:Text="Album" Text="{Binding Album}"/>
                            </TextBlock>
                        </Grid>
                        <TextBlock Text="{DynamicResource LOC_PREVIOUSLY}" Margin="10,0,0,10"/>
                        <Grid DataContext="{Binding Playlist.PreviousItem}" ToolTip="{DynamicResource LOC_PREVIOUS}" Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col0"/>
                                <ColumnDefinition SharedSizeGroup="Col1"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ctl:ExpandableImage Width="Auto" Height="32" Grid.RowSpan="2" VerticalAlignment="Center" d:Source="Resources/MusicRecord.png" Source="{Binding Title,Converter={StaticResource T2IS}}" Margin="0,0,10,0"/>
                            <ctl:ClickTextBlock Grid.Column="1" CommandTriggerMode="DoubleClick" d:Text="Title" Text="{Binding Title}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Player.Playlist}" Command="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Player.PreviousCommand}" FontSize="14" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Column="1" Grid.Row="1">
                                <Run d:Text="Artist" Text="{Binding DefaultArtist,Mode=OneWay}"/> • <Run d:Text="Album" Text="{Binding Album}"/>
                            </TextBlock>
                        </Grid>
                        <GroupBox Header="{DynamicResource LOC_INFO}" Style="{StaticResource GroupBoxOriginal}" Margin="0,0,10,10" BorderThickness="0">
                            <StackPanel>
                                <!--<TextBlock Margin="0,0,0,10" TextWrapping="Wrap" Visibility="{Binding StreamMetadata.Title,Converter={StaticResource N2V}}">
                                <Run Text="{DynamicResource LOC_TITLE}" FontWeight="DemiBold" FontSize="14"/> <LineBreak/><Run Text="{Binding StreamMetadata.Title}" d:Text="Utena"/>
                                </TextBlock>-->
                                <Grid Visibility="{Binding Source={StaticResource InfoDeezerProvider},Path=Artist,Converter={StaticResource N2V}}" Margin="0,0,0,10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.RowSpan="3" Background="Black" CornerRadius="10" x:Name="Border_SideBar_Right_Cover_Mask"/>
                                    <ctl:ExpandableImage Grid.RowSpan="3" Source="{Binding Source={StaticResource InfoDeezerProvider},Path=Artist.Cover}">
                                        <ctl:ExpandableImage.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=Border_SideBar_Right_Cover_Mask}"/>
                                        </ctl:ExpandableImage.OpacityMask>
                                    </ctl:ExpandableImage>
                                    <Border Grid.Row="1" Grid.RowSpan="2" Background="{DynamicResource RegionBrush}" Opacity="0.75" CornerRadius="0,0,10,10"/>
                                    <TextBlock Grid.Row="1" Text="{Binding Source={StaticResource InfoDeezerProvider},Path=Artist.Name}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="5"/>
                                    <WrapPanel Orientation="Horizontal" Grid.Row="2" Margin="5,0,5,5">
                                        <TextBlock Grid.Row="2" Margin="0,0,5,5">
                                        <Run Text="{Binding Source={StaticResource InfoDeezerProvider},Path=Artist.PlayCount}"/> Fans, <Hyperlink NavigateUri="{Binding Source={StaticResource InfoDeezerProvider},Path=Artist.Tag}" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    See More
                                </Hyperlink>
                                        </TextBlock>
                                        <ctl:ClickTextBlock Text="{DynamicResource LOC_VIEW}" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}">
                                            <ctl:ClickTextBlock.CommandParameter>
                                                <MultiBinding ConverterParameter="/" Converter="{StaticResource GMVC}">
                                                    <MultiBinding.Bindings>
                                                        <Binding>
                                                            <Binding.Source>
                                                                <sys:String>artist</sys:String>
                                                            </Binding.Source>
                                                        </Binding>
                                                        <Binding Source="{StaticResource InfoDeezerProvider}" Path="Artist.UID"/>
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </ctl:ClickTextBlock.CommandParameter>
                                        </ctl:ClickTextBlock>
                                    </WrapPanel>
                                </Grid>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap" Visibility="{Binding Source={StaticResource InfoDeezerProvider},Path=Artist,ConverterParameter=0,Converter={StaticResource N2V}}">
                                <Run Text="{DynamicResource LOC_ARTIST}" FontWeight="DemiBold" FontSize="14"/> <LineBreak/><Run Text="{Binding StreamMetadata.JoinedArtists,Mode=OneWay}" d:Text="Reol"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap" Visibility="{Binding StreamMetadata.Album,Converter={StaticResource N2V}}">
                                <Run Text="{DynamicResource LOC_ALBUM}" FontWeight="DemiBold" FontSize="14"/> <LineBreak/><Run Text="{Binding StreamMetadata.Album}" d:Text="Bunmei"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap" Visibility="{Binding StreamMetadata.Genres,Converter={StaticResource N2V}}">
                                <Run Text="{DynamicResource LOC_GENRES}" FontWeight="DemiBold" FontSize="14"/> <LineBreak/><Run Text="{Binding StreamMetadata.JoinedGenres,Mode=OneWay}" d:Text="J-Pop"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap" Visibility="{Binding StreamMetadata.Year,Converter={StaticResource N2V}}">
                                <Run Text="{DynamicResource LOC_YEAR}" FontWeight="DemiBold" FontSize="14"/> <LineBreak/><Run Text="{Binding StreamMetadata.Year}" d:Text="2020"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap">
                                <Run Text="{DynamicResource LOC_LENGTH}" FontWeight="DemiBold" FontSize="14"/> <LineBreak/><Run Text="{Binding StreamMetadata.LengthString,Mode=OneWay}" d:Text="03:19"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap" Visibility="{Binding StreamMetadata.Provider,Converter={StaticResource N2V}}">
                                <Run Text="{DynamicResource LOC_PROVIDER}" FontWeight="DemiBold" FontSize="14"/> <LineBreak/><Run Text="{Binding StreamMetadata.Provider.Name,Mode=OneWay}" d:Text="I/O"/>
                                </TextBlock>
                                <ctl:ClickTextBlock Margin="0,0,0,10" CommandParameter="{Binding StreamMetadata.OriginalPath}" Command="{StaticResource Commands.OpenInExplorer}">
                                    <Run Text="{DynamicResource LOC_PATH}" FontWeight="DemiBold" FontSize="14"/>
                                    <LineBreak/>
                                    <Run Text="{Binding StreamMetadata.OriginalPath}" d:Text="Something Here"/>
                                </ctl:ClickTextBlock>
                                <TextBlock Margin="0,0,0,10">
                                <Run Text="{DynamicResource LOC_PLAYCOUNT}" FontWeight="DemiBold" FontSize="14"/> <LineBreak/><Run Text="{Binding StreamMetadata.PlayCount}" d:Text="Too Many Times"/>
                                </TextBlock>
                            </StackPanel>
                        </GroupBox>
                        <Grid Margin="0,0,10,20" Visibility="{Binding ElementName=YourOwner,Path=IsUsingSubtitles,Converter={StaticResource B2V}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center" Text="{DynamicResource LOC_LYRICS}"/>
                            <ToggleButton x:Name="Grid_SideBar_Right_ToggleButton_Subtitles" IsChecked="{Binding ElementName=YourOwner,Path=IsUsingSubtitles,Mode=OneWay}"  Grid.Column="1" HorizontalAlignment="Right" Width="Auto"/>
                        </Grid>
                        <ItemsControl x:Name="Grid_SideBar_Right_ItemsControl_Subtitles" Visibility="{Binding ElementName=Grid_SideBar_Right_ToggleButton_Subtitles,Path=IsChecked,Converter={StaticResource B2V}}"  ItemsSource="{Binding ElementName=YourOwner,Path=Subtitles}" MaxHeight="250" Margin="0,0,10,10">
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ScrollViewer VirtualizingPanel.IsVirtualizing="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                        <ScrollViewer.Resources>
                                            <Style TargetType="{x:Type RadioButton}">
                                                <Setter Property="GroupName" Value="RightSidebar_Subtitles"/>
                                                <Setter Property="Content" Value=""/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="FontSize" Value="12" />
                                                <Setter Property="FontWeight" Value="DemiBold" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <ContentPresenter Margin="0,5"/>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Opacity" Value="1"/>
                                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="False">
                                                                    <Setter Property="Opacity" Value="0.5" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ScrollViewer.Resources>
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <!--<ctl:ClickTextBlock CommandParameter="{Binding StartTime}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.SetPositionCommand}" Margin="0,0,0,10" ToolTip="{Binding StartTimeString,Mode=OneWay}">
                                        <Run Text="{Binding JoinedLines,Mode=OneWay}"/>
                                    </ctl:ClickTextBlock>-->
                                    <RadioButton IsChecked="{Binding IsCurrent,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" CommandParameter="{Binding StartTime}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.SetPositionCommand}" ToolTip="{Binding StartTimeString,Mode=OneWay}" Visibility="{Binding JoinedLines,Converter={StaticResource NS2V}}">
                                        <ctl:RunningTextBlock IsEnabled="{Binding IsCurrent}" HorizontalAlignment="Left" Text="{Binding JoinedLines,Mode=OneWay}" CompareTo="{Binding ElementName=Grid_SideBar_Right_ItemsControl_Subtitles,Path=ActualWidth}">
                                            <ctl:RunningTextBlock.CacheMode>
                                                <BitmapCache/>
                                            </ctl:RunningTextBlock.CacheMode>
                                        </ctl:RunningTextBlock>
                                    </RadioButton>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <TextBox Text="{Binding StreamMetadata,Converter={StaticResource M2L},Mode=OneWay}" Visibility="{Binding ElementName=YourOwner,Path=IsUsingSubtitles,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" IsReadOnly="True" MaxHeight="300" VerticalScrollBarVisibility="Auto">
                            <TextBox.CacheMode>
                                <BitmapCache/>
                            </TextBox.CacheMode>
                        </TextBox>
                    </StackPanel>
                </ScrollViewer>
                <Thumb Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" DragDelta="Thumb_SideBar_Right_DragDelta" MouseDoubleClick="Thumb_Sidebar_Right_MouseDoubleClick" Style="{StaticResource ToolBarThumbHorizontalStyle}"/>
            </Grid>
            <TabControl x:Name="TabControl_Main" BorderThickness="0">
                <!--Background="{DynamicResource SecondaryRegionBrush}"-->
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem" BasedOn="{StaticResource TabItemStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabItem Header="Home">
                    <Border Background="{DynamicResource VioletBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10" ClipToBounds="True">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TabControl x:Name="TabControl_Home_Sub" Margin="0,0,0,10" Style="{StaticResource TabControlCapsuleSolid}" SelectedIndex="{Binding ElementName=YourOwner,Path=HomeSubTabSelectedIndex}" TabStripPlacement="Bottom">
                                <TabControl.Resources>
                                    <utils:DeezerProvider x:Key="DeezerProvider" Tag="Home" DecodeToThumbnails="True" ArtistQuery="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayedArtist2.Name}" TrackQuery="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.RandomGroup[0].TitleArtist}" FetchProp="{Binding Source={x:Static utils:SharedProperties.Instance},Path=AllInitialized}"/>
                                </TabControl.Resources>
                                <TabItem Header="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayed.Title}" Visibility="Visible">
                                    <Grid DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayed}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ctl:ExpandableImage x:Name="Image_Home_XLarge" Source="{Binding DefaultCover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <ctl:ExpandableImage.Effect>
                                                <BlurEffect/>
                                            </ctl:ExpandableImage.Effect>
                                            <ctl:ExpandableImage.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ctl:ExpandableImage.Triggers>
                                        </ctl:ExpandableImage>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5">
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <ctl:ExpandableImage x:Name="Image_Home_Large" Source="{Binding DefaultCover}">
                                                    <ctl:ExpandableImage.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large,Path=ActualWidth}" VerticalAlignment="Top" CornerRadius="18" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </ctl:ExpandableImage.OpacityMask>
                                                </ctl:ExpandableImage>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>                                        
                                        <Run Text="{DynamicResource LOC_MOSTPLAYED}"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Title}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Text="{Binding DefaultArtist}" Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_PLAY}" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                            <Button Content="{DynamicResource LOC_PREVIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayedArtist.Name}" Visibility="Visible">
                                    <Grid DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayedArtist}">
                                        <Grid.Resources>
                                            <utils:FanArtProvider x:Key="FanArtProvider" BindToDefault="True"/>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ctl:ExpandableImage Source="{Binding Source={StaticResource FanArtProvider},Path=Background}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <ctl:ExpandableImage.Effect>
                                                <BlurEffect/>
                                            </ctl:ExpandableImage.Effect>
                                            <ctl:ExpandableImage.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ctl:ExpandableImage.Triggers>
                                        </ctl:ExpandableImage>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5" >
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <hc:LoadingIndicator Grid.ColumnSpan="2" Grid.RowSpan="3" Style="{StaticResource LoadingIndicatorWaveStyle}" IsActive="{Binding Source={StaticResource FanArtProvider},Path=IsBusy}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsActive,Converter={StaticResource B2V}}"/>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large2_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large2_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <ctl:ExpandableImage x:Name="Image_Home_Large2" Source="{Binding Source={StaticResource FanArtProvider},Path=Thumb}">
                                                    <ctl:ExpandableImage.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large2,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large2,Path=ActualWidth}" CornerRadius="8" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </ctl:ExpandableImage.OpacityMask>
                                                </ctl:ExpandableImage>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        <Run Text="{DynamicResource LOC_MOSTPLAYED}"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24">
                                            <Run Text="{DynamicResource LOC_PLAYCOUNT}"/>: <Run Text="{Binding PlayCount}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_VIEW}" CommandParameter="{Binding Name}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={StaticResource DeezerProvider},Path=Artist.Name}" Visibility="{Binding Source={StaticResource DeezerProvider},Path=Artist,Converter={StaticResource N2V}}">
                                    <Grid DataContext="{Binding Source={StaticResource DeezerProvider},Path=Artist}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ctl:ExpandableImage Source="{Binding Source={StaticResource DeezerProvider},Path=Artist.Cover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <ctl:ExpandableImage.Effect>
                                                <BlurEffect/>
                                            </ctl:ExpandableImage.Effect>
                                            <ctl:ExpandableImage.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ctl:ExpandableImage.Triggers>
                                        </ctl:ExpandableImage>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5" >
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <hc:LoadingIndicator Grid.ColumnSpan="2" Grid.RowSpan="3" Style="{StaticResource LoadingIndicatorWaveStyle}" IsActive="{Binding Source={StaticResource DeezerProvider},Path=IsBusy}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsActive,Converter={StaticResource B2V}}"/>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large4_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large4_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <ctl:ExpandableImage x:Name="Image_Home_Large4" Source="{Binding Source={StaticResource DeezerProvider},Path=Artist.Cover}">
                                                    <ctl:ExpandableImage.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large4,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large4,Path=ActualWidth}" CornerRadius="8" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </ctl:ExpandableImage.OpacityMask>
                                                </ctl:ExpandableImage>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        <Run Text="Deezer"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24">
                                            <Run Text="{DynamicResource LOC_PLAYCOUNT}"/>: <Run Text="{Binding PlayCount}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_VIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={StaticResource DeezerProvider},Path=RelatedArtist.Name}" Visibility="{Binding Source={StaticResource DeezerProvider},Path=RelatedArtist,Converter={StaticResource N2V}}">
                                    <Grid DataContext="{Binding Source={StaticResource DeezerProvider},Path=RelatedArtist}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ctl:ExpandableImage Source="{Binding Cover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <ctl:ExpandableImage.Effect>
                                                <BlurEffect/>
                                            </ctl:ExpandableImage.Effect>
                                            <ctl:ExpandableImage.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ctl:ExpandableImage.Triggers>
                                        </ctl:ExpandableImage>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5" >
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <hc:LoadingIndicator Grid.ColumnSpan="2" Grid.RowSpan="3" Style="{StaticResource LoadingIndicatorWaveStyle}" IsActive="{Binding Source={StaticResource DeezerProvider},Path=IsBusy}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsActive,Converter={StaticResource B2V}}"/>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large6_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large6_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <ctl:ExpandableImage x:Name="Image_Home_Large6" Source="{Binding Cover}">
                                                    <ctl:ExpandableImage.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large6,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large6,Path=ActualWidth}" CornerRadius="8" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </ctl:ExpandableImage.OpacityMask>
                                                </ctl:ExpandableImage>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        <Run Text="Deezer"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24">
                                            <Run Text="{DynamicResource LOC_PLAYCOUNT}"/>: <Run Text="{Binding PlayCount}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_VIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={StaticResource DeezerProvider},Path=Track.Title}" Visibility="{Binding Source={StaticResource DeezerProvider},Path=Track,Converter={StaticResource N2V}}">
                                    <Grid DataContext="{Binding Source={StaticResource DeezerProvider},Path=Track}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ctl:ExpandableImage x:Name="Image_Home_XLarge5" Source="{Binding DefaultCover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <ctl:ExpandableImage.Effect>
                                                <BlurEffect/>
                                            </ctl:ExpandableImage.Effect>
                                            <ctl:ExpandableImage.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ctl:ExpandableImage.Triggers>
                                        </ctl:ExpandableImage>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5">
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large5_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large5_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <ctl:ExpandableImage x:Name="Image_Home_Large5" Source="{Binding DefaultCover}">
                                                    <ctl:ExpandableImage.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large5,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large5,Path=ActualWidth}" VerticalAlignment="Top" CornerRadius="18" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </ctl:ExpandableImage.OpacityMask>
                                                </ctl:ExpandableImage>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>                                        
                                        <Run Text="Deezer"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Title}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Text="{Binding DefaultArtist}" Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_PLAY}" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" IsEnabled="False"/>
                                            <Button Content="{DynamicResource LOC_PREVIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{DynamicResource LOC_RANDOM}" Visibility="Visible">
                                    <Grid DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.RandomGroup}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <ctl:ExpandableImage Source="{Binding Cover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <ctl:ExpandableImage.Effect>
                                                <BlurEffect/>
                                            </ctl:ExpandableImage.Effect>
                                            <ctl:ExpandableImage.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </ctl:ExpandableImage.Triggers>
                                        </ctl:ExpandableImage>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5" >
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large3_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large3_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <ctl:ExpandableImage x:Name="Image_Home_Large3" Source="{Binding Cover}">
                                                    <ctl:ExpandableImage.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large3,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large3,Path=ActualWidth}" CornerRadius="8" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </ctl:ExpandableImage.OpacityMask>
                                                </ctl:ExpandableImage>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        <Run Text="{DynamicResource LOC_RANDOM}"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24" Text="{DynamicResource LOC_HINT_RANDOM}"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_VIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                            </TabControl>
                            <ListBox Grid.Row="1" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=RecommendedPlaylists}" Style="{StaticResource ListBoxCustom}" Margin="0,0,0,10">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ScrollViewer VirtualizingPanel.IsVirtualizing="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Horizontal">
                                            <VirtualizingStackPanel.Effect>
                                                <DropShadowEffect ShadowDepth="2" BlurRadius="5" Direction="270" Color="#19000000"/>
                                            </VirtualizingStackPanel.Effect>
                                        </VirtualizingStackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,0,10,10" Width="148" Height="210" Background="{DynamicResource MainContentBackgroundBrush}">
                                            <Grid.CacheMode>
                                                <BitmapCache/>
                                            </Grid.CacheMode>
                                            <Grid.Clip>
                                                <RectangleGeometry Rect="0,0,148,210" RadiusX="10" RadiusY="10"/>
                                            </Grid.Clip>
                                            <Grid Margin="10" VerticalAlignment="Top">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <ctl:ExpandableImage Source="{Binding .,Converter={StaticResource P2I}}" Stretch="Fill" Width="128" Height="128">
                                                    <ctl:ExpandableImage.Clip>
                                                        <RectangleGeometry Rect="0,0,128,128" RadiusX="10" RadiusY="10"/>
                                                    </ctl:ExpandableImage.Clip>
                                                </ctl:ExpandableImage>
                                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Opacity="0" Background="Transparent" Margin="10">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.Triggers>
                                                        <EventTrigger RoutedEvent="MouseEnter">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="(Grid.Opacity)" From="1" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Grid.Triggers>
                                                    <Button Content="{DynamicResource LOC_PLAY}" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Margin="0,0,10,0" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadPlaylistCommand}"/>
                                                    <Button Content="{DynamicResource LOC_VIEW}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}"/>
                                                </Grid>
                                                <TextBlock Grid.Row="1" TextWrapping="WrapWithOverflow" Text="{Binding Name}" Foreground="{DynamicResource PrimaryTextBrush}" FontWeight="DemiBold" FontSize="18" TextTrimming="CharacterEllipsis" Margin="10"/>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Grid Background="Black" Grid.RowSpan="2" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.HasItems,Converter={StaticResource B2VP},ConverterParameter=0}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_LIBRARY_WARNING}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,150,10,10" MinHeight="24" Width="Auto" Height="Auto"/>
                                <TextBlock Grid.Row="1" Text="{DynamicResource LOC_HINT_NOTHING}" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource TextBlock_HeaderStyle}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Playlist/Queue">
                    <Border Background="{DynamicResource VioletBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MaxHeight="300"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <WrapPanel Grid.Row="0"  Orientation="Horizontal">
                                <ctl:ClickTextBlock Grid.Row="0" Style="{StaticResource TextBlock_HeaderStyle}" CommandParameter="{Binding Playlist}" Command="{Binding ChangePlaylistNameCommand}" ToolTip="{Binding Playlist.Description}">
                                    <Run Text="{DynamicResource LOC_PLAYINGFROM}" />
                                    <Run Text="{Binding Playlist.Name}" /> (
                                    <Run Text="{Binding Playlist.ActualIndex,Mode=OneWay}"/> /
                                    <Run Text="{Binding Playlist.Count,Mode=OneWay}"/> )
                                </ctl:ClickTextBlock>
                                <ctl:ClickTextBlock Margin="10,0,0,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_CLEAR}" CommandParameter="{Binding Playlist}" Command="{Binding ClearPlaylistCommand}"/>
                                <ctl:ClickTextBlock Margin="10,0,0,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_NEW}" Command="{Binding NewPlaylistCommand}"/>
                            </WrapPanel>
                            <TextBlock Grid.Row="1" Style="{StaticResource TextBlock_HeaderStyle}" Visibility="{Binding Playlist.HasQueueItems,Converter={StaticResource B2V}}" >
                                <Run Text="{DynamicResource LOC_QUEUE}"/> (
                                <Run Text="{Binding Playlist.Queue.Count,Mode=OneWay}"/> )
                            </TextBlock>
                            <ListBox Grid.Row="2" ItemsSource="{Binding Playlist.Queue}" SelectedIndex="{Binding Playlist.QueueIndex}" Grid.IsSharedSizeScope="True" Margin="0,0,0,10" Visibility="{Binding Playlist.HasQueueItems,Converter={StaticResource B2V}}">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ScrollViewer Background="{DynamicResource VioletBrush}" VirtualizingPanel.IsVirtualizing="True">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="10,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Col0" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col1" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col2" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col3" Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ctl:ClickTextBlock Text="👁️" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Margin="0,0,20,0"/>
                                            <!--<ctl:ClickTextBlock Text="▶" Grid.Column="1" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Margin="0,0,20,0" IsEnabled="False"/>-->
                                            <StackPanel Margin="0,0,20,0" Grid.Column="2">
                                                <TextBlock Text="{Binding Title}" Margin="0,0,0,5" />
                                                <ctl:ClickTextBlock Text="{Binding DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                            </StackPanel>
                                            <ctl:ClickTextBlock Text="{Binding Album}" Margin="0,0,20,0" Grid.Column="3" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusAlbumCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <StackPanel Grid.Row="3" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,10">
                                <TextBlock Text="{DynamicResource LOC_PLAYLIST}" Style="{StaticResource TextBlock_HeaderStyle}" Visibility="{Binding Playlist.HasItems,Converter={StaticResource B2V}}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                <ToggleButton Content="{DynamicResource LOC_EDIT}" hc:IconElement.Geometry="{StaticResource DragVerticalGeometry}" IsChecked="{Binding ElementName=ListBox_Playlist,Path=IsDragDropMode,Mode=TwoWay}" VerticalAlignment="Center" Opacity="0.5">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonDefault}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ListBox_Playlist,Path=IsDragDropMode}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation To="1" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ToggleButton.Opacity)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation To="0.5" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ToggleButton.Opacity)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                                <hc:SearchBar Style="{StaticResource SearchBarExtend}" hc:InfoElement.Placeholder="{DynamicResource LOC_HINT_LOOKINGFORSOMETHING}" SearchStarted="SearchBar_Playlist_SearchStarted" Margin="10" />
                            </StackPanel>
                            <ctl:DragDropListBox x:Name="ListBox_Playlist" Grid.Row="4" ItemsSource="{Binding Playlist}" SelectedIndex="{Binding Playlist.Index}" Grid.IsSharedSizeScope="True" Visibility="{Binding Playlist.HasItems,Converter={StaticResource B2V}}" Style="{StaticResource ListBoxPlaylistBaseStyle}"/>
                            <Grid Grid.RowSpan="5" Visibility="{Binding IsPlayingFromPlaylist,Converter={StaticResource B2VP}, ConverterParameter=0}">
                                <Rectangle Fill="{DynamicResource RegionBrush}" Opacity="0.5"/>
                                <TextBlock Text="{DynamicResource LOC_DIRECTPLAY}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" Margin="0,0,0,24" FontFamily="Yu Gothic UI Light"/>
                                <Button Content="{DynamicResource LOC_QUERY_SWITCHTOPLAYLIST}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,48,0,0" Command="{Binding SyncWithPlaylistCommand}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Library">
                    <Border Background="{DynamicResource VioletBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <WrapPanel Grid.Row="0"  Orientation="Horizontal">
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_PLAYALL}" Command="{StaticResource Commands.PlayLibrary}"/>
                                <TextBlock Grid.Row="0" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0,0,10,0">
                                <Run Text="{DynamicResource LOC_SORT}"/>:
                                </TextBlock>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_NONE}" CommandParameter="none" Command="{StaticResource Commands.SortLibrary}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_TITLE}" CommandParameter="Title" Command="{StaticResource Commands.SortLibrary}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_ARTIST}" CommandParameter="Artist" Command="{StaticResource Commands.SortLibrary}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_ALBUM}" CommandParameter="Album" Command="{StaticResource Commands.SortLibrary}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_CUSTOM}" CommandParameter="Custom" Command="{StaticResource Commands.SortLibrary}"/>
                            </WrapPanel>
                            <ListBox x:Name="ListBox_Library" Grid.Row="1" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Style="{StaticResource ListBoxMetadataBaseStyle}" Grid.IsSharedSizeScope="True" Margin="10">
                                <!--<ListBox.Template>
                                <ControlTemplate>
                                    <ScrollViewer Background="{DynamicResource MainContentBackgroundBrush}" VirtualizingPanel.IsVirtualizing="True">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListBox.Template>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="10,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col1" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col2" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col3" Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ctl:ClickTextBlock Text="👁️" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Margin="0,0,20,0"/>
                                        <ctl:ClickTextBlock Text="▶" Grid.Column="1" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Margin="0,0,20,0"/>
                                        <StackPanel Margin="0,0,20,0" Grid.Column="2">
                                            <TextBlock Text="{Binding Title}" Margin="0,0,0,5" />
                                            <ctl:ClickTextBlock Text="{Binding DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </StackPanel>
                                        <ctl:ClickTextBlock Text="{Binding Album}" Margin="0,0,20,0" Grid.Column="3" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusAlbumCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>-->
                            </ListBox>
                            <Grid Background="Black" Grid.RowSpan="2" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.HasItems,Converter={StaticResource B2VP},ConverterParameter=0}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_LIBRARY_WARNING}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,150,10,10" MinHeight="24" Width="Auto" Height="Auto"/>
                                <TextBlock Grid.Row="1" Text="{DynamicResource LOC_HINT_NOTHING}" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource TextBlock_HeaderStyle}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Search">
                    <Border Background="{DynamicResource VioletBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <ScrollViewer>
                            <Grid Margin="10" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.SearchResult}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <hc:SearchBar Style="{StaticResource SearchBarExtend}" hc:InfoElement.Placeholder="{DynamicResource LOC_HINT_WHATAREYOULOOKINGFOR}" Text="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Library.SearchQuery,UpdateSourceTrigger=PropertyChanged}" Command="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Library.SearchCommand}" Margin="10" />
                                <StackPanel Grid.Row="1">
                                    <TextBlock Opacity="0.75" TextWrapping="Wrap">
                                    <Run Text="{DynamicResource LOC_HINT_LUCENE_SYNTAX}"/>
                                    <Hyperlink NavigateUri="https://lucene.apache.org/core/2_9_4/queryparsersyntax.html" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Learn More
                                    </Hyperlink>
                                    </TextBlock>
                                    <TextBlock FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10">
                                    <Run Text="{DynamicResource LOC_HINT_SEARCH_TOOK}"/> <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.SearchTookTime}"/> s
                                    </TextBlock>
                                </StackPanel>
                                <Grid Grid.Row="2" Margin="0,0,0,10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_TOPMATCH}" Grid.Column="0" Grid.Row="0" Margin="5,0,10,5" FontWeight="DemiBold" FontSize="18" MaxHeight="48" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                    <TextBlock Text="{DynamicResource LOC_AVAILABLEIN}" Grid.Column="1" Grid.Row="0" Margin="5,0,10,5" FontWeight="DemiBold" FontSize="18" MaxHeight="48" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="{Binding TopMatchRelatedPlaylists,Converter={StaticResource CC2V}}"/>
                                    <StackPanel Grid.Column="0" Grid.Row="1" Orientation="Horizontal" Margin="0,0,0,10">
                                        <Grid Margin="0,0,10,5" Width="320" Height="138" Background="{DynamicResource MainContentBackgroundBrush}" DataContext="{Binding TopTrackMatch}" Visibility="{Binding Item2,Converter={StaticResource N2V}}">
                                            <Grid.CacheMode>
                                                <BitmapCache/>
                                            </Grid.CacheMode>
                                            <Grid.Clip>
                                                <RectangleGeometry Rect="0,0,320,138" RadiusX="10" RadiusY="10"/>
                                            </Grid.Clip>
                                            <hc:Badge Text="{DynamicResource LOC_TRACK}" BadgeMargin="0,0,0,0">
                                                <Grid Margin="5" VerticalAlignment="Top">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <ctl:ExpandableImage Source="{Binding Item2.DefaultCover}" Stretch="Fill" Width="128" Height="128">
                                                        <ctl:ExpandableImage.Clip>
                                                            <RectangleGeometry Rect="0,0,128,128" RadiusX="10" RadiusY="10"/>
                                                        </ctl:ExpandableImage.Clip>
                                                    </ctl:ExpandableImage>
                                                    <TextBlock Grid.Column="1" Grid.Row="0" TextWrapping="WrapWithOverflow" Foreground="{DynamicResource PrimaryTextBrush}" FontWeight="DemiBold" FontSize="18" MaxHeight="48" TextTrimming="CharacterEllipsis" Margin="10">
                                                    <Run Text="{Binding Item2.Title}"/><LineBreak/><Run Text="{Binding Item2.DefaultArtist,Mode=OneWay}" FontWeight="Light" FontSize="14"/>
                                                    </TextBlock>
                                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,5">
                                                        <Button Content="{DynamicResource LOC_VIEW}" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Margin="0,0,10,0" CommandParameter="{Binding Item2}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}"/>
                                                        <Button Content="{DynamicResource LOC_PLAY}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" CommandParameter="{Binding Item2}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </hc:Badge>
                                        </Grid>
                                        <Grid Margin="0,0,10,5" Width="320" Height="138" Background="{DynamicResource MainContentBackgroundBrush}" DataContext="{Binding TopGroupMatch}" Visibility="{Binding Item2,Converter={StaticResource N2V}}">
                                            <Grid.CacheMode>
                                                <BitmapCache/>
                                            </Grid.CacheMode>
                                            <Grid.Clip>
                                                <RectangleGeometry Rect="0,0,320,138" RadiusX="10" RadiusY="10"/>
                                            </Grid.Clip>
                                            <hc:Badge Text="{Binding Item2.Type,Converter={StaticResource V2S}}" BadgeMargin="0,0,0,0">
                                                <Grid Margin="5" VerticalAlignment="Top">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <ctl:ExpandableImage Source="{Binding Item2.Cover}" Stretch="Fill" Width="128" Height="128">
                                                        <ctl:ExpandableImage.Clip>
                                                            <RectangleGeometry Rect="0,0,128,128" RadiusX="10" RadiusY="10"/>
                                                        </ctl:ExpandableImage.Clip>
                                                    </ctl:ExpandableImage>
                                                    <TextBlock Grid.Column="1" Grid.Row="1" TextWrapping="WrapWithOverflow" Foreground="{DynamicResource PrimaryTextBrush}" FontWeight="DemiBold" FontSize="18" MaxHeight="48" TextTrimming="CharacterEllipsis" Margin="10">
                                                <Run Text="{Binding Item2.Name}"/><LineBreak/><Run Text="{Binding Item2.Count,Mode=OneWay}" FontWeight="Light" FontSize="14"/> <Run Text="{DynamicResource LOC_TRACK}" FontWeight="Light" FontSize="14"/>
                                                    </TextBlock>
                                                    <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,5">
                                                        <Button Content="{DynamicResource LOC_PLAY}" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Margin="0,0,10,0" CommandParameter="{Binding Item2}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadGroupCommand}"/>
                                                        <Button Content="{DynamicResource LOC_VIEW}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" CommandParameter="{Binding Item2}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}"/>
                                                    </StackPanel>
                                                </Grid>
                                            </hc:Badge>
                                        </Grid>
                                    </StackPanel>
                                    <ListBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding TopMatchRelatedPlaylists}" Style="{StaticResource ListBoxCustom}" Visibility="{Binding TopMatchRelatedPlaylists,Converter={StaticResource CC2V}}" Margin="0,0,10,5">
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ScrollViewer VirtualizingPanel.IsVirtualizing="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                                                    <ItemsPresenter/>
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,0,10,0" Width="320" Height="138" Background="{DynamicResource MainContentBackgroundBrush}" Visibility="{Binding .,Converter={StaticResource N2V}}">
                                                    <Grid.CacheMode>
                                                        <BitmapCache/>
                                                    </Grid.CacheMode>
                                                    <Grid.Clip>
                                                        <RectangleGeometry Rect="0,0,320,138" RadiusX="10" RadiusY="10"/>
                                                    </Grid.Clip>
                                                    <hc:Badge Text="{Binding Type,Converter={StaticResource V2S}}" BadgeMargin="0,0,0,0">
                                                        <Grid Margin="5" VerticalAlignment="Top">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto"/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <ctl:ExpandableImage Source="{Binding Cover}" Stretch="Fill" Width="128" Height="128">
                                                                <ctl:ExpandableImage.Clip>
                                                                    <RectangleGeometry Rect="0,0,128,128" RadiusX="10" RadiusY="10"/>
                                                                </ctl:ExpandableImage.Clip>
                                                            </ctl:ExpandableImage>
                                                            <TextBlock Grid.Column="1" Grid.Row="1" TextWrapping="WrapWithOverflow" Foreground="{DynamicResource PrimaryTextBrush}" FontWeight="DemiBold" FontSize="18" MaxHeight="48" TextTrimming="CharacterEllipsis" Margin="10">
                                                            <Run Text="{Binding Name}"/><LineBreak/><Run Text="{Binding Count,Mode=OneWay}" FontWeight="Light" FontSize="14"/> <Run Text="{DynamicResource LOC_TRACK}" FontWeight="Light" FontSize="14"/>
                                                            </TextBlock>
                                                            <StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,5,5">
                                                                <Button Content="{DynamicResource LOC_PLAY}" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Margin="0,0,10,0" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadGroupCommand}"/>
                                                                <Button Content="{DynamicResource LOC_VIEW}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}"/>
                                                            </StackPanel>
                                                        </Grid>
                                                    </hc:Badge>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </Grid>
                                <ItemsControl Grid.Row="3" ItemsSource="{Binding GroupMatches}" Visibility="{Binding GroupMatches,Converter={StaticResource CC2V}}" Margin="0,0,0,10">
                                    <ItemsControl.Template>
                                        <ControlTemplate>
                                            <ScrollViewer VirtualizingPanel.IsVirtualizing="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                                                <ItemsPresenter/>
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </ItemsControl.Template>
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,0,10,5" Width="148" Height="238" Background="{DynamicResource MainContentBackgroundBrush}">
                                                <Grid.CacheMode>
                                                    <BitmapCache/>
                                                </Grid.CacheMode>
                                                <Grid.Clip>
                                                    <RectangleGeometry Rect="0,0,148,210" RadiusX="10" RadiusY="10"/>
                                                </Grid.Clip>
                                                <hc:Badge Text="{Binding Item2.Type,Converter={StaticResource V2S}}" BadgeMargin="0,0,0,0">
                                                    <Grid Margin="10" VerticalAlignment="Top">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <ctl:ExpandableImage Source="{Binding Item2,Converter={StaticResource P2I},ConverterParameter=0}" Stretch="Fill" Width="128" Height="128">
                                                            <ctl:ExpandableImage.Clip>
                                                                <RectangleGeometry Rect="0,0,128,128" RadiusX="10" RadiusY="10"/>
                                                            </ctl:ExpandableImage.Clip>
                                                        </ctl:ExpandableImage>
                                                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Opacity="0" Background="Transparent" Margin="10">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.Triggers>
                                                                <EventTrigger RoutedEvent="MouseEnter">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                                                <DoubleAnimation.EasingFunction>
                                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                                </DoubleAnimation.EasingFunction>
                                                                            </DoubleAnimation>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                                <EventTrigger RoutedEvent="MouseLeave">
                                                                    <BeginStoryboard>
                                                                        <Storyboard>
                                                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.Opacity)" From="1" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                                                <DoubleAnimation.EasingFunction>
                                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                                </DoubleAnimation.EasingFunction>
                                                                            </DoubleAnimation>
                                                                        </Storyboard>
                                                                    </BeginStoryboard>
                                                                </EventTrigger>
                                                            </Grid.Triggers>
                                                            <Button Content="{DynamicResource LOC_PLAY}" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Margin="0,0,10,0" CommandParameter="{Binding Item2}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadGroupCommand}"/>
                                                            <Button Content="{DynamicResource LOC_VIEW}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" CommandParameter="{Binding Item2}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}"/>
                                                        </Grid>
                                                        <TextBlock Grid.Row="1" TextWrapping="WrapWithOverflow" Text="{Binding Item2.Name}" Foreground="{DynamicResource PrimaryTextBrush}" FontWeight="DemiBold" FontSize="18" MaxHeight="48" TextTrimming="CharacterEllipsis" Margin="10"/>
                                                    </Grid>
                                                </hc:Badge>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                <ListBox Grid.Row="4" ItemsSource="{Binding TrackMatches}" Visibility="{Binding TrackMatches,Converter={StaticResource CC2V}}" Grid.IsSharedSizeScope="True" Margin="0,0,0,10" Style="{StaticResource ListBoxMetadataBaseStyle}" MaxHeight="240">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Background="Transparent" Margin="10,5">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="Col0" Width="Auto" />
                                                    <ColumnDefinition SharedSizeGroup="Col1" Width="Auto" />
                                                    <ColumnDefinition SharedSizeGroup="Col2" Width="Auto" />
                                                    <ColumnDefinition SharedSizeGroup="Col3" Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <ctl:ClickTextBlock Text="👁️" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Item2}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Margin="0,0,20,0"/>
                                                <ctl:ClickTextBlock Text="▶" Grid.Column="1" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Item2}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Margin="0,0,20,0" IsEnabled="False"/>
                                                <StackPanel Margin="0,0,20,0" Grid.Column="2">
                                                    <TextBlock Text="{Binding Item2.Title}" Margin="0,0,0,5" />
                                                    <ctl:ClickTextBlock Text="{Binding Item2.DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                                </StackPanel>
                                                <ctl:ClickTextBlock Text="{Binding Item2.Album}" Margin="0,0,20,0" Grid.Column="3" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusAlbumCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Grid Grid.RowSpan="5" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.IsSearching,Converter={StaticResource B2V}}">
                                    <Rectangle Fill="{DynamicResource RegionBrush}" Opacity="0.5"/>
                                    <hc:LoadingCircle IsRunning="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=Visibility,Converter={StaticResource V2B}}"/>
                                </Grid>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </TabItem>
                <TabItem Header="Settings">
                    <Border Background="{DynamicResource VioletBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid>
                            <ScrollViewer x:Name="ScrollViewer_Settings" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Margin="10">
                                <VirtualizingStackPanel Orientation="Vertical" Grid.IsSharedSizeScope="True">
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}" Margin="0,0,5,0" MaxHeight="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource LOC_GENERAL}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0"  VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <TextBlock Text="{DynamicResource LOC_HINT_SETTINGS_SAVE}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Grid Margin="0,0,0,10" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=SleepTimer}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                            <ColumnDefinition SharedSizeGroup="Col2"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center" Text="{DynamicResource LOC_SLEEPTIMER}"/>
                                        <Grid Grid.Column="1" IsEnabled="{Binding IsEnabled, Converter={StaticResource B2NB}}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <hc:NumericUpDown Grid.Column="0" Margin="0,0,10,0" Minimum="0" Maximum="24" Value="{Binding Hours}" Style="{StaticResource NumericUpDownExtend}" hc:TitleElement.Title="{DynamicResource LOC_HOURS}" hc:TitleElement.TitlePlacement="Left"/>
                                            <hc:NumericUpDown Grid.Column="1" Margin="0,0,10,0" Minimum="0" Maximum="60" Value="{Binding Minutes}" Style="{StaticResource NumericUpDownExtend}" hc:TitleElement.Title="{DynamicResource LOC_MINUTES}" hc:TitleElement.TitlePlacement="Left"/>
                                            <hc:NumericUpDown Grid.Column="2" Margin="0,0,10,0" Minimum="0" Maximum="60" Value="{Binding Seconds}" Style="{StaticResource NumericUpDownExtend}" hc:TitleElement.Title="{DynamicResource LOC_SECONDS}" hc:TitleElement.TitlePlacement="Left"/>
                                        </Grid>
                                        <StackPanel Grid.Column="2" Orientation="Horizontal">
                                            <Button Margin="0,0,10,0" hc:IconElement.Geometry="{StaticResource ClockGeometry}" CommandParameter="{Binding .}" Command="{Binding StartCommand}" IsEnabled="{Binding IsEnabled,Converter={StaticResource B2NB}}">
                                                <Button.Style>
                                                    <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsFinished}" Value="True">
                                                                <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding IsFinished}" Value="False">
                                                                <Setter Property="Background" Value="{StaticResource DefaultBrush}"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                            </Button>
                                            <hc:ProgressButton Visibility="{Binding IsEnabled,Converter={StaticResource B2V}}" IsChecked="True" Progress="{Binding Progress}" Margin="0,0,10,0" MinWidth="48" Style="{StaticResource ProgressButtonInfo}" Content="{Binding TimeLeft.TotalSeconds, Converter={StaticResource N2RN},ConverterParameter=0+ s}"/>
                                            <Button hc:IconElement.Geometry="{StaticResource RemoveGeometry}" Command="{Binding StopCommand}" CommandParameter="{Binding .}" IsEnabled="{Binding IsEnabled}" Margin="0,0,10,0"/>
                                            <ComboBox SelectedIndex="{Binding Action,Converter={StaticResource STA2I}}">
                                                <ComboBoxItem Content="{DynamicResource LOC_NONE}"/>
                                                <ComboBoxItem Content="{DynamicResource LOC_NOTIFY}"/>
                                                <ComboBoxItem Content="{DynamicResource LOC_PAUSE}"/>
                                                <ComboBoxItem Content="{DynamicResource LOC_EXIT}"/>
                                            </ComboBox>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                        <Run Text="{DynamicResource LOC_COLORPRESET}"/>:
                                        </TextBlock>
                                        <ComboBox Grid.Column="1" Margin="0,0,10,0" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Themes}" SelectedIndex="{Binding Source={x:Static utils:SharedProperties.Instance},Path=ThemesSelectedIndex}" Grid.IsSharedSizeScope="True">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition SharedSizeGroup="Theme_Col0"/>
                                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Theme_Col1"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Text="{Binding Name}" Margin="0,0,10,0"/>
                                                        <ItemsControl ItemsSource="{Binding .,Converter={StaticResource TT2CP}}" Grid.Column="1">
                                                            <ItemsControl.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <VirtualizingStackPanel Orientation="Horizontal" VirtualizingPanel.IsVirtualizing="True"/>
                                                                </ItemsPanelTemplate>
                                                            </ItemsControl.ItemsPanel>
                                                            <ItemsControl.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Border Width="16" Height="16" VerticalAlignment="Center" Margin="0,0,5,0" CornerRadius="1" BorderThickness="1" BorderBrush="Gray" Background="{Binding .,Converter={StaticResource C2B}}"/>
                                                                </DataTemplate>
                                                            </ItemsControl.ItemTemplate>
                                                        </ItemsControl>
                                                    </Grid>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" hc:InfoElement.Necessary="True">
                                        <Run Text="{DynamicResource LOC_THEME_LIGHT}"/> ⁽ᴮᴱᵀᴬ⁾
                                        </TextBlock>
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding Source={x:Static hc:ThemeManager.Current},Path=ApplicationTheme,Converter={StaticResource B2AT},ConverterParameter=0}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" hc:InfoElement.Necessary="True">
                                        <Run Text="{DynamicResource LOC_INFOTIP}"/> ⁽ᴮᴱᵀᴬ⁾
                                        </TextBlock>
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding ElementName=YourOwner,Path=ShowPopupNotification}" HorizontalAlignment="Left"/>
                                    </Grid>
                                    <TextBlock Text="{DynamicResource LOC_HINT_INFOTIP}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_STARTUPBEHAVIOUR}"/>:
                                        </TextBlock>
                                        <ComboBox x:Name="ComboBox_Settings_StartupBehaviour" Grid.Column="1" Margin="0,0,10,0" SelectionChanged="ComboBox_Settings_StartupBehaviour_SelectionChanged">
                                            <ComboBoxItem Content="{DynamicResource LOC_NORMAL}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_MINIMIZE}"/>
                                        </ComboBox>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_CLOSINGBEHAVIOUR}"/>:
                                        </TextBlock>
                                        <ComboBox x:Name="ComboBox_Settings_ClosingBehaviour" Grid.Column="1" Margin="0,0,10,0" SelectionChanged="ComboBox_Settings_ClosingBehaviour_SelectionChanged">
                                            <ComboBoxItem Content="{DynamicResource LOC_CLOSE}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_MINIMIZE}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_SYSTEMTRAY}"/>
                                        </ComboBox>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_FILEASSOCIATIONS}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1">
                                            <Button Content="{DynamicResource LOC_CREATE}" CommandParameter="create" Command="{x:Static utils:Commands.FileAssociationsCommand}" hc:IconElement.Geometry="{StaticResource ConfigGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRebuildCommand},Path=IsRebuilding,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_DELETE}" CommandParameter="delete" Command="{x:Static utils:Commands.FileAssociationsCommand}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryScanCommand},Path=IsScanning,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_CHECK}" CommandParameter="check" Command="{x:Static utils:Commands.FileAssociationsCommand}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRefreshTagsCommand},Path=IsScanning,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                        </WrapPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_DISCORDINTEGRATION}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding ElementName=YourOwner,Path=IsDiscord}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Separator Margin="0,0,0,10"/>
                                    <!--Windows-->
                                    <StackPanel x:Name="StackPanel_Title_Windows" Orientation="Horizontal" Margin="0,0,0,10">
                                        <ctl:GeoImage GeoSource="{StaticResource WindowsGeometry}" Margin="0,0,5,0" MaxHeight="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="Windows" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_JUMPLISTFREQUENT}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding ElementName=YourOwner,Path=IsJumpListFrequent}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <TextBlock Text="{DynamicResource LOC_HINT_JUMPLIST_FREQUENT}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_JUMPLISTRECENTLYPLAYED}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding ElementName=YourOwner,Path=IsJumplistRecentlyPlayed}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <TextBlock Text="{DynamicResource LOC_HINT_JUMPLIST_RECENTLYPLAYED}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_JUMPLISTTASKS}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding ElementName=YourOwner,Path=IsJumplistTasks}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                        <Run Text="{DynamicResource LOC_JUMPLISTMEDIALINK}"/>:
                                        </TextBlock>
                                        <ComboBox Grid.Column="1" Margin="0,0,10,0" SelectedIndex="{Binding ElementName=YourOwner,Path=JumplistMediaLink}">
                                            <ComboBoxItem Content="{DynamicResource LOC_PREVIEW}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_APPEND}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_DIRECTPLAY}"/>
                                        </ComboBox>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                        <Run Text="{DynamicResource LOC_PROXYMEDIALINK}"/>:
                                        </TextBlock>
                                        <ComboBox Grid.Column="1" Margin="0,0,10,0" SelectedIndex="{Binding ElementName=YourOwner,Path=ProxyMediaLink}">
                                            <ComboBoxItem Content="{DynamicResource LOC_PREVIEW}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_APPEND}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_DIRECTPLAY}"/>
                                        </ComboBox>
                                    </Grid>
                                    <TextBlock Text="{DynamicResource LOC_HINT_PROXYMEDIALINK}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Separator Margin="0,0,0,10"/>
                                    <!--Player-->
                                    <StackPanel x:Name="StackPanel_Title_Player" Orientation="Horizontal" Margin="0,0,0,10">
                                        <ctl:GeoImage GeoSource="{StaticResource GEO_MUSICNOTE}" Margin="0,0,5,0" MaxHeight="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource LOC_PLAYER}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0"  VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_AUTOPLAY}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding AutoPlay}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_AUTONEXT}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding AutoNextOnError}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_FADEAUDIO}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding IsFadingAudio}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="TrueVolume" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding TrueVolume}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_CROSSFADE}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding IsCrossfading}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_CROSSFADE}" />: <Run Text="{DynamicResource LOC_DURATION}" />
                                        </TextBlock>
                                        <Slider Maximum="10000" TickPlacement="BottomRight" TickFrequency="1000" Width="200" SmallChange="100" LargeChange="1000" Grid.Column="1" Value="{Binding CrossfadeDuration}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_SILENCESKIP}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding IsSkippingSilence}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_REMOTETAGSREADING}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding RemoteTagsReading}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <TextBlock Text="{DynamicResource LOC_REMOTETAGSREADING_HINT}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_ACTIVEVOLUMELEVELING}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <StackPanel Orientation="Horizontal" Grid.Column="1">
                                            <ToggleButton Grid.Column="1" IsChecked="{Binding IsNormalizingStream}" HorizontalAlignment="Left" Margin="0,0,10,0"/>
                                            <ctl:GeoImage Grid.Column="2" Grid.Row="1" GeoSource="{StaticResource AudioGeometry}" GeoBrush="{StaticResource SuccessBrush}" MaxWidth="24" MaxHeight="24" Margin="0,0,10,0" Visibility="{Binding IsNormalizationActive,Converter={StaticResource B2V}}" ToolTip="{DynamicResource LOC_ALLGOOD}"/>
                                            <ctl:GeoImage Grid.Column="2" Grid.Row="1" GeoSource="{StaticResource WarningGeometry}" GeoBrush="{StaticResource WarningBrush}" MaxWidth="24" MaxHeight="24" Margin="0,0,10,0" Visibility="{Binding IsNormalizationActiveReason,Converter={StaticResource NS2V}}"/>
                                            <TextBlock Text="{Binding IsNormalizationActiveReason,Mode=OneWay}" VerticalAlignment="Center" Margin="0,0,10,0" Visibility="{Binding IsNormalizationActiveReason,Converter={StaticResource NS2V}}"/>
                                        </StackPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_PLAYER_POWERSAVING}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding IsVideoEffectPowerSaving}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_ALLOWDUPLICATEDITEMS}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding Playlist.AllowDuplicates}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_REMEMBERSTATE}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding SaveState}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_REMEMBERPOSITION}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding SavePosition}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <!--Combo Boxes-->
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                            <ColumnDefinition SharedSizeGroup="Col2"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_ADDBEHAVIOUR}"/>:
                                        </TextBlock>
                                        <ComboBox SelectedIndex="{Binding Playlist.SongAddBehaviour,Mode=TwoWay,Converter={StaticResource AB2I}}" Grid.Column="1" Margin="0,0,10,0">
                                            <ComboBoxItem Content="{DynamicResource LOC_FIRST}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_LAST}"/>
                                        </ComboBox>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                            <ColumnDefinition SharedSizeGroup="Col2"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_AUDIOEFFECTS}"/>:
                                        </TextBlock>
                                        <ComboBox x:Name="ComboBox_Settings_Player_AudioEffects" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.EffectsProfile}" Grid.Column="1" Margin="0,0,10,0">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock>
                                                    <Run Text="{Binding Priority}"/>. <Run Text="{Binding Category}"/>/<Run Text="{Binding Name}"/>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <WrapPanel Orientation="Horizontal" Grid.Column="2">
                                            <Button hc:IconElement.Geometry="{StaticResource AddGeometry}" Command="{Binding AddAudioEffectCommand}" Margin="0,0,10,0"/>
                                            <Button hc:IconElement.Geometry="{StaticResource RemoveGeometry}" CommandParameter="{Binding ElementName=ComboBox_Settings_Player_AudioEffects,Path=SelectedItem}" Command="{Binding RemoveAudioEffectCommand}" Margin="0,0,10,0"/>
                                            <Button hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Command="{Binding ClearAudioEffectsCommand}" Margin="0,0,10,0"/>
                                            <Button hc:IconElement.Geometry="{StaticResource ConfigGeometry}" CommandParameter="{Binding ElementName=ComboBox_Settings_Player_AudioEffects,Path=SelectedItem}" Command="{Binding ConfigAudioEffectCommand}" Margin="0,0,10,0"/>
                                            <ToggleButton IsChecked="{Binding ElementName=ComboBox_Settings_Player_AudioEffects,Path=SelectedItem.IsEnabled}" Margin="0,0,10,0"/>
                                            <hc:NumericUpDown hc:TitleElement.TitlePlacement="Left" hc:TitleElement.Title="Priority" Style="{StaticResource NumericUpDownPlus}" Minimum="0" Value="{Binding ElementName=ComboBox_Settings_Player_AudioEffects,Path=SelectedItem.Priority,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                                        </WrapPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                            <ColumnDefinition SharedSizeGroup="Col2"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_MODULES}"/>:
                                        </TextBlock>
                                        <ComboBox x:Name="ComboBox_Settings_Player_Modules" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.Modules}" Grid.Column="1" Margin="0,0,10,0">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock >
                                                <Run Text="{Binding Name, Mode=OneWay}"/>: <Run Text="{Binding Info, Mode=OneWay}"/>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <WrapPanel Orientation="Horizontal" Grid.Column="2">
                                            <Button hc:IconElement.Geometry="{StaticResource AddGeometry}" Command="{Binding AddEngineModuleCommand}" Margin="0,0,10,0"/>
                                            <Button hc:IconElement.Geometry="{StaticResource RemoveGeometry}" CommandParameter="{Binding ElementName=ComboBox_Settings_Player_Modules,Path=SelectedItem}" Command="{Binding RemoveEngineModuleCommand}" Margin="0,0,10,0"/>
                                            <Button hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Command="{Binding ClearEngineModulesCommand}" Margin="0,0,10,0"/>
                                            <Button hc:IconElement.Geometry="{StaticResource ConfigGeometry}" CommandParameter="{Binding ElementName=ComboBox_Settings_Player_Modules,Path=SelectedItem}" Command="{Binding ConfigEngineModuleCommand}" Margin="0,0,10,0"/>
                                            <ToggleButton IsChecked="{Binding ElementName=ComboBox_Settings_Player_Modules,Path=SelectedItem.IsEnabled}" Margin="0,0,10,0"/>
                                        </WrapPanel>
                                    </Grid>
                                    <TextBlock Text="{DynamicResource LOC_HINT_ENGINEMODULE_OPERATIONS}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                            <ColumnDefinition SharedSizeGroup="Col2"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                        <Run Text="{DynamicResource LOC_OUTPUT}"/>:
                                        </TextBlock>
                                        <ComboBox ItemsSource="{Binding Devices}" SelectedIndex="{Binding Output}" Grid.Column="1" Margin="0,0,10,0">
                                            <ComboBox.ItemTemplate>
                                                <DataTemplate>
                                                    <TextBlock>
                                                <Run Text="{Binding .,Converter={StaticResource V2S}}"/>
                                                    </TextBlock>
                                                </DataTemplate>
                                            </ComboBox.ItemTemplate>
                                        </ComboBox>
                                        <Button hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" CommandParameter="{Binding .}" Command="{Binding RefreshDevicesCommand}" Grid.Column="2" HorizontalAlignment="Left" Margin="0,0,10,0"/>
                                    </Grid>
                                    <Separator Margin="0,0,0,10"/>
                                    <!--Network-->
                                    <StackPanel x:Name="StackPanel_Title_Network" Orientation="Horizontal" Margin="0,0,0,10">
                                        <ctl:GeoImage GeoSource="{StaticResource InfoGeometry}" Margin="0,0,5,0" MaxHeight="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource LOC_NETWORK}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0"  VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <TextBlock Text="{DynamicResource LOC_SETTINGS_PLAYERONLY_HINT}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_TIMEOUT}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <hc:NumericUpDown Grid.Column="1" Value="{Binding NetworkTimeout,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Maximum="25000" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_BUFFER}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <hc:NumericUpDown Grid.Column="1" Value="{Binding NetworkBuffer,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Maximum="25000" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_AGENT}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <TextBox Grid.Column="1" Text="{Binding NetworkAgent,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" MaxWidth="350" MinWidth="200" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_PROXY}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <TextBox Grid.Column="1" Text="{Binding NetworkProxy,Mode=TwoWay,UpdateSourceTrigger=LostFocus}" MaxWidth="350" MinWidth="200" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_FTPPASSIVEMODE}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding NetworkPassiveFTP}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_MAXFORWARDSEEK}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <hc:NumericUpDown Grid.Column="1" Value="{Binding NetworkForwardSeek,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Maximum="25000" HorizontalAlignment="Left" />
                                    </Grid>
                                    <!--Disabled because of missing config in BASSConfig-->
                                    <!--<Grid Margin="0,0,0,10" Visibility="Collapsed">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                        <ColumnDefinition SharedSizeGroup="Col2" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_SPEEDLIMIT}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding NetworkSpeedLimit}" HorizontalAlignment="Left" Margin="0,0,10,0"/>
                                    <StackPanel Grid.Column="2" Orientation="Horizontal" IsEnabled="{Binding NetworkSpeedLimit}">
                                        <hc:NumericUpDown Value="{Binding NetworkSpeedLimitRate,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Maximum="25000" HorizontalAlignment="Left" Margin="0,0,5,0"/>
                                        <TextBlock Text="Bps" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>-->
                                    <Separator Margin="0,0,0,10"/>
                                    <!--Library-->
                                    <StackPanel x:Name="StackPanel_Title_Library" Orientation="Horizontal" Margin="0,0,0,10">
                                        <ctl:GeoImage GeoSource="{StaticResource GEO_FOLDER}" Margin="0,0,5,0" MaxHeight="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource LOC_LIBRARY}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0"  VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <TextBlock Margin="0,0,0,10">
                                    <Run Text="{DynamicResource LOC_COUNT}"/>: <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Library.Count,Mode=OneWay}"/><LineBreak/>
                                    <Run Text="{DynamicResource LOC_INDEXED}"/>: <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Library.IndexedCount,Mode=OneWay}"/>
                                    </TextBlock>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_SOURCES}"/>:
                                        </TextBlock>
                                        <ComboBox x:Name="ComboBox_Settings_Library_Paths" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=LibraryPaths}" Grid.Column="1" Margin="0,0,10,0" />
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_SOURCES}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1">
                                            <Button Content="{DynamicResource LOC_ADD}" Command="{x:Static utils:Commands.LibraryPathAddCommand}" hc:IconElement.Geometry="{StaticResource AddGeometry}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_REMOVE}" CommandParameter="{Binding ElementName=ComboBox_Settings_Library_Paths,Path=SelectedItem}" Command="{x:Static utils:Commands.LibraryPathRemoveCommand}" hc:IconElement.Geometry="{StaticResource RemoveGeometry}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_CLEAR}" Command="{x:Static utils:Commands.LibraryPathClearCommand}" hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Margin="0,0,10,0" />
                                        </WrapPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_LIBRARY}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1">
                                            <Button Content="{DynamicResource LOC_REBUILD}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryRebuildCommand}" hc:IconElement.Geometry="{StaticResource ConfigGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRebuildCommand},Path=IsRebuilding,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                            <ToggleButton Content="{DynamicResource LOC_CANCEL}" Style="{StaticResource ToggleButtonDefault}" IsChecked="{Binding Source={x:Static utils:Commands.LibraryRebuildCommand},Path=StopRebuilding}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRebuildCommand},Path=IsRebuilding,Converter={StaticResource B2V}}" Margin="0,0,10,0"/>
                                            <Button Content="{DynamicResource LOC_SCAN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryScanCommand}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryScanCommand},Path=IsScanning,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                            <ToggleButton Content="{DynamicResource LOC_CANCEL}" Style="{StaticResource ToggleButtonDefault}" IsChecked="{Binding Source={x:Static utils:Commands.LibraryScanCommand},Path=StopScanning}" Visibility="{Binding Source={x:Static utils:Commands.LibraryScanCommand},Path=IsScanning,Converter={StaticResource B2V}}" Margin="0,0,10,0"/>
                                            <Button Content="{DynamicResource LOC_REFRESH}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryRefreshTagsCommand}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRefreshTagsCommand},Path=IsScanning,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                            <ToggleButton Content="{DynamicResource LOC_CANCEL}" Style="{StaticResource ToggleButtonDefault}" IsChecked="{Binding Source={x:Static utils:Commands.LibraryRefreshTagsCommand},Path=StopScanning}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRefreshTagsCommand},Path=IsScanning,Converter={StaticResource B2V}}" Margin="0,0,10,0"/>
                                            <Button Content="{DynamicResource LOC_CLEAR}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryClearCommand}" hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Margin="0,0,10,0" />
                                            <hc:ProgressButton Content="{DynamicResource LOC_CANCEL}" IsChecked="{Binding Source={x:Static utils:Commands.LibraryUpdateCommand},Path=StopScanning}" Visibility="{Binding Source={x:Static utils:Commands.LibraryUpdateCommand},Path=IsScanning,Converter={StaticResource B2V}}" Progress="{Binding Source={x:Static utils:Commands.LibraryUpdateCommand},Path=Progress}" Margin="0,0,10,0"/>
                                            <Button Content="{DynamicResource LOC_UPDATE}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryUpdateCommand}" hc:IconElement.Geometry="{StaticResource RotateRightGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryUpdateCommand},Path=IsScanning,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_CLEAN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryCleanCommand}" hc:IconElement.Geometry="{StaticResource RemoveGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryCleanCommand},Path=IsScanning,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" ToolTip="{DynamicResource LOC_LIBRARY_CLEAN_HINT}"/>
                                            <ToggleButton Content="{DynamicResource LOC_CANCEL}" Style="{StaticResource ToggleButtonDefault}" IsChecked="{Binding Source={x:Static utils:Commands.LibraryCleanCommand},Path=StopScanning}" Visibility="{Binding Source={x:Static utils:Commands.LibraryCleanCommand},Path=IsScanning,Converter={StaticResource B2V}}" Margin="0,0,10,0"/>
                                        </WrapPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center">
                                            <Run Text="{DynamicResource LOC_SEARCH}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1">
                                            <Button Content="{DynamicResource LOC_REBUILD}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibrarySearchRebuildCommand}" hc:IconElement.Geometry="{StaticResource ConfigGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibrarySearchRebuildCommand},Path=IsRebuilding,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                            <ToggleButton Content="{DynamicResource LOC_CANCEL}" Style="{StaticResource ToggleButtonDefault}" IsChecked="{Binding Source={x:Static utils:Commands.LibrarySearchRebuildCommand},Path=StopRebuilding}" Visibility="{Binding Source={x:Static utils:Commands.LibrarySearchRebuildCommand},Path=IsRebuilding,Converter={StaticResource B2V}}" Margin="0,0,10,0"/>
                                        </WrapPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" />
                                            <ColumnDefinition SharedSizeGroup="Col1" />
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_SCANATSTARTUP}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                        <ToggleButton Grid.Column="1" IsChecked="{Binding ElementName=YourOwner,Path=ScanLibraryAtStartup}" HorizontalAlignment="Left" />
                                    </Grid>
                                    <Separator Margin="0,0,0,10"/>
                                    <!--Cache-->
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <ctl:GeoImage GeoSource="{StaticResource GEO_FOLDER}" Margin="0,0,5,0" MaxHeight="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource LOC_LOCALCACHE}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0"  VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <TextBlock Margin="0,0,0,10">
                                        <Run Text="{DynamicResource LOC_COUNT}"/>: <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=RemoteLibrary.Count,Mode=OneWay}"/> = <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=RemoteLibrary.TotalSize,Mode=OneWay,Converter={StaticResource FSB2S}}"/>
                                    </TextBlock>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center">
                                            <Run Text="{DynamicResource LOC_LOCALCACHE}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1">
                                            <Button Content="{DynamicResource LOC_REFRESH}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=RemoteLibrary}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=RemoteLibrary.ReloadCommand}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_CLEAR}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=RemoteLibrary}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=RemoteLibrary.ClearCommand}" hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Margin="0,0,10,0" />
                                        </WrapPanel>
                                    </Grid>
                                    <ListView Background="{x:Null}" HorizontalAlignment="Left" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=RemoteLibrary.Size}" Margin="0,0,0,10" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=RemoteLibrary.HasItems,Converter={StaticResource B2V}}" ScrollViewer.VerticalScrollBarVisibility="Auto" MaxHeight="160">
                                        <ListView.View>
                                            <GridView>
                                                <GridViewColumn Header="{DynamicResource LOC_CLUSTER}" DisplayMemberBinding="{Binding Key}"/>
                                                <GridViewColumn Header="{DynamicResource LOC_SIZE}" DisplayMemberBinding="{Binding Value,Converter={StaticResource FSB2S}}"/>
                                            </GridView>
                                        </ListView.View>
                                        <ListView.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="{DynamicResource LOC_REMOVE}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu},Path=PlacementTarget.SelectedIndex}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=RemoteLibrary.DeleteCluster}">
                                                    <MenuItem.Icon>
                                                        <ctl:GeoImage GeoSource="{DynamicResource RemoveGeometry}"/>
                                                    </MenuItem.Icon>
                                                </MenuItem>
                                            </ContextMenu>
                                        </ListView.ContextMenu>
                                    </ListView>
                                    <Separator Margin="0,0,0,10"/>
                                    <!--Import/Export-->
                                    <TextBlock Style="{StaticResource TextBlock_HeaderStyle}" Margin="0,0,0,10">
                                    <Run Text="{DynamicResource LOC_IMPORT}"/>/<Run Text="{DynamicResource LOC_EXPORT}"/>
                                    </TextBlock>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                            <ColumnDefinition SharedSizeGroup="Col2"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center">
                                            <Run Text="{DynamicResource LOC_SETTINGS}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1" Margin="0,0,10,0">
                                            <Button Content="{DynamicResource LOC_IMPORT}" Command="{x:Static utils:Commands.ImportSettingsCommand}" hc:IconElement.Geometry="{StaticResource DownloadGeometry}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_EXPORT}" Command="{x:Static utils:Commands.ExportSettingsCommand}" hc:IconElement.Geometry="{StaticResource SaveGeometry}" Margin="0,0,10,0" />
                                        </WrapPanel>
                                        <TextBlock Text="{DynamicResource LOC_HINT_CONFIGFILE_NOTFOUND}" Grid.Column="2" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=ConfigHasFile,ConverterParameter=0,Converter={StaticResource B2VP}}"/>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center">
                                            <Run Text="{DynamicResource LOC_PLAYLIST}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1">
                                            <Button Content="{DynamicResource LOC_IMPORT}" Command="{x:Static utils:Commands.ImportPlaylistCommand}" hc:IconElement.Geometry="{StaticResource DownloadGeometry}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_EXPORT}" Command="{x:Static utils:Commands.ExportPlaylistCommand}" hc:IconElement.Geometry="{StaticResource SaveGeometry}" Margin="0,0,10,0" />
                                        </WrapPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                            <ColumnDefinition SharedSizeGroup="Col2"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock VerticalAlignment="Center">
                                            <Run Text="{DynamicResource LOC_AUDIOEFFECTS}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1" Margin="0,0,10,0">
                                            <Button Content="{DynamicResource LOC_IMPORT}" Command="{x:Static utils:Commands.ImportProfileCommand}" hc:IconElement.Geometry="{StaticResource DownloadGeometry}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_EXPORT}" Command="{x:Static utils:Commands.ExportProfileCommand}" hc:IconElement.Geometry="{StaticResource SaveGeometry}" Margin="0,0,10,0" />
                                        </WrapPanel>
                                        <TextBlock Text="{DynamicResource LOC_HINT_CONFIGFILE_NOTFOUND}" Grid.Column="2" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=ConfigHasFile,ConverterParameter=0,Converter={StaticResource B2VP}}"/>
                                    </Grid>
                                    <Separator Margin="0,0,0,10"/>
                                    <!--Keyboard-->
                                    <StackPanel x:Name="StackPanel_Title_Keyboard" Orientation="Horizontal" Margin="0,0,0,10">
                                        <ctl:GeoImage GeoSource="{StaticResource DialogBoxLauncherGeometry}" Margin="0,0,5,0" MaxHeight="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource LOC_KEYBOARD}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0" VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <ListBox x:Name="ComboBox_Settings_Hotkeys_Hotkeys" Style="{StaticResource ListBoxModernStyle}" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager}" Grid.IsSharedSizeScope="True" Margin="0,0,0,10" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager.HasItems,Converter={StaticResource B2V}}">
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ScrollViewer VirtualizingPanel.IsVirtualizing="True">
                                                    <ItemsPresenter />
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition SharedSizeGroup="HCol0" Width="Auto" />
                                                        <ColumnDefinition SharedSizeGroup="HCol1" Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Margin="0,0,10,0" Grid.Column="0" VerticalAlignment="Center">
                                            <Run Text="{Binding ModifierString,Mode=OneWay}"/> + <Run Text="{Binding Key,Mode=OneWay,Converter={StaticResource V2S}}"/>
                                                    </TextBlock>
                                                    <TextBlock Text="{Binding Message}" Margin="0,0,10,0" Grid.Column="1" VerticalAlignment="Center"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_HOTKEYS}"/>:
                                        </TextBlock>
                                        <WrapPanel Grid.Column="1" HorizontalAlignment="Left">
                                            <Button Content="{DynamicResource LOC_ADD}" CommandParameter="{Binding ElementName=Hotkey_Settings_Hotkeys_Hotkey,Path=Hotkey}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager.AddCommand}" hc:IconElement.Geometry="{StaticResource AddGeometry}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_REMOVE}" CommandParameter="{Binding ElementName=ComboBox_Settings_Hotkeys_Hotkeys,Path=SelectedItem}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager.RemoveCommand}" hc:IconElement.Geometry="{StaticResource RemoveGeometry}" Margin="0,0,10,0" />
                                            <Button Content="{DynamicResource LOC_CLEAR}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager.ClearCommand}" hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Margin="0,0,10,0" />
                                        </WrapPanel>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_HOTKEY}"/>:
                                        </TextBlock>
                                        <ctl:Hotkey x:Name="Hotkey_Settings_Hotkeys_Hotkey" Grid.Column="1" HorizontalAlignment="Left" Width="350" Height="Auto"/>
                                    </Grid>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_SETTINGS}" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                        <Button Grid.Column="1" HorizontalAlignment="Left" Content="{DynamicResource LOC_RESET}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Style="{StaticResource ButtonDanger}" Click="Button_Settings_Reset_Click"/>
                                    </Grid>
                                    <TextBlock Text="{DynamicResource LOC_HINT_SETTINGSRESET}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0"/>
                                            <ColumnDefinition SharedSizeGroup="Col1"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{DynamicResource LOC_APPLICATION}" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                        <Button Grid.Column="1" HorizontalAlignment="Left" Content="{DynamicResource LOC_FORCESTOP}" hc:IconElement.Geometry="{StaticResource CloseGeometry}" Style="{StaticResource ButtonDanger}" Click="Button_Settings_ForceStop_Click"/>
                                    </Grid>
                                    <Separator Margin="0,0,0,10"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <ctl:GeoImage GeoSource="{StaticResource FullScreenGeometry}" Margin="0,0,5,0" MaxHeight="16" VerticalAlignment="Center"/>
                                        <TextBlock Text="{DynamicResource LOC_DEVELOPER}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0"  VerticalAlignment="Center"/>
                                    </StackPanel>
                                    <TextBlock Text="*English-only" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <TextBlock Margin="0,0,10,0">
                                Debug Mode: <Run Text="{Binding IsEnabled ,Source={x:Static utils:DebugMode.Instance}}"/>
                                        </TextBlock>
                                        <ctl:ClickTextBlock Text="Enable" Command="{Binding StartCommand,Source={x:Static utils:DebugMode.Instance}}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Vertical" Visibility="{Binding Source={x:Static utils:DebugMode.Instance},Path=IsEnabled,Converter={StaticResource B2V}}">
                                        <Separator Margin="0,0,0,10"/>
                                        <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                            <TextBlock Text="Resources" Margin="0,0,10,0"/>
                                            <ctl:ClickTextBlock Text="Load Dictionary" Margin="0,0,10,0" Command="{Binding Source={x:Static utils:Commands.LoadResourceDictionaryCommand}}"/>
                                            <ctl:ClickTextBlock Text="Merge Dictionary" Margin="0,0,10,0" Command="{Binding Source={x:Static utils:Commands.MergeResourceDictionaryCommand}}"/>
                                            <ctl:ClickTextBlock Text="Merge Relative Dictionary" Margin="0,0,10,0" CommandParameter="0" Command="{Binding Source={x:Static utils:Commands.MergeResourceDictionaryCommand}}"/>
                                            <ctl:ClickTextBlock Text="Remove Merged Dictionary" Margin="0,0,10,0" Command="{Binding Source={x:Static utils:Commands.RemoveMergedResourceDictionaryCommand}}"/>
                                            <ctl:ClickTextBlock Text="Clear Merged Dictionaries" Margin="0,0,10,0" ToolTip="Double Click" CommandTriggerMode="DoubleClick" Command="{Binding Source={x:Static utils:Commands.ClearMergedResourceDictionariesCommand}}"/>
                                            <ctl:ClickTextBlock Text="Restore Resources" Foreground="Lime" Margin="0,0,10,0" Command="{Binding Source={x:Static utils:Commands.RestoreResourcesCommand}}"/>
                                        </StackPanel>
                                        <TextBlock Style="{StaticResource TextBlock_HeaderStyle}" Text="Info" Margin="0,0,0,10"/>
                                        <StackPanel Orientation="Horizontal" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=MemoryManager}" Margin="0,0,0,10">
                                            <TextBlock Text="Memory Manager" Margin="0,0,10,0"/>
                                            <hc:Shield Subject="Running" Status="{Binding IsPeriodicCleaning}" Margin="0,0,10,0"/>
                                            <hc:Shield Subject="Cleaned" Status="{Binding TotalCleaned}" Color="{StaticResource SuccessBrush}"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=FilePipe}" Margin="0,0,0,10">
                                            <TextBlock Text="Server" Margin="0,0,10,0"/>
                                            <hc:Shield Subject="Name" Status="{Binding NamedPipeName}" Margin="0,0,10,0"/>
                                            <hc:Shield Subject="Running" Status="{Binding IsRunning}" Color="{StaticResource SuccessBrush}" Margin="0,0,10,0"/>
                                            <hc:Shield Subject="Received" Status="{Binding TotalReceived}" Color="{StaticResource PrimaryBrush}" Margin="0,0,10,0"/>
                                            <hc:Shield Subject="Max Instances" Status="{Binding MaxServerInstances}" Color="{StaticResource InfoBrush}"/>
                                        </StackPanel>
                                        <WrapPanel Orientation="Horizontal" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}">
                                            <TextBlock Text="Player" Margin="0,0,10,0"/>
                                            <hc:Shield Subject="Initialized" Status="{Binding IsInitialized}" Color="{StaticResource WarningBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="Sample Rate" Status="{Binding SampleRate}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="Handle" Status="{Binding Stream}" Color="{StaticResource SuccessBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="Quality" Status="{Binding StreamQuality}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="Bitrate" Status="{Binding Bitrate}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="Playlist" Status="{Binding Playlist.Name}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="Effects" Status="{Binding EffectsProfile.Count}" Color="{StaticResource WarningBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="VFX" Status="{Binding VideoEffect.Name}" Color="{StaticResource DangerBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="SMTC" Status="{Binding IsUsingSMTC}" Color="{StaticResource DangerBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="A-B Loop" Status="{Binding IsABLoop}" Color="{StaticResource WarningBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="A" Status="{Binding ABLoop.AString}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="B" Status="{Binding ABLoop.BString}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="Modules" Status="{Binding Modules.Count}" Color="{StaticResource DangerBrush}" Margin="0,0,10,10"/>
                                            <hc:Shield Subject="Streams" Status="{Binding Streams.Count}" Color="{StaticResource DangerBrush}" Margin="0,0,0,10"/>
                                        </WrapPanel>
                                        <Separator Margin="0,0,0,10"/>
                                        <TextBlock Style="{StaticResource TextBlock_HeaderStyle}" Text="Stream Manager" Margin="0,0,0,10"/>
                                        <ListBox ItemsSource="{Binding Streams}" Grid.IsSharedSizeScope="True" Margin="0,0,10,10" MaxHeight="250">
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Grid IsEnabled="{Binding IsFreed,Converter={StaticResource B2NB}}" Margin="5">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition SharedSizeGroup="Handle"/>
                                                            <ColumnDefinition SharedSizeGroup="Metadata"/>
                                                            <ColumnDefinition SharedSizeGroup="IsFreed"/>
                                                            <ColumnDefinition SharedSizeGroup="AutoFree"/>
                                                            <ColumnDefinition SharedSizeGroup="Controls"/>
                                                            <ColumnDefinition SharedSizeGroup="Pos/Len"/>
                                                            <ColumnDefinition SharedSizeGroup="Info"/>
                                                        </Grid.ColumnDefinitions>
                                                        <TextBlock Grid.Column="0" Text="{Binding Handle}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                        <TextBlock Grid.Column="1" Text="{Binding Metadata.Title}" VerticalAlignment="Center" Margin="0,0,10,0" MaxWidth="120" TextTrimming="CharacterEllipsis"/>
                                                        <CheckBox Grid.Column="2" IsChecked="{Binding IsFreed,Mode=OneWay}" Margin="0,0,10,0" IsEnabled="False"/>
                                                        <CheckBox Grid.Column="3" IsChecked="{Binding AutoFree}" Background="{DynamicResource DangerBrush}" Margin="0,0,10,0"/>
                                                        <StackPanel Grid.Column="4" Orientation="Horizontal" Margin="0,0,10,0">
                                                            <ToggleButton IsChecked="{Binding ControlHandle.IsPlaying}" Style="{StaticResource ToggleButtonIcon}" hc:IconElement.Geometry="{StaticResource GEO_PLAYPAUSE}" hc:IconSwitchElement.GeometrySelected="{StaticResource GEO_PLAYPAUSE}" Margin="0,0,10,0"/>
                                                            <ToggleButton IsChecked="{Binding ControlHandle.IsStopped}" Background="{DynamicResource DangerBrush}" hc:IconElement.Geometry="{StaticResource CloseGeometry}" Margin="0,0,10,0"/>
                                                            <Button Content="{DynamicResource LOC_SWITCH}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.SwitchStreamCommand}" hc:IconElement.Geometry="{StaticResource SuccessGeometry}"/>
                                                        </StackPanel>
                                                        <TextBlock Grid.Column="5" VerticalAlignment="Center" Margin="0,0,10,0">
                                                    <Run Text="{Binding ControlHandle.PositionString ,Mode=OneWay}"/>/<Run Text="{Binding ControlHandle.Length,Mode=OneWay}"/>
                                                        </TextBlock>
                                                        <TextBlock Grid.Column="6" VerticalAlignment="Center" Text="{Binding StreamInfo}"/>
                                                    </Grid>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </StackPanel>
                                </VirtualizingStackPanel>
                            </ScrollViewer>
                            <Button x:Name="Button_Settings_Save" hc:IconElement.Geometry="{StaticResource SaveGeometry}" Style="{StaticResource ButtonIconCircular}" Background="{DynamicResource MainContentBackgroundBrush}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,10,10" Click="Button_Settings_Save_Click"/>
                            <Border HorizontalAlignment="Right" VerticalAlignment="Center" Background="{DynamicResource MainContentBackgroundBrush}" CornerRadius="3" Margin="0,0,15,0">
                                <StackPanel Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="2">
                                    <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}" MaxHeight="16" Margin="0,2,0,10" CommandParameter="top" Command="{StaticResource Commands.SettingsScrollTo}"/>
                                    <ctl:GeoImage GeoSource="{StaticResource WindowsGeometry}" MaxHeight="16" Margin="0,0,0,10" CommandParameter="windows" Command="{StaticResource Commands.SettingsScrollTo}"/>
                                    <ctl:GeoImage GeoSource="{StaticResource GEO_MUSICNOTE}" MaxHeight="16" Margin="0,0,0,10" CommandParameter="player" Command="{StaticResource Commands.SettingsScrollTo}"/>
                                    <ctl:GeoImage GeoSource="{StaticResource InfoGeometry}" MaxHeight="16" Margin="0,0,0,10" CommandParameter="network" Command="{StaticResource Commands.SettingsScrollTo}"/>
                                    <ctl:GeoImage GeoSource="{StaticResource GEO_FOLDER}" MaxHeight="16" Margin="0,0,0,10" CommandParameter="library" Command="{StaticResource Commands.SettingsScrollTo}"/>
                                    <ctl:GeoImage GeoSource="{StaticResource DialogBoxLauncherGeometry}" Margin="0,0,0,2" MaxHeight="16" CommandParameter="keyboard" Command="{StaticResource Commands.SettingsScrollTo}"/>
                                </StackPanel>
                            </Border>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Metadata Group">
                    <Border Background="{DynamicResource VioletBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusedGroup}" Margin="10" ClipToBounds="True">
                            <ctl:ExpandableImage Margin="0,-300,0,200" Stretch="UniformToFill" Source="{Binding Cover}">
                                <ctl:ExpandableImage.Effect>
                                    <BlurEffect/>
                                </ctl:ExpandableImage.Effect>
                            </ctl:ExpandableImage>
                            <Rectangle Fill="{DynamicResource RegionBrush}" Margin="0,0,0,200" Opacity="0.5" />
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{Binding Name}" Margin="30,100,0,30" FontSize="64" FontWeight="Bold" />
                                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10,0,10,5">
                                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="25" Width="52" Height="52" Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAY}" Margin="15" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadGroupCommand}"/>
                                    </Border>
                                    <ctl:GeoImage GeoSource="{DynamicResource GEO_ADDTOLIST_LAST}" Width="32" VerticalAlignment="Center" Margin="0,0,10,0" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.AddGroupToPlaylistCommand}"/>
                                    <ctl:GeoImage GeoSource="{DynamicResource GEO_ADDTOLIST_FIRST}" Width="32" VerticalAlignment="Center" Margin="0,0,10,0" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.EnqueueGroupCommand}"/>
                                </StackPanel>
                                <WrapPanel Grid.Row="2" Margin="0,0,0,5">
                                    <TextBlock Margin="10,0,10,0" VerticalAlignment="Bottom">
                                    <Run Text="{DynamicResource LOC_DURATION}" />: <Run Text="{Binding TotalDurationString,Mode=OneWay}" />
                                    </TextBlock>
                                    <TextBlock Text="|" Margin="0,0,10,1" VerticalAlignment="Bottom"/>
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Bottom">
                                    <Run Text="{DynamicResource LOC_PLAYCOUNT}" />: <Run Text="{Binding PlayCount}" />
                                    </TextBlock>
                                    <TextBlock Text="|" Margin="0,0,10,1" VerticalAlignment="Bottom" />
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Bottom">
                                    <Run Text="{DynamicResource LOC_TOTALFAVORITETRACKS}" />: <Run Text="{Binding TotalFavorite}" />
                                    </TextBlock>
                                    <TextBlock Text="|" Margin="0,0,10,1" VerticalAlignment="Bottom" />
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Bottom">
                                    <Run Text="{DynamicResource LOC_COUNT}" />: <Run Text="{Binding Count,Mode=OneWay}" />
                                    </TextBlock>
                                </WrapPanel>
                                <ListBox Grid.Row="3" ItemsSource="{Binding }" Grid.IsSharedSizeScope="True" Margin="0,0,0,10" Style="{StaticResource ListBoxMetadataBaseStyle}"/>
                                <!--<ListBox.Template>
                                    <ControlTemplate>
                                        <ScrollViewer VirtualizingPanel.IsVirtualizing="True" Background="{DynamicResource SecondaryRegionBrush}">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="10,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Col0" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col1" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col2" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col3" Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ctl:ClickTextBlock Text="👁️" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Margin="0,0,20,0"/>
                                            <ctl:ClickTextBlock Text="▶" Grid.Column="1" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Margin="0,0,20,0"/>
                                            <StackPanel Margin="0,0,20,0" Grid.Column="2">
                                                <TextBlock Text="{Binding Title}" Margin="0,0,0,5" />
                                                <ctl:ClickTextBlock Text="{Binding DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                            </StackPanel>
                                            <ctl:ClickTextBlock Text="{Binding Album}" Margin="0,0,20,0" Grid.Column="3" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusAlbumCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>-->
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Now Playing">
                    <Grid>
                        <Image x:Name="Image_VisualizerOutput" Stretch="Fill" DataContext="{Binding VideoEffect}" Source="{Binding CurrentFrame}" Effect="{Binding Effect}" PreviewMouseLeftButtonUp="Image_VisualizerOutput_PreviewMouseLeftButtonUp"/>
                        <Grid x:Name="Grid_NowPlaying_VisualizerHost" Visibility="Collapsed" SizeChanged="Grid_NowPlaying_VisualizerHost_SizeChanged" PreviewMouseLeftButtonUp="Grid_NowPlaying_VisualizerHost_PreviewMouseLeftButtonUp" Effect="{Binding VideoEffect.Effect}"/>
                        <ctl:ExpandableImage x:Name="Image_NowPlaying_Cover" Stretch="UniformToFill" d:Source="Resources/MusicRecord.png" Source="{Binding StreamMetadata.DefaultCover}" Margin="-10">
                            <ctl:ExpandableImage.Effect>
                                <BlurEffect Radius="10" KernelType="Box"/>
                            </ctl:ExpandableImage.Effect>
                        </ctl:ExpandableImage>
                        <Rectangle Fill="{DynamicResource RegionBrush}" Opacity="0.5" Visibility="{Binding ElementName=YourOwner,Path=ShowVisualizerControls,Converter={StaticResource B2V}}"/>
                        <Grid Visibility="{Binding ElementName=YourOwner,Path=ShowVisualizerControls,Converter={StaticResource B2V}}">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,10" Visibility="{Binding ElementName=YourOwner,Path=IsUsingSubtitles,Converter={StaticResource B2V}}" FontFamily="Yu Gothic UI Light" TextAlignment="Center" FontSize="48">
                                <Run Text="{Binding ElementName=YourOwner,Path=CurrentSubtitle.Singer,Mode=OneWay}"/><LineBreak/>
                                <Run Text="{Binding ElementName=YourOwner,Path=CurrentSubtitle.JoinedLines,Mode=OneWay}"/>
                            </TextBlock>
                        </Grid>
                        <Grid Visibility="{Binding ElementName=YourOwner,Path=ShowVisualizerControls,Converter={StaticResource B2V}}">
                            <ScrollViewer Margin="5" Visibility="{Binding ElementName=YourOwner,Path=IsUsingSubtitles,ConverterParameter=0,Converter={StaticResource B2VP}}">
                                <TextBlock TextAlignment="Center" Text="{Binding StreamMetadata,Converter={StaticResource M2L},Mode=OneWay}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text,Converter={StaticResource NS2V}}">
                                    <TextBlock.CacheMode>
                                        <BitmapCache/>
                                    </TextBlock.CacheMode>
                                </TextBlock>
                            </ScrollViewer>
                            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="0">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation BeginTime="0:0:0.50" Storyboard.TargetProperty="(StackPanel.Margin)" From="15" To="275,0,0,15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                            <DoubleAnimation BeginTime="0:0:0.50" Storyboard.TargetProperty="(StackPanel.Opacity)" From="0" To="1" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation BeginTime="0:0:0.25" Storyboard.TargetProperty="(StackPanel.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                            <ThicknessAnimation BeginTime="0:0:0.25" Storyboard.TargetProperty="(StackPanel.Margin)" To="15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <StackPanel.CacheMode>
                                    <BitmapCache/>
                                </StackPanel.CacheMode>
                                <TextBlock Text="{Binding StreamMetadata.Title,Delay=100}" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Text="{Binding StreamMetadata.DefaultArtist,Delay=100}" FontWeight="DemiBold" FontSize="24" TextTrimming="CharacterEllipsis"/>
                            </StackPanel>
                            <ctl:ExpandableImage HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="250" Height="250" Margin="15" Source="{Binding StreamMetadata.DefaultCover,Delay=100}" Stretch="Fill">
                                <ctl:ExpandableImage.Clip>
                                    <RectangleGeometry Rect="0,0,250,250" RadiusX="15" RadiusY="15"/>
                                </ctl:ExpandableImage.Clip>
                                <ctl:ExpandableImage.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation BeginTime="0:0:0.25" Storyboard.TargetProperty="(Image.Margin)" From="-200,15,15,15" To="15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation BeginTime="0:0:0.25" Storyboard.TargetProperty="(Image.Margin)" To="-250,15,15,15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ctl:ExpandableImage.Style>
                                <ctl:ExpandableImage.CacheMode>
                                    <BitmapCache/>
                                </ctl:ExpandableImage.CacheMode>
                                <!--<Image.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation BeginTime="0:0:0.25" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin" From="-200,15,15,15" To="15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Image.Triggers>-->
                            </ctl:ExpandableImage>
                            <Grid x:Name="Grid_NowPlaying_Controls" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="250" Height="250" Margin="15" Background="Transparent" Opacity="0">
                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Grid_NowPlaying_Controls" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Grid_NowPlaying_Controls" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Grid.Triggers>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.CacheMode>
                                    <BitmapCache/>
                                </Grid.CacheMode>
                                <ctl:ExpandableImage Grid.ColumnSpan="3" Grid.RowSpan="2" Source="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.StreamMetadata.DefaultCover}" DataContext="{Binding VideoEffect}" Stretch="Fill">
                                    <ctl:ExpandableImage.Clip>
                                        <RectangleGeometry Rect="0,0,250,250" RadiusX="15" RadiusY="15"/>
                                    </ctl:ExpandableImage.Clip>
                                    <ctl:ExpandableImage.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{DynamicResource LOC_RETURN}" CommandParameter="0" Command="{StaticResource Commands.SetTabIndexCommand}">
                                                <MenuItem.Icon>
                                                    <ctl:GeoImage GeoSource="{StaticResource LeftGeometry}"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <Separator/>
                                            <MenuItem Header="{Binding Name}"/>
                                            <Separator/>
                                            <MenuItem Header="{StaticResource LOC_BIND}" CommandParameter="{x:Reference Name=Image_VisualizerOutput}" Command="{Binding SetOutputCommand}" IsEnabled="False">
                                                <MenuItem.Icon>
                                                    <ctl:GeoImage GeoSource="{StaticResource NailGeometry}"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="{StaticResource LOC_VISUALIZER}" IsCheckable="True" IsChecked="{Binding IsEnabled}">
                                                <MenuItem.Icon>
                                                    <ctl:GeoImage GeoSource="{StaticResource PageModeGeometry}"/>
                                                </MenuItem.Icon>
                                            </MenuItem>
                                            <MenuItem Header="{StaticResource LOC_FRAMERATE}">
                                                <MenuItem.Icon>
                                                    <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}"/>
                                                </MenuItem.Icon>
                                                <MenuItem IsEnabled="False" Header="{Binding ActualFramerate}"/>
                                            </MenuItem>
                                            <MenuItem Header="{StaticResource LOC_RESOLUTION}">
                                                <MenuItem.Icon>
                                                    <ctl:GeoImage GeoSource="{StaticResource ConfigGeometry}"/>
                                                </MenuItem.Icon>
                                                <MenuItem IsEnabled="False">
                                                    <MenuItem.Header>
                                                        <TextBlock>
                                                        <Run Text="{Binding Width}"/>x<Run Text="{Binding Height}"/>
                                                        </TextBlock>
                                                    </MenuItem.Header>
                                                </MenuItem>
                                                <Separator/>
                                                <MenuItem Header="SD" CommandParameter="640x480" Command="{Binding SetResolutionCommand}"/>
                                                <MenuItem Header="HD" CommandParameter="1280x720" Command="{Binding SetResolutionCommand}"/>
                                                <MenuItem Header="FHD" CommandParameter="1920x1080" Command="{Binding SetResolutionCommand}"/>
                                                <MenuItem Header="QHD" CommandParameter="2560x1440" Command="{Binding SetResolutionCommand}"/>
                                                <MenuItem Header="UHD" CommandParameter="3840x2160" Command="{Binding SetResolutionCommand}"/>
                                            </MenuItem>
                                        </ContextMenu>
                                    </ctl:ExpandableImage.ContextMenu>
                                </ctl:ExpandableImage>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_PREVIOUS}" CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}" Margin="24" VerticalAlignment="Center"/>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAYPAUSE}" Grid.Column="1" CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}" Margin="10" VerticalAlignment="Center">
                                    <ctl:GeoImage.Style>
                                        <Style TargetType="ctl:GeoImage">
                                            <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                    <Setter Property="GeoBrush" Value="{DynamicResource PrimaryBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsPlaying}" Value="False">
                                                    <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ctl:GeoImage.Style>
                                </ctl:GeoImage>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_NEXT}" Grid.Column="2" CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}" Margin="24" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="0,0,0,10">
                                <Run Text="{Binding PositionString ,Mode=OneWay}"/> / <Run Text="{Binding StreamMetadata.LengthString,Mode=OneWay}"/>
                                </TextBlock>
                            </Grid>
                            <Slider Width="250" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15,0,0,7.5" Maximum="{Binding StreamMetadata.Length}" Value="{Binding Position, Delay=100}" IsMoveToPointEnabled="True" Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Opacity, Converter={StaticResource D2V}}">
                                <Slider.Style>
                                    <Style TargetType="Slider" BasedOn="{StaticResource ColorPickerSlider}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="1" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Slider.Style>
                            </Slider>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="UPnP">
                    <Border Background="{DynamicResource VioletBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10" ClipToBounds="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <WrapPanel Grid.Row="0" Orientation="Horizontal" DataContext="{Binding Source={StaticResource uProvider}}">
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_SEARCH}" Command="{Binding SearchCommand}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_STOPSTREAM}" Command="{Binding StopStreamCommand}"/>
                            </WrapPanel>
                            <Grid Grid.Row="1" DataContext="{Binding Source={StaticResource uProvider}}" Margin="0,0,0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" Margin="0,0,5,0">
                                    <ListBox Style="{StaticResource ListBoxTransparentStyle}" ItemsSource="{Binding Servers}" SelectedIndex="{Binding SelectedServerIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextBlock.Foreground="{DynamicResource PrimaryTextBrush}">
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ScrollViewer VirtualizingPanel.IsVirtualizing="True" Background="{DynamicResource SecondaryRegionBrush}">
                                                    <ItemsPresenter />
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Image Source="{Binding Info.Icon}" Grid.Column="0" Grid.RowSpan="3" Margin="0,0,5,0" MaxWidth="48"/>
                                                    <TextBlock Text="{Binding Info.Name ,Mode=OneWay}" Grid.Column="1" Grid.Row="0" FontSize="16"/>
                                                    <TextBlock Grid.Column="1" Grid.Row="1" FontWeight="Light">
                                                        <Run Text="{Binding Info.ModelName,Mode=OneWay}"/> • <Run Text="{Binding Info.ModelNumber,Mode=OneWay}"/>
                                                    </TextBlock>
                                                    <TextBlock Text="{Binding Info.ManufacturerName ,Mode=OneWay}" Grid.Column="1" Grid.Row="2" FontWeight="Light"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Grid Visibility="{Binding IsServersBusy,Converter={StaticResource B2V}}" Background="{DynamicResource RegionBrush}" Opacity="0.75">
                                        <hc:LoadingIndicator Style="{StaticResource LoadingIndicatorRingStyle}" IsActive="{Binding IsServersBusy}"/>
                                    </Grid>
                                </Grid>
                                <Grid Grid.Column="1" Margin="5,0,0,0">
                                    <ListBox ItemsSource="{Binding Renderers}" SelectedIndex="{Binding SelectedRendererIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextBlock.Foreground="{DynamicResource PrimaryTextBrush}" Opacity="0.5">
                                        <ListBox.Style>
                                            <Style TargetType="ListBox" BasedOn="{StaticResource ListBoxTransparentStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={StaticResource uProvider},Path=IsUsingRenderer}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation To="1" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ListBox.Opacity)">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation To="0.5" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ListBox.Opacity)">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListBox.Style>
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ScrollViewer VirtualizingPanel.IsVirtualizing="True" Background="{DynamicResource SecondaryRegionBrush}">
                                                    <ItemsPresenter />
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Image Source="{Binding Info.Icon}" Grid.Column="0" Grid.RowSpan="3" Margin="0,0,5,0" MaxWidth="48"/>
                                                    <TextBlock Text="{Binding Info.Name ,Mode=OneWay}" Grid.Column="1" Grid.Row="0" FontSize="16"/>
                                                    <TextBlock Grid.Column="1" Grid.Row="1" FontWeight="Light">
                                                        <Run Text="{Binding Info.ModelName,Mode=OneWay}"/> • <Run Text="{Binding Info.ModelNumber,Mode=OneWay}"/>
                                                    </TextBlock>
                                                    <TextBlock Text="{Binding Info.ManufacturerName ,Mode=OneWay}" Grid.Column="1" Grid.Row="2" FontWeight="Light"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Grid Visibility="{Binding IsRenderersBusy,Converter={StaticResource B2V}}" Background="{DynamicResource RegionBrush}" Opacity="0.75">
                                        <hc:LoadingIndicator Style="{StaticResource LoadingIndicatorRingStyle}" IsActive="{Binding IsRenderersBusy}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Border Grid.Row="2" CornerRadius="15" Margin="0,0,0,10" HorizontalAlignment="Center" Visibility="{Binding Source={StaticResource uProvider},Path=SelectedRenderer,Converter={StaticResource N2V}}">
                                <Grid Margin="10" DataContext="{Binding Source={StaticResource uProvider},Path=SelectedRenderer}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Source="Resources/MusicRecord.png" MaxWidth="48" Margin="0,0,10,0"/>
                                    <TextBlock Grid.Column="1" Margin="0,0,10,0" MaxWidth="150" VerticalAlignment="Center" TextTrimming="CharacterEllipsis">
                                        <Run Text="{Binding CurrentTrackTitle}"/> • <Run Text="{Binding CurrentTrackArtist}"/><LineBreak/>
                                        <Run Text="{Binding CurrentTrackAlbum}"/>
                                    </TextBlock>
                                    <Border Grid.Column="2" Margin="0,0,10,0" Background="{DynamicResource BorderBrush}" CornerRadius="10" HorizontalAlignment="Center">
                                        <Grid Margin="10,0" ClipToBounds="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.Resources>
                                                <Style TargetType="ctl:GeoImage">
                                                    <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                                </Style>
                                            </Grid.Resources>
                                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PREVIOUS}" Width="16" Height="16" Margin="0,0,10,0" CommandParameter="previous" Command="{Binding PlaybackControlCommand}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="25" Grid.Column="1" Width="40" Height="40" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <Grid>
                                                    <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAYPAUSE}" Grid.Column="1" Margin="10" CommandParameter="playpause" Command="{Binding PlaybackControlCommand}">
                                                        <ctl:GeoImage.Style>
                                                            <Style TargetType="ctl:GeoImage">
                                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                                        <Setter Property="GeoBrush" Value="{DynamicResource PrimaryBrush}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding IsPlaying}" Value="False">
                                                                        <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ctl:GeoImage.Style>
                                                    </ctl:GeoImage>
                                                </Grid>
                                            </Border>
                                            <ctl:GeoImage GeoSource="{DynamicResource GEO_NEXT}" Grid.Column="2" Margin="10,0,0,0" Width="16" Height="16" CommandParameter="next" Command="{Binding PlaybackControlCommand}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                    <StackPanel Grid.Column="3" Orientation="Horizontal">
                                        <TextBlock Text="{Binding PositionString,Mode=OneWay}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                        <Slider Maximum="{Binding Duration,Mode=OneWay}" Value="{Binding Position,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Delay=100}" IsMoveToPointEnabled="True" Width="250" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                        <TextBlock Text="{Binding DurationString,Mode=OneWay}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <TreeView Grid.Row="3" ItemsSource="{Binding Source={StaticResource uProvider},Path=SelectedServer.Items}" VirtualizingStackPanel.IsVirtualizing="True" TreeViewItem.Expanded="TreeView_UPnP_Expanded" TreeViewItem.Collapsed="TreeView_UPnP_Collapsed">
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Items}" DataType="{x:Type upnp:UPnPItem}">
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Image Source="{Binding Icon}" Grid.Column="0" Margin="0,0,5,0" HorizontalAlignment="Left" VerticalAlignment="Top" MaxWidth="16"/>
                                            <TextBlock Text="{Binding Header ,Mode=OneWay}" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        </Grid>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                            <Grid Grid.Row="3" Visibility="{Binding Source={StaticResource uProvider},Path=IsBrowseBusy,Converter={StaticResource B2V}}" Background="{DynamicResource RegionBrush}" Opacity="0.75">
                                <hc:LoadingIndicator Style="{StaticResource LoadingIndicatorRingStyle}" IsActive="{Binding Source={StaticResource uProvider},Path=IsBrowseBusy}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Web Browser">
                    <Border Background="{DynamicResource VioletBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10">
                            <wv2:WebView2 x:Name="WebView2_WPF_Control"/>
                        </Grid>
                    </Border>
                </TabItem>
            </TabControl>
        </DockPanel>
        <Grid Background="{DynamicResource PrimaryTextBrush}" HorizontalAlignment="Right" Margin="0,0,0,100" Visibility="{Binding ElementName=ToggleButton_Chat,Path=IsChecked,Converter={StaticResource B2V}}" Grid.ColumnSpan="2" VerticalAlignment="Bottom" Height="400" Width="300" GotFocus="Grid_Chat_GotFocus">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <ListBox Background="{DynamicResource MainContentBackgroundBrush}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.CanContentScroll="False" BorderThickness="0" Style="{StaticResource StackPanelVerticalListBox}" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.Chat}" Margin="0,0,0,5">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <hc:ChatBubble Role="{Binding Role}" Type="{Binding Type}" Content="{Binding Message}" Tag="{Binding}" IsRead="True" Margin="0,0,0,10" MaxHeight="200" MaxWidth="300" Selected="ChatBubble_Selected"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Grid Grid.Row="1" Margin="5,0,5,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBox x:Name="TextBox_Chat_Message" Grid.Row="1" Margin="0,0,5,0"/>
                <Button Grid.Row="1" Margin="0,0,5,0" Grid.Column="1" hc:IconElement.Geometry="{StaticResource AudioGeometry}" Style="{StaticResource ButtonIconCircular}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.SendAudioMessageCommand}"/>
                <Button Grid.Row="1" Margin="0,0,5,0" Grid.Column="2" hc:IconElement.Geometry="{StaticResource AllGeometry}" Style="{StaticResource ButtonIconCircular}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.SendMessageCommand}" ToolTip="{DynamicResource LOC_IMAGE}"/>
                <Button Grid.Row="1" Grid.Column="3" hc:IconElement.Geometry="{StaticResource RightGeometry}" Style="{StaticResource ButtonIconCircular}" CommandParameter="{Binding ElementName=TextBox_Chat_Message,Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HTTPFileServer.QuickLink.SendMessageCommand}"/>
            </Grid>
        </Grid>
        <Grid Visibility="{Binding ElementName=MenuItem_About,Path=IsChecked,Converter={StaticResource B2V}}" d:Visibility="Collapsed" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="4" Opacity="0.5"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,64,0,48">
                <ctl:GeoImage GeoBrush="#16D6FA" Margin="0,0,10,0">
                    <ctl:GeoImage.GeoSource>
                        m 5.291667,9.0679691 h 4.233334 c 0.51551,-5.032878 7.06337,-6.452552 9.16323,-1.5875 1.10488,2.5598179 -0.80708,5.4483799 -3.3424,6.1811699 C 10.903871,14.945503 4.627721,13.830469 0,13.830469 v 4.233334 h 11.641671 c 2.20096,0 4.27333,0.03781 6.35,-0.818647 11.25828,-4.6432 2.29065,-22.0447929 -8.20209,-15.9746429 -1.24243,0.718767 -2.36887,1.826154 -3.139887,3.034956 -0.904558,1.418167 -1.286563,3.102266 -1.358027,4.7625 m 20.108334,6.3499999 h 4.23333 c 0.36301,-7.9272069 11.79539,-9.2667399 13.61837,-1.322916 0.86995,3.79095 -2.404,7.86511 -6.21003,8.177371 C 24.874011,23.27075 12.213061,22.297134 0,22.297134 v 4.233334 h 26.193751 c 4.28625,0 9.34164,0.727075 13.49375,-0.471488 6.78365,-1.957943 9.93114,-10.09941 6.47568,-16.1972629 -5.65044,-9.97114603 -20.29884,-5.259414 -20.76318,5.5562499 M 0,30.763803 v 4.233334 c 8.596711,0 17.348121,-0.480748 25.929171,0.01138 2.57545,0.147902 5.08053,2.585773 4.70508,5.280289 -0.81888,5.876396 -8.90135,4.999038 -9.46758,-0.529166 h -4.23334 c 0.37367,8.680715 11.7684,12.390438 16.63356,4.7625 3.04827,-4.779169 0.61939,-11.468365 -4.72731,-13.258271 -3.0136,-1.008592 -6.65191,-0.500063 -9.78958,-0.500063 z
                    </ctl:GeoImage.GeoSource>
                </ctl:GeoImage>
                <TextBlock Text="QuickBeat - Ventus" FontWeight="DemiBold" FontSize="36" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </StackPanel>
            <TextBlock Text="{DynamicResource LOC_ABOUT_QUICKBEAT}" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Margin="0,0,0,10"/>
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
                <ctl:GeoImage GeoSource="{DynamicResource GEO_DEEZER}" Grid.Row="1" MaxWidth="128" Margin="0,0,10,0"/>
                <ctl:GeoImage GeoSource="{DynamicResource GEO_HANDYCONTROLS}" Grid.Row="1" MaxWidth="128" Margin="0,0,10,0"/>
                <ctl:GeoImage Source="Resources/Logos/MusicBrainz_logo_no_text.png" Grid.RowSpan="2" MaxWidth="128" Margin="0,0,10,0"/>
                <ctl:GeoImage Source="Resources/Logos/CoverArtArchive_logo_no_text.png" Grid.RowSpan="2" MaxWidth="128" Margin="0,0,10,0"/>
                <ctl:GeoImage Source="Resources/Logos/fanarttv_logo.png" Grid.RowSpan="2" MaxWidth="128" Margin="0,0,10,0"/>
                <ctl:GeoImage Source="Resources/Logos/lucenenet_logo.png" Grid.RowSpan="2" MaxWidth="128" Margin="0,0,10,0"/>
                <ctl:GeoImage Source="Resources/Logos/icons8_logo.png" Grid.RowSpan="2" MaxWidth="128" Margin="0,0,10,0"/>
            </StackPanel>
            <ToggleButton Grid.Row="3" HorizontalAlignment="Center" Style="{StaticResource ToggleButtonPrimary}" Content="{DynamicResource LOC_CLOSE}" hc:IconElement.Geometry="{StaticResource CloseGeometry}" IsChecked="{Binding ElementName=MenuItem_About,Path=IsChecked}"/>
        </Grid>
        <hc:Drawer x:Name="Drawer_Right" Dock="Right" ShowMode="Push" d:Visibility="Collapsed" Grid.ColumnSpan="2">
            <ListBox Grid.IsSharedSizeScope="True" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=ItemsConfiguration}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemBaseStyle}">
                        <Setter Property="Focusable" Value="False"/>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <!--<Border Background="{StaticResource RegionBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="15" Margin="0,0,0,5">-->
                        <Grid Margin="10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col0" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col1" />
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col2" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Name}" Margin="0,0,10,0" VerticalAlignment="Center" />
                            <TextBlock Text="{Binding Status}" Margin="0,0,10,0" Grid.Column="1" VerticalAlignment="Center" Visibility="{Binding NotIsErrored,Converter={StaticResource B2V}}" />
                            <TextBlock Text="{Binding Exception.Message}" Margin="0,0,10,0" Grid.Column="1" VerticalAlignment="Center" Visibility="{Binding IsErrored,Converter={StaticResource B2V}}" />
                            <hc:CircleProgressBar Value="{Binding Progress}" Margin="0,0,10,0" Grid.Column="2" Width="24" Height="24" ShowText="False" IsIndeterminate="{Binding IsErrored}" />
                            <StackPanel Orientation="Horizontal" Grid.Column="3" HorizontalAlignment="Right">
                                <ctl:GeoImage GeoSource="{StaticResource WarningGeometry}" GeoBrush="{StaticResource DangerBrush}" Width="14" Height="16" Margin="0,0,10,0" Visibility="{Binding IsErrored,Converter={StaticResource B2V}}" />
                                <Viewbox Margin="0,0,10,0" Width="24" Height="24">
                                    <hc:LoadingIndicator Style="{StaticResource LoadingIndicatorWaveStyle}" IsActive="{Binding IsLoading}"/>
                                </Viewbox>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </hc:Drawer>
    </Grid>
</hc:Window>