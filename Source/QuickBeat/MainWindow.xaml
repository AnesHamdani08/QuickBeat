<hc:Window x:Class="MainWindow" x:Name="YourOwner" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:hc="https://handyorg.github.io/handycontrol" xmlns:utils="clr-namespace:QuickBeat.Utilities" xmlns:ctl="clr-namespace:QuickBeat.Controls" xmlns:local="clr-namespace:QuickBeat" xmlns:cnv="clr-namespace:QuickBeat.Converters" xmlns:yt="clr-namespace:QuickBeat.Youtube.WPF" xmlns:upnp="clr-namespace:QuickBeat.UPnP" mc:Ignorable="d" Title="{DynamicResource LOC_APPNAME}" Height="650" Width="1000" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" ShowIcon="False" AllowDrop="True" WindowStartupLocation="CenterScreen" BorderThickness="0" MinWidth="800" MinHeight="610">
    <hc:Window.Icon>
        <ImageSource>Resources/MusicRecord.png</ImageSource>
    </hc:Window.Icon>
    <hc:Window.Resources>
        <cnv:ValueToStringConverter x:Key="V2S"/>
        <cnv:GenericMultiValueConverter x:Key="GMVC"/>
        <cnv:DoubleToVisibilityConverter x:Key="D2V"/>
        <cnv:MetadataToLyricsConverter x:Key="M2L"/>
        <cnv:NullStringToVisibilityConverter x:Key="NS2V"/>
        <cnv:PlaylistToDefaultImageSourceConverter x:Key="P2I"/>
        <cnv:BooleanToNotBooleanConverter x:Key="B2NB"/>
        <cnv:NumericToRoundedNumericConverter x:Key="N2RN"/>
        <cnv:BooleanToVisibilityPlusConverter x:Key="B2VP"/>
        <cnv:TextToImageSourceConverter x:Key="T2IS"/>
        <cnv:VisibilityToBooleanConverter x:Key="V2B"/>
        <cnv:ValueToSingleMarginPropertyConverter x:Key="V2SMP"/>
        <cnv:PlaylistAddBehaviourToIntegerConverter x:Key="AB2I"/>
        <cnv:TimerActionToIntegerConverter x:Key="STA2I"/>
        <cnv:ColorToBrushConverter x:Key="C2B"/>
        <cnv:ThemeTypeToColorPalleteConverter x:Key="TT2CP"/>
        <cnv:BooleanToApplicationThemeConverter x:Key="B2AT"/>
        <cnv:NullToVisibilityConverter x:Key="N2V"/>
        <BooleanToVisibilityConverter x:Key="B2V" />
        <RoutedUICommand x:Key="Commands.SetTabIndexCommand" Text="SetTabIndexCommand" />
        <RoutedUICommand x:Key="Commands.Hide" Text="Hide" />
        <RoutedUICommand x:Key="Commands.SortLibrary" Text="SortLibrary"/>
        <RoutedUICommand x:Key="Commands.OpenInExplorer" Text="OpenInExplorer"/>
        <RoutedUICommand x:Key="Commands.StopPlayerVideoEffect" Text="StopVideoEffect"/>
        <RoutedUICommand x:Key="Commands.PickPlayerVideoEffect" Text="PickVideoEffect"/>
        <RoutedUICommand x:Key="Commands.LoadSubtitles" Text="LoadSubtitles"/>
        <RoutedUICommand x:Key="Commands.PlayLibrary" Text="PlayLibrary"/>
        <Style x:Key="TextBlock_HeaderStyle" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,0,0,10" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="FontWeight" Value="DemiBold" />
        </Style>
        <Style TargetType="ctl:GeoImage">
            <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
        </Style>
        <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonSwitch}">
            <Setter Property="Background" Value="{DynamicResource MainContentBackgroundBrush}"/>
        </Style>
        <upnp:UPnPProvider x:Key="uProvider"/>
    </hc:Window.Resources>
    <hc:Window.CommandBindings>
        <CommandBinding Command="{StaticResource Commands.SetTabIndexCommand}" CanExecute="SetTabIndex_CanExecute" Executed="SetTabIndex_Executed" />
        <CommandBinding Command="{StaticResource Commands.Hide}" CanExecute="Hide_CanExecute" Executed="Hide_Executed" />
        <CommandBinding Command="{x:Static ApplicationCommands.Close}" CanExecute="Close_CanExecute" Executed="Close_Executed" />
        <CommandBinding Command="{StaticResource Commands.SortLibrary}" CanExecute="SortLibrary_CanExecute" Executed="SortLibrary_Executed"/>
        <CommandBinding Command="{StaticResource Commands.OpenInExplorer}" CanExecute="OpenInExplorer_CanExecute" Executed="OpenInExplorer_Executed"/>
        <CommandBinding Command="{StaticResource Commands.StopPlayerVideoEffect}" CanExecute="StopPlayerVideoEffect_CanExecute" Executed="StopPlayerVideoEffect_Executed"/>
        <CommandBinding Command="{StaticResource Commands.PickPlayerVideoEffect}" CanExecute="PickPlayerVideoEffect_CanExecute" Executed="PickPlayerVideoEffect_Executed"/>
        <CommandBinding Command="{StaticResource Commands.LoadSubtitles}" CanExecute="Commands_LoadSubtitles_CanExecute" Executed="Commands_LoadSubtitles_Executed"/>
        <CommandBinding Command="{StaticResource Commands.PlayLibrary}" CanExecute="Commands_PlayLibrary_CanExecute" Executed="Commands_PlayLibrary_Executed"/>
    </hc:Window.CommandBindings>
    <hc:Window.TaskbarItemInfo>
        <TaskbarItemInfo x:Name="TaskbarItemInfo_Main" ProgressState="{Binding TaskbarState}" ProgressValue="{Binding TaskbarProgress}" Overlay="{Binding TaskbarOverlay}" Description="{Binding StreamMetadata.Title}">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfo CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}">
                    <ThumbButtonInfo.ImageSource>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing Geometry="{StaticResource GEO_PREVIOUS}" Brush="WhiteSmoke">
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="Black" Thickness="1" />
                                    </GeometryDrawing.Pen>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </ThumbButtonInfo.ImageSource>
                </ThumbButtonInfo>
                <ThumbButtonInfo CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}">
                    <ThumbButtonInfo.ImageSource>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing Geometry="{StaticResource GEO_PLAYPAUSE}" Brush="WhiteSmoke">
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="Black" Thickness="1" />
                                    </GeometryDrawing.Pen>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </ThumbButtonInfo.ImageSource>
                </ThumbButtonInfo>
                <ThumbButtonInfo CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}">
                    <ThumbButtonInfo.ImageSource>
                        <DrawingImage>
                            <DrawingImage.Drawing>
                                <GeometryDrawing Geometry="{StaticResource GEO_NEXT}" Brush="WhiteSmoke">
                                    <GeometryDrawing.Pen>
                                        <Pen Brush="Black" Thickness="1" />
                                    </GeometryDrawing.Pen>
                                </GeometryDrawing>
                            </DrawingImage.Drawing>
                        </DrawingImage>
                    </ThumbButtonInfo.ImageSource>
                </ThumbButtonInfo>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </hc:Window.TaskbarItemInfo>
    <Grid>
        <hc:NotifyIcon x:Name="NotifyIcon_Main" Icon="MusicRecordIcon.ico" Text="{DynamicResource LOC_APPNAME}" MouseDoubleClick="NotifyIcon_Main_MouseDoubleClick">
            <hc:NotifyIcon.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{StaticResource LOC_APPNAME}" IsEnabled="False">
                        <MenuItem.Icon>
                            <Image Source="Resources/MusicRecord.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{Binding Playlist.PreviousItem.Title}" CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource GEO_PREVIOUS}" GeoBrush="{DynamicResource PrimaryTextBrush}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem HorizontalAlignment="Left" CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}">
                        <MenuItem.Header>
                            <TextBlock Text="{Binding StreamMetadata.Title}" MaxWidth="200" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left"/>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource GEO_PLAYPAUSE}" GeoBrush="{DynamicResource PrimaryTextBrush}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{Binding Playlist.NextItem.Title}" CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{StaticResource GEO_NEXT}" GeoBrush="{DynamicResource PrimaryTextBrush}" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="{StaticResource LOC_EXIT}" Command="{x:Static ApplicationCommands.Close}" />
                </ContextMenu>
            </hc:NotifyIcon.ContextMenu>
        </hc:NotifyIcon>
        <DockPanel LastChildFill="True">
            <Menu Background="{x:Null}" Visibility="{Binding ElementName=YourOwner,Path=IsFullScreen,Converter={StaticResource B2VP},ConverterParameter=0}">
                <Menu.Style>
                    <Style TargetType="Menu" BasedOn="{StaticResource MenuBaseStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="False">
                                <Setter Property="DockPanel.Dock" Value="Bottom"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="True">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Menu.Style>
                <Image Height="24" Source="Resources/MusicRecord.png"/>
                <MenuItem Header="{DynamicResource LOC_FILE}" >
                    <MenuItem Header="{DynamicResource LOC_OPEN}" Command="{Binding LoadCommand}" />
                    <MenuItem Header="{DynamicResource LOC_REMOTE}">
                        <MenuItem Header="{DynamicResource LOC_INTERNET}" IsCheckable="True" IsChecked="{Binding Source={x:Static utils:SharedProperties.Instance},Path=IsInternetConnected, Mode=OneWay}" IsEnabled="False"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource LOC_URL}" Command="{Binding LoadURLCommand}" />
                        <MenuItem Header="{DynamicResource LOC_YOUTUBEDL}" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=YoutubeDL}" IsEnabled="{Binding Source={x:Static utils:SharedProperties.Instance},Path=IsInternetConnected, Mode=OneWay}">
                            <MenuItem>
                                <MenuItem.Resources>
                                    <yt:Int32ToQualityConverter x:Key="I2Q"/>
                                </MenuItem.Resources>
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <ComboBox Style="{StaticResource ComboBoxCapsule}" SelectedIndex="{Binding VideoQuality,Converter={StaticResource I2Q}}" Margin="5">
                                            <ComboBoxItem Content="best"/>
                                            <ComboBoxItem Content="worst"/>
                                            <ComboBoxItem Content="bestvideo"/>
                                            <ComboBoxItem Content="worstvideo"/>
                                            <ComboBoxItem Content="bestaudio"/>
                                            <ComboBoxItem Content="worstaudio"/>
                                        </ComboBox>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <MenuItem>
                                <MenuItem.Resources>
                                    <yt:Int32ToSearchProviderConverter x:Key="I2SP"/>
                                </MenuItem.Resources>
                                <MenuItem.Template>
                                    <ControlTemplate>
                                        <ComboBox Style="{StaticResource ComboBoxCapsule}" SelectedIndex="{Binding DefaultSearchProvider,Converter={StaticResource I2SP}}" Margin="5">
                                            <ComboBoxItem Content="YouTube"/>
                                            <ComboBoxItem Content="SoundCloud"/>
                                        </ComboBox>
                                    </ControlTemplate>
                                </MenuItem.Template>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="{DynamicResource LOC_PATH}" Command="{Binding SetPathCommand}"/>
                            <MenuItem Header="{DynamicResource LOC_QUICKOPEN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" Command="{Binding QuickLoadCommand}"/>
                            <MenuItem Header="{DynamicResource LOC_OPEN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" Command="{Binding LoadCommand}"/>
                            <MenuItem Header="{DynamicResource LOC_FINDANDOPEN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" Command="{Binding SearchAndLoadDefaultCommand}"/>
                            <MenuItem Header="{DynamicResource LOC_PLAYLIST}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}" Command="{Binding LoadPlaylistCommand}"/>
                        </MenuItem>
                        <MenuItem Header="Deezer" IsEnabled="{Binding Source={x:Static utils:SharedProperties.Instance},Path=IsInternetConnected, Mode=OneWay}">
                            <MenuItem Header="{DynamicResource LOC_PREVIEW}" IsCheckable="True" IsChecked="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand},Path=Preview}"/>
                            <MenuItem Header="{DynamicResource LOC_SEARCH}">
                                <MenuItem Header="{DynamicResource LOC_TRACK}" CommandParameter="search/track" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_ARTIST}" CommandParameter="search/artist" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_ALBUM}" CommandParameter="search/album" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_PLAYLIST}" CommandParameter="search/playlist" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_RADIO}" CommandParameter="search/radio" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                            </MenuItem>
                            <MenuItem Header="{DynamicResource LOC_BYID}">
                                <MenuItem Header="{DynamicResource LOC_TRACK}" CommandParameter="track" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_ARTIST}">
                                    <MenuItem Header="{DynamicResource LOC_TOP}" CommandParameter="artist/top" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                    <MenuItem Header="{DynamicResource LOC_RADIO}" CommandParameter="artist/radio" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_ALBUM}" CommandParameter="album" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_PLAYLIST}" CommandParameter="playlist" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_RADIO}" CommandParameter="radio" Command="{Binding Source={x:Static utils:Commands.DeezerBrowseCommand}}"/>
                            </MenuItem>
                        </MenuItem>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_SUBTITLES}" Command="{StaticResource Commands.LoadSubtitles}"/>
                    <Separator/>
                    <MenuItem Header="{DynamicResource LOC_APPEND}" CommandParameter="{Binding Playlist}" Command="{Binding AddToPlaylistCommand}" />
                    <MenuItem Header="{DynamicResource LOC_ENQUEUE}" CommandParameter="{Binding Playlist}" Command="{Binding AddToQueueCommand}" />
                    <Separator/>
                    <MenuItem Header="{DynamicResource LOC_HIDE}" Command="{StaticResource Commands.Hide}" />
                    <MenuItem Header="{DynamicResource LOC_EXIT}" Command="{x:Static ApplicationCommands.Close}" />
                </MenuItem>
                <MenuItem Header="{DynamicResource LOC_EDIT}">
                    <MenuItem Header="{DynamicResource LOC_METADATA}">
                        <MenuItem Header="{DynamicResource LOC_EDIT}" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:Commands.ShowTagEditorCommand}}"/>
                    </MenuItem>
                    <MenuItem Header="A-B">
                        <MenuItem Header="{DynamicResource LOC_LOOP}" IsCheckable="True" IsChecked="{Binding IsABLoop}"/>
                        <MenuItem CommandParameter="{Binding Position}" Command="{Binding SetACommand}">
                            <MenuItem.Header>
                                <TextBlock>
                                    A <Run Text="{Binding ABLoop.AString,Mode=OneWay}"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                        <MenuItem CommandParameter="{Binding Position}" Command="{Binding SetBCommand}">
                            <MenuItem.Header>
                                <TextBlock>
                                    B <Run Text="{Binding ABLoop.BString,Mode=OneWay}"/>
                                </TextBlock>
                            </MenuItem.Header>
                        </MenuItem>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource LOC_VIEW}">
                    <MenuItem Header="{DynamicResource LOC_RIGHTSIDEBAR}" IsCheckable="True" IsChecked="{Binding ElementName=Grid_SideBar_Right,Path=Visibility,Converter={StaticResource V2B}}"/>
                    <MenuItem Header="{DynamicResource LOC_BOTTOMCONTROLBAR}" IsCheckable="True" IsChecked="{Binding ElementName=YourOwner,Path=IsBottomControls,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
                    <MenuItem Header="{DynamicResource LOC_VISUALIZER}" DataContext="{Binding VideoEffect}">
                        <MenuItem Header="{DynamicResource LOC_RETURN}" CommandParameter="0" Command="{StaticResource Commands.SetTabIndexCommand}"/>
                        <MenuItem Header="{DynamicResource LOC_NOWPLAYING}" CommandParameter="6" Command="{StaticResource Commands.SetTabIndexCommand}"/>
                        <Separator/>
                        <MenuItem Header="{Binding Name}"/>
                        <Separator/>
                        <MenuItem Header="{DynamicResource LOC_BIND}" CommandParameter="{x:Reference Name=Image_VisualizerOutput}" Command="{Binding SetOutputCommand}"/>
                        <MenuItem Header="{DynamicResource LOC_VISUALIZER}" IsCheckable="True" IsChecked="{Binding IsEnabled}"/>
                        <MenuItem Header="{DynamicResource LOC_CONTROLS}" IsCheckable="True" IsChecked="{Binding ElementName=YourOwner,Path=ShowVisualizerControls}"/>
                        <MenuItem Header="{DynamicResource LOC_FRAMERATE}">
                            <MenuItem IsEnabled="False" Header="{Binding ActualFramerate}"/>
                        </MenuItem>
                        <MenuItem Header="{DynamicResource LOC_RESOLUTION}">
                            <MenuItem IsEnabled="False">
                                <MenuItem.Header>
                                    <TextBlock>
                                        <Run Text="{Binding Width}"/>x<Run Text="{Binding Height}"/>
                                    </TextBlock>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator/>
                            <MenuItem Header="SD" CommandParameter="640x480" Command="{Binding SetResolutionCommand}"/>
                            <MenuItem Header="HD" CommandParameter="1280x720" Command="{Binding SetResolutionCommand}"/>
                            <MenuItem Header="FHD" CommandParameter="1920x1080" Command="{Binding SetResolutionCommand}"/>
                            <MenuItem Header="QHD" CommandParameter="2560x1440" Command="{Binding SetResolutionCommand}"/>
                            <MenuItem Header="UHD" CommandParameter="3840x2160" Command="{Binding SetResolutionCommand}"/>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="{DynamicResource LOC_OPEN}" Command="{StaticResource Commands.PickPlayerVideoEffect}"/>
                        <MenuItem Header="{DynamicResource LOC_CLOSE}" Command="{StaticResource Commands.StopPlayerVideoEffect}"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="{DynamicResource LOC_ABOUT}">
                    <MenuItem IsEnabled="False">
                        <MenuItem.Header>
                            <TextBlock>
                                QuickBeat V<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:MainWindow},Path=Version}"/>
                            </TextBlock>
                        </MenuItem.Header>
                        <MenuItem.Icon>
                            <Image Source="Resources/MusicRecord.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_CHECKFORUPDATES}" Click="MenuItem_CheckForUpdates_Click"/>
                    <MenuItem>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://github.com/AnesHamdani08/QuickBeat" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    <Run Text="{DynamicResource LOC_REPOSITORY}"/>
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem Header="{DynamicResource LOC_KEYBOARD}" Click="MenuItem_KeyboardNavigation_Click">
                        <MenuItem.Icon>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Resources/MusicRecord.png" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://icons8.com/icon/63803/music-record" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Music Record Icon By Icons8.com
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Resources/CircledPlay.png" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://icons8.com/icon/KQ5qZwOlaNdR/circled-play" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Circled Play Icon By Icons8.com
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Resources/PauseButton.png" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://icons8.com/icon/bBryBDQG6NDr/pause-button" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Pause Button Icon By Icons8.com
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Image Source="Resources/StopCircled.png" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock>
                                <Hyperlink NavigateUri="https://icons8.com/icon/dTY6dSHhkQ8o/stop-circled" RequestNavigate="HyperLink_About_Icon_RequestNavigate">
                                    Stop Circled Icon By Icons8.com
                                </Hyperlink>
                            </TextBlock>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
            </Menu>
            <Grid Margin="0,0,0,-40">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="True">
                                <Setter Property="DockPanel.Dock" Value="Bottom"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="False">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard>
                            <Storyboard BeginTime="0:0:1">
                                <ThicknessAnimation From="0,0,0,-40" To="0" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)">
                                    <ThicknessAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                                <ThicknessAnimation To="0,0,0,-40" BeginTime="0:0:1.5" Duration="0:0:0.5" AccelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)">
                                    <ThicknessAnimation.EasingFunction>
                                        <SineEase EasingMode="EaseInOut"/>
                                    </ThicknessAnimation.EasingFunction>
                                </ThicknessAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Grid.Triggers>
                <TextBlock Text="{Binding Source={x:Static utils:SharedProperties.Instance},Path=CurrentGreeting,Mode=OneWay}" Margin="10,0,10,10" HorizontalAlignment="Center"/>
            </Grid>
            <Grid Background="{DynamicResource ThirdlyRegionBrush}" Height="Auto">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding ElementName=Grid_SideBar_Left,Path=ActualWidth}"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="63"/>
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.MaxHeight)" From="150" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="(Grid.MaxHeight)" From="0" To="150" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="True">
                                <Setter Property="DockPanel.Dock" Value="Bottom"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBottomControls}" Value="False">
                                <Setter Property="DockPanel.Dock" Value="Top"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid Grid.Row="1" Grid.Column="0" Margin="0,10" HorizontalAlignment="Center" ClipToBounds="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <Style TargetType="ctl:GeoImage">
                            <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                        </Style>
                    </Grid.Resources>
                    <ctl:GeoImage GeoSource="{DynamicResource GEO_PREVIOUS}" Width="16" Height="16" Margin="0,0,10,0" CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding Playlist.PreviousItem.TitleArtist}">
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPreviewing}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="-15,0,10,0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="0,0,10,0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                    <ctl:GeoImage GeoSource="{DynamicResource GEO_RETURN}" Width="16" Height="16" Margin="0,0,10,0" CommandParameter="{Binding PreviewControlHandle}" Command="{Binding StopControlHandleCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" Visibility="{Binding IsPreviewing,Converter={StaticResource B2V},Delay=250}">
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPreviewing}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="10,0,10,0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="0,55,10,0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="0" BeginTime="0:0:0.10" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="25" Grid.Column="1" Width="40" Height="40" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding Playlist.CurrentItem.TitleArtist}">
                        <Grid>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAYPAUSE}" Grid.Column="1" Margin="10" CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}" Visibility="{Binding IsPreviewing,ConverterParameter=0,Converter={StaticResource B2VP}}">
                                <ctl:GeoImage.Style>
                                    <Style TargetType="ctl:GeoImage">
                                        <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="False">
                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ctl:GeoImage.Style>
                            </ctl:GeoImage>
                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAYPAUSE}" Grid.Column="1" Margin="10" CommandParameter="{Binding PreviewControlHandle}" Command="{Binding StopControlHandleAndResumeCommand}" Visibility="{Binding IsPreviewing,Converter={StaticResource B2V}}">
                                <ctl:GeoImage.Style>
                                    <Style TargetType="ctl:GeoImage">
                                        <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryBrush}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding IsPlaying}" Value="False">
                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ctl:GeoImage.Style>
                            </ctl:GeoImage>
                        </Grid>
                    </Border>
                    <ctl:GeoImage GeoSource="{DynamicResource GEO_NEXT}" Grid.Column="2" Margin="10,0,0,0" Width="16" Height="16" CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{Binding Playlist.NextItem.TitleArtist}">
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPreviewing}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="15,0,0,0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="10,0,0,0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                    <ctl:GeoImage GeoSource="{DynamicResource AddGeometry}" Grid.Column="2" Width="16" Height="16" CommandParameter="{Binding StreamMetadata.Path}" Command="{Binding LoadAndAddCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Opacity="0" Visibility="{Binding IsPreviewing,Converter={StaticResource B2V},Delay=250}">
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPreviewing}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="10,0,0,0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation Storyboard.TargetProperty="(ctl:GeoImage.Margin)" To="10,55,0,0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <DoubleAnimation Storyboard.TargetProperty="(ctl:GeoImage.Opacity)" To="0" BeginTime="0:0:0.10" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                </Grid>
                <TextBlock Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,10" TextAlignment="Center" Text="{Binding ElementName=YourOwner,Path=InfoText}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text,Converter={StaticResource NS2V}}"/>
                <StackPanel Orientation="Horizontal" Margin="0,0,10,0" Grid.Row="1" Grid.Column="1" ClipToBounds="True">
                    <ToggleButton Margin="0,10,10,10" Visibility="{Binding ElementName=YourOwner,Path=IsBigCover,Converter={StaticResource B2VP},ConverterParameter=0,Delay=500}" IsChecked="{Binding ElementName=YourOwner,Path=IsBigCover}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonCustom}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBigCover}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation To="-55,10,10,10" Duration="0:0:0.5" AccelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard BeginTime="0:0:0.5">
                                                    <ThicknessAnimation To="0,10,10,10" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ToggleButton.Style>
                        <ToggleButton.Content>
                            <Image Source="{Binding StreamMetadata.DefaultCover}">
                                <Image.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="{DynamicResource LOC_VIEW}" CommandParameter="{Binding StreamMetadata.DefaultCover}" Command="{Binding Source={x:Static utils:Commands.ViewImageCommand}}"/>
                                        <MenuItem Header="{DynamicResource LOC_NOWPLAYING}" CommandParameter="6" Command="{StaticResource Commands.SetTabIndexCommand}"/>
                                        <MenuItem Header="{DynamicResource LOC_PROPERTIES}" CommandParameter="{Binding StreamMetadata}" Command="{Binding ShowMetadataInfoCommand}">
                                            <MenuItem.Icon>
                                                <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                                            </MenuItem.Icon>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource LOC_ENQUEUE}" Command="{Binding AddToQueueCommand}">
                                            <MenuItem.CommandParameter>
                                                <MultiBinding Converter="{StaticResource GMVC}">
                                                    <MultiBinding.Bindings>
                                                        <Binding Source="{x:Static utils:SharedProperties.Instance}" Path="Player.Playlist"/>
                                                        <Binding Source="{x:Static utils:SharedProperties.Instance}" Path="Player.StreamMetadata"/>
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </MenuItem.CommandParameter>
                                        </MenuItem>
                                        <MenuItem Header="{DynamicResource LOC_ADDTOPLAYLIST}" CommandParameter="{Binding StreamMetadata}" Command="{Binding AddToPlaylistFromPickerCommand}"/>
                                        <MenuItem CommandParameter="{Binding Playlist}" Command="{Binding SavePlaylistCommand}">
                                            <MenuItem.Header>
                                                <TextBlock>
                                            <Run Text="{DynamicResource LOC_SAVE}"/> <Run Text="{Binding Playlist.Name}"/>
                                                </TextBlock>
                                            </MenuItem.Header>
                                        </MenuItem>
                                        <Separator/>
                                        <MenuItem Header="{DynamicResource LOC_REFRESHCOVER}" CommandParameter="{Binding StreamMetadata}" Command="{Binding RefreshMetadataCoverCommand}"/>
                                    </ContextMenu>
                                </Image.ContextMenu>
                            </Image>
                        </ToggleButton.Content>
                    </ToggleButton>
                    <StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" Margin="0,0,10,0">
                        <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding StreamMetadata.Title}" HorizontalAlignment="Left" FontSize="16" FontWeight="DemiBold" Margin="0,0,0,5" TextTrimming="CharacterEllipsis" MaxWidth="150"/>
                        <ctl:ClickTextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" Text="{Binding StreamMetadata.DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" Opacity="0.5" TextTrimming="CharacterEllipsis" MaxWidth="250" />
                    </StackPanel>
                    <TextBlock Text="{Binding PositionString}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                    <TextBlock VerticalAlignment="Center" Margin="0,0,10,0" Visibility="{Binding IsABLoop,Converter={StaticResource B2V}}">
                        (<Run Text="{Binding ABLoop.AString,Mode=OneWay}"/>)
                    </TextBlock>
                    <Grid>
                        <Slider Width="350" VerticalAlignment="Center" Margin="0,0,10,0" Maximum="{Binding Length}" Value="{Binding Position, Delay=100}" IsMoveToPointEnabled="True" Visibility="{Binding IsLoadingStream,Converter={StaticResource B2VP},ConverterParameter=0}">
                            <Slider.Style>
                                <Style TargetType="Slider" BasedOn="{StaticResource SliderBaseStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Slider.Width)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="0" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="1" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <DoubleAnimation Storyboard.TargetProperty="(Slider.Width)" To="350" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Slider.Style>
                        </Slider>
                        <ProgressBar Width="350" Style="{StaticResource ProgressBarFlat}" IsIndeterminate="True" VerticalAlignment="Center" Margin="0,0,10,0" Visibility="{Binding IsLoadingStream,Converter={StaticResource B2V}}"/>
                    </Grid>
                    <TextBlock VerticalAlignment="Center" Margin="0,0,10,0" Text="/" Opacity="0" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=Opacity,Converter={StaticResource D2V}}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(TextBlock.Opacity)" To="1" BeginTime="0:0:0.25" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                        <DoubleAnimation.EasingFunction>
                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                        </DoubleAnimation.EasingFunction>
                                                    </DoubleAnimation>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock Text="{Binding StreamMetadata.LengthString}" VerticalAlignment="Center" Margin="0,0,10,0" />
                    <TextBlock VerticalAlignment="Center" Margin="0,0,0,0" Visibility="{Binding IsABLoop,Converter={StaticResource B2V}}">
                        (<Run Text="{Binding ABLoop.BString,Mode=OneWay}"/>)
                    </TextBlock>
                    <Button Style="{StaticResource ButtonIcon}" hc:IconElement.Geometry="{StaticResource DownloadGeometry}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" Visibility="Collapsed"/>
                    <!--Visibility="{Binding DownloadFinished,Converter={StaticResource Boolean2VisibilityConverter}}"/>-->
                    <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding StreamMetadata.IsFavorite,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_STAR_EMPTY}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_STAR_FILLED}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                    <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding Playlist.IsLooping,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ALL}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_LOOP_ALL}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                    <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding Playlist.IsShuffling,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ARROW}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_CIRCLE_SHUFFLE}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                    <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding IsLooping,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_CIRCLE_ONE}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_LOOP_ONE}" Height="Auto" Width="38" MaxWidth="38" VerticalAlignment="Center" />
                    <ToggleButton Style="{StaticResource ToggleButtonIconTransparent}" IsChecked="{Binding IsMuted,Mode=TwoWay}" hc:IconElement.Geometry="{DynamicResource GEO_VOLUME}" hc:IconSwitchElement.GeometrySelected="{DynamicResource GEO_SPEAKER}" Height="38" Width="38" VerticalAlignment="Center" />
                    <Slider Width="72" Value="{Binding Volume,Mode=TwoWay,Delay=10}" Maximum="100" SmallChange="5" LargeChange="10" IsMoveToPointEnabled="True" VerticalAlignment="Center">
                        <Slider.Style>
                            <Style TargetType="Slider" BasedOn="{StaticResource SliderBaseStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsHighVolume}" Value="True">
                                        <Setter Property="hc:ThemeManager.RequestedAccentColor" Value="{DynamicResource DangerBrush}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsHighVolume}" Value="False">
                                        <Setter Property="hc:ThemeManager.RequestedAccentColor" Value="{DynamicResource InfoBrush}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Slider.Style>
                    </Slider>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2" Margin="0,10,10,10">
                    <ProgressBar Value="{Binding Level.Left}" Maximum="32" Orientation="Vertical" Style="{StaticResource ProgressBarFlat}" Width="8" Margin="0,0,5,0"/>
                    <ProgressBar Value="{Binding Level.Right}" Maximum="32" Orientation="Vertical" Style="{StaticResource ProgressBarFlat}" Width="8"/>
                </StackPanel>
                <ctl:GeoImage Grid.Column="3" Grid.Row="1" GeoSource="{StaticResource WarningGeometry}" GeoBrush="{StaticResource WarningBrush}" Margin="0,20,10,20" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=AllInitialized,ConverterParameter=0,Converter={StaticResource B2VP}}">
                    <ctl:GeoImage.Style>
                        <Style TargetType="ctl:GeoImage">
                            <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                            <Style.Triggers>
                                <Trigger Property="Visibility" Value="Visible">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation From="0" To="1" Duration="0:0:1" DecelerationRatio="0.95" AutoReverse="True" RepeatBehavior="Forever" Storyboard.TargetProperty="(ctl:GeoImage.Opacity)">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation To="0" Duration="0:0:1" DecelerationRatio="0.95" Storyboard.TargetProperty="(ctl:GeoImage.Opacity)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ctl:GeoImage.Style>
                    <ctl:GeoImage.ToolTip>
                        <ItemsControl Grid.IsSharedSizeScope="True" VerticalAlignment="Center" Grid.Row="1" Margin="0,0,0,10" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=ItemsConfiguration}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border Background="{StaticResource RegionBrush}" BorderBrush="{StaticResource BorderBrush}" BorderThickness="1" CornerRadius="15" Margin="0,0,0,5">
                                        <Grid Margin="10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col0" />
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col1" />
                                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col2" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="{Binding Name}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                            <TextBlock Text="{Binding Status}" Margin="0,0,10,0" Grid.Column="1" VerticalAlignment="Center" Visibility="{Binding NotIsErrored,Converter={StaticResource B2V}}" />
                                            <TextBlock Text="{Binding Exception.Message}" Margin="0,0,10,0" Grid.Column="1" VerticalAlignment="Center" Visibility="{Binding IsErrored,Converter={StaticResource B2V}}" />
                                            <hc:CircleProgressBar Value="{Binding Progress}" Margin="0,0,10,0" Grid.Column="2" Width="24" Height="24" ShowText="False" IsIndeterminate="{Binding IsErrored}" />
                                            <StackPanel Orientation="Horizontal" Grid.Column="3" HorizontalAlignment="Right">
                                                <ctl:GeoImage GeoSource="{StaticResource WarningGeometry}" GeoBrush="{StaticResource DangerBrush}" Width="14" Height="16" Margin="0,0,10,0" Visibility="{Binding IsErrored,Converter={StaticResource B2V}}" />
                                                <Viewbox Margin="0,0,10,0" Width="24" Height="24">
                                                    <hc:LoadingIndicator Style="{StaticResource LoadingIndicatorWaveStyle}" IsActive="{Binding IsLoading}" />
                                                </Viewbox>
                                            </StackPanel>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ctl:GeoImage.ToolTip>
                </ctl:GeoImage>
            </Grid>
            <Grid x:Name="Grid_SideBar_Left" DockPanel.Dock="Left" Background="{DynamicResource ThirdlyRegionBrush}" Width="150">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="-500,0,0,0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                <!--To="-150,0,0,0"-->
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Margin="0,0,0,0">
                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type RadioButton}">
                                <Setter Property="Content" Value="" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="FontSize" Value="16" />
                                <Setter Property="FontWeight" Value="DemiBold" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="ToggleButton">
                                            <Border Background="{TemplateBinding BorderBrush}" CornerRadius="5,0,0,5">
                                                <StackPanel Orientation="Horizontal" Margin="5">
                                                    <Rectangle Fill="{TemplateBinding Foreground}" Width="5" Margin="0,0,20,0" RadiusX="2" RadiusY="2"/>
                                                    <ContentPresenter />
                                                </StackPanel>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsChecked" Value="True">
                                                    <Setter Property="BorderBrush" Value="{DynamicResource SecondaryRegionBrush}" />
                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}" />
                                                </Trigger>
                                                <Trigger Property="IsChecked" Value="False">
                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{DynamicResource LOC_TABS}" Margin="30,10,0,10" Opacity="0.5" />
                        <RadioButton x:Name="RadioButton_MainTabControl_Home" GroupName="Tabs" Content="{DynamicResource LOC_HOME}" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="0" Command="{StaticResource Commands.SetTabIndexCommand}" />
                        <RadioButton x:Name="RadioButton_MainTabControl_PlaylistQueue" GroupName="Tabs" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="1" Command="{StaticResource Commands.SetTabIndexCommand}">
                            <TextBlock><Run Text="{DynamicResource LOC_PLAYLIST}" />/<Run Text="{DynamicResource LOC_QUEUE}" /></TextBlock>
                        </RadioButton>
                        <RadioButton x:Name="RadioButton_MainTabControl_Library" GroupName="Tabs" Content="{DynamicResource LOC_LIBRARY}" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="2" Command="{StaticResource Commands.SetTabIndexCommand}" />
                        <RadioButton x:Name="RadioButton_MainTabControl_Search" GroupName="Tabs" Content="{DynamicResource LOC_SEARCH}" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="3" Command="{StaticResource Commands.SetTabIndexCommand}" />
                        <RadioButton x:Name="RadioButton_MainTabControl_Settings" GroupName="Tabs" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="4" Command="{StaticResource Commands.SetTabIndexCommand}">
                            <Grid>
                                <TextBlock Text="{DynamicResource LOC_SETTINGS}" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=SleepTimer.IsEnabled,ConverterParameter=0,Converter={StaticResource B2VP}}"/>
                                <TextBlock Text="{Binding Source={x:Static utils:SharedProperties.Instance},Path=SleepTimer.TimeLeft.TotalSeconds,Converter={StaticResource N2RN},ConverterParameter=0+ s}" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=SleepTimer.IsEnabled,Converter={StaticResource B2V}}"/>
                            </Grid>
                        </RadioButton>
                        <RadioButton x:Name="RadioButton_MainTabControl_UPnP" GroupName="Tabs" HorizontalAlignment="Stretch" Margin="0,0,0,10" CommandParameter="7" Command="{StaticResource Commands.SetTabIndexCommand}">
                            <Grid>
                                <TextBlock Text="{DynamicResource LOC_LAN}" Visibility="{Binding Source={StaticResource uProvider},Path=IsUsingRenderer,ConverterParameter=0,Converter={StaticResource B2VP}}"/>
                                <TextBlock Visibility="{Binding Source={StaticResource uProvider},Path=IsUsingRenderer,Converter={StaticResource B2V}}">
                                    <Run Text="{Binding Source={StaticResource uProvider},Path=SelectedRenderer.CurrentTrackTitle}"/><LineBreak/>
                                    <Run Text="{Binding Source={StaticResource uProvider},Path=SelectedRenderer.PositionString,Mode=OneWay}"/>/<Run Text="{Binding Source={StaticResource uProvider},Path=SelectedRenderer.DurationString,Mode=OneWay}"/><LineBreak/>                                    
                                    <Run Text="{Binding Source={StaticResource uProvider},Path=SelectedRenderer.Info.Name}" FontSize="11" FontStyle="Italic" FontWeight="Normal"/>
                                </TextBlock>
                            </Grid>
                        </RadioButton>
                        <TextBlock Text="{DynamicResource LOC_LIBRARY}" Margin="30,0,0,10" Opacity="0.5" />
                        <ListBox ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=RecommendedPlaylists}" Margin="0,0,5,10" Style="{StaticResource ListBoxPlaylistContainerBaseStyle}"/>
                        <TextBlock Text="{DynamicResource LOC_PLAYLIST}" Margin="30,0,0,10" Opacity="0.5" />
                        <ListBox ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=CustomPlaylists}" Margin="0,0,5,10" Style="{StaticResource ListBoxPlaylistContainerBaseStyle}"/>
                    </StackPanel>
                </ScrollViewer>
                <Grid Grid.Row="1" HorizontalAlignment="Stretch" ClipToBounds="True" Margin="0,0,10,0">
                    <ctl:GeoImage Grid.Column="0" MaxHeight="348" Source="{Binding StreamMetadata.DefaultCover}" CommandParameter="1" Command="{StaticResource Commands.SetTabIndexCommand}" Visibility="{Binding ElementName=YourOwner,Path=IsBigCover,Converter={StaticResource B2V}}">
                        <ctl:GeoImage.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{DynamicResource LOC_VIEW}" CommandParameter="{Binding StreamMetadata.DefaultCover}" Command="{Binding Source={x:Static utils:Commands.ViewImageCommand}}"/>
                                <MenuItem Header="{DynamicResource LOC_NOWPLAYING}" CommandParameter="6" Command="{StaticResource Commands.SetTabIndexCommand}"/>
                                <MenuItem Header="{DynamicResource LOC_PROPERTIES}" CommandParameter="{Binding StreamMetadata}" Command="{Binding ShowMetadataInfoCommand}">
                                    <MenuItem.Icon>
                                        <ctl:GeoImage GeoSource="{DynamicResource GEO_CIRCLE_INFO}"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="{DynamicResource LOC_ENQUEUE}" Command="{Binding AddToQueueCommand}">
                                    <MenuItem.CommandParameter>
                                        <MultiBinding Converter="{StaticResource GMVC}">
                                            <MultiBinding.Bindings>
                                                <Binding Source="{x:Static utils:SharedProperties.Instance}" Path="Player.Playlist"/>
                                                <Binding Source="{x:Static utils:SharedProperties.Instance}" Path="Player.StreamMetadata"/>
                                            </MultiBinding.Bindings>
                                        </MultiBinding>
                                    </MenuItem.CommandParameter>
                                </MenuItem>
                                <MenuItem Header="{DynamicResource LOC_ADDTOPLAYLIST}" CommandParameter="{Binding StreamMetadata}" Command="{Binding AddToPlaylistFromPickerCommand}"/>
                                <MenuItem CommandParameter="{Binding Playlist}" Command="{Binding SavePlaylistCommand}">
                                    <MenuItem.Header>
                                        <TextBlock>
                                            <Run Text="{DynamicResource LOC_SAVE}"/> <Run Text="{Binding Playlist.Name}"/>
                                        </TextBlock>
                                    </MenuItem.Header>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="{DynamicResource LOC_REFRESHCOVER}" CommandParameter="{Binding StreamMetadata}" Command="{Binding RefreshMetadataCoverCommand}"/>
                            </ContextMenu>
                        </ctl:GeoImage.ContextMenu>
                        <ctl:GeoImage.Style>
                            <Style TargetType="ctl:GeoImage">
                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation To="0" Duration="0:0:0.2" DecelerationRatio="0.9" Storyboard.TargetProperty="(ctl:GeoImage.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation To="10" Duration="0:0:0.2" DecelerationRatio="0.9" Storyboard.TargetProperty="(ctl:GeoImage.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ctl:GeoImage.Style>
                    </ctl:GeoImage>
                    <Grid Background="{DynamicResource WarningBrush}" VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="{Binding IsPreviewing,Converter={StaticResource B2V}}">
                        <Grid.RenderTransform>
                            <SkewTransform AngleX="-32"/>
                        </Grid.RenderTransform>
                        <TextBlock TextAlignment="Left" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalAlignment="Left" Text="{DynamicResource LOC_PREVIEW}">
                            <TextBlock.RenderTransform>
                                <SkewTransform AngleX="32"/>
                            </TextBlock.RenderTransform>
                        </TextBlock>
                    </Grid>
                    <ToggleButton VerticalAlignment="Top" HorizontalAlignment="Right" Visibility="{Binding ElementName=YourOwner,Path=IsBigCover,Converter={StaticResource B2V}}" Style="{StaticResource ToggleButtonFlip.Small}" Margin="0,2,2,0" IsChecked="{Binding ElementName=YourOwner,Path=IsBigCover}">
                        <hc:StatusSwitchElement.CheckedElement>
                            <TextBlock Text="v" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </hc:StatusSwitchElement.CheckedElement>
                    </ToggleButton>
                    <Grid Background="{DynamicResource PrimaryBrush}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Opacity="1">
                        <Grid.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsBigCover}" Value="False">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation To="-150,0,0,0" Duration="0:0:0.5" AccelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <ThicknessAnimation To="0" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(Grid.Margin)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Grid.Style>
                        <Grid.RenderTransform>
                            <SkewTransform AngleX="-32"/>
                        </Grid.RenderTransform>
                        <TextBlock TextAlignment="Left" Margin="5,0,10,0">
                            <TextBlock.RenderTransform>
                                <SkewTransform AngleX="32"/>
                            </TextBlock.RenderTransform>
                            <Run Text="{Binding StreamQuality}"/>: <Run Text="{Binding Bitrate}"/>Kbps
                        </TextBlock>
                    </Grid>
                </Grid>
                <Thumb Grid.RowSpan="2" HorizontalAlignment="Right" VerticalAlignment="Center" DragDelta="Thumb_Sidebar_Left_DragDelta" Style="{StaticResource ToolBarThumbHorizontalStyle}"/>
            </Grid>
            <Grid x:Name="Grid_SideBar_Right" DockPanel.Dock="Right" Background="{DynamicResource ThirdlyRegionBrush}" Width="150">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="0,0,-500,0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                <!--To="0,0,-150,0"-->
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetProperty="(Grid.Margin)" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Margin="10,0,0,0">
                    <StackPanel>
                        <Grid DataContext="{Binding Playlist.NextItem}" ToolTip="{DynamicResource LOC_NEXT}" Margin="0,10,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col0"/>
                                <ColumnDefinition SharedSizeGroup="Col1"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Image Width="Auto" Height="32" Grid.RowSpan="2" VerticalAlignment="Center" Source="{Binding Title,Converter={StaticResource T2IS}}" Margin="0,0,10,0"/>
                            <ctl:ClickTextBlock Grid.Column="1" CommandTriggerMode="DoubleClick" Text="{Binding Title}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Player.Playlist}" Command="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Player.NextCommand}" FontSize="14" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Column="1" Grid.Row="1">
                                <Run Text="{Binding DefaultArtist,Mode=OneWay}"/> • <Run Text="{Binding Album}"/>
                            </TextBlock>
                        </Grid>
                        <Grid DataContext="{Binding Playlist.PreviousItem}" ToolTip="{DynamicResource LOC_PREVIOUS}" Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Col0"/>
                                <ColumnDefinition SharedSizeGroup="Col1"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Image Width="Auto" Height="32" Grid.RowSpan="2" VerticalAlignment="Center" Source="{Binding Title,Converter={StaticResource T2IS}}" Margin="0,0,10,0"/>
                            <ctl:ClickTextBlock Grid.Column="1" CommandTriggerMode="DoubleClick" Text="{Binding Title}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Player.Playlist}" Command="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Player.PreviousCommand}" FontSize="14" HorizontalAlignment="Left"/>
                            <TextBlock Grid.Column="1" Grid.Row="1">
                                <Run Text="{Binding DefaultArtist,Mode=OneWay}"/> • <Run Text="{Binding Album}"/>
                            </TextBlock>
                        </Grid>
                        <GroupBox Header="{DynamicResource LOC_INFO}" Margin="0,0,10,10" BorderThickness="0">
                            <StackPanel>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap">
                                <Run Text="{DynamicResource LOC_TITLE}"/>: <Run Text="{Binding StreamMetadata.Title}"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap">
                                <Run Text="{DynamicResource LOC_ARTIST}"/>: <Run Text="{Binding StreamMetadata.JoinedArtists,Mode=OneWay}"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap">
                                <Run Text="{DynamicResource LOC_ALBUM}"/>: <Run Text="{Binding StreamMetadata.Album}"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap">
                                <Run Text="{DynamicResource LOC_GENRES}"/>: <Run Text="{Binding StreamMetadata.JoinedGenres,Mode=OneWay}"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap">
                                <Run Text="{DynamicResource LOC_LENGTH}"/>: <Run Text="{Binding StreamMetadata.LengthString,Mode=OneWay}"/>
                                </TextBlock>
                                <TextBlock Margin="0,0,0,10" TextWrapping="Wrap">
                                <Run Text="{DynamicResource LOC_PROVIDER}"/>: <Run Text="{Binding StreamMetadata.Provider.Name,Mode=OneWay}"/>
                                </TextBlock>
                                <ctl:ClickTextBlock Margin="0,0,0,10" CommandParameter="{Binding StreamMetadata.OriginalPath}" Command="{StaticResource Commands.OpenInExplorer}">
                                    <Run Text="{DynamicResource LOC_PATH}"/> :
                                    <Run Text="{Binding StreamMetadata.OriginalPath}"/>
                                </ctl:ClickTextBlock>
                                <TextBlock Margin="0,0,0,10">
                                <Run Text="{DynamicResource LOC_PLAYCOUNT}"/>: <Run Text="{Binding StreamMetadata.PlayCount}"/>
                                </TextBlock>
                            </StackPanel>
                        </GroupBox>
                        <ItemsControl ItemsSource="{Binding ElementName=YourOwner,Path=Subtitles}" MaxHeight="200" Margin="0,0,10,0">
                            <ItemsControl.Template>
                                <ControlTemplate>
                                    <ScrollViewer VirtualizingPanel.IsVirtualizing="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ItemsControl.Template>
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel Orientation="Vertical"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ctl:ClickTextBlock CommandParameter="{Binding StartTime}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.SetPositionCommand}" Margin="0,0,0,10">
                                        <Run Text="{Binding StartTimeString,Mode=OneWay}"/> :
                                        <Run Text="{Binding JoinedLines,Mode=OneWay}"/>
                                    </ctl:ClickTextBlock>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
                <Thumb Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" DragDelta="Thumb_SideBar_Right_DragDelta" MouseDoubleClick="Thumb_Sidebar_Right_MouseDoubleClick" Style="{StaticResource ToolBarThumbHorizontalStyle}"/>
            </Grid>
            <TabControl x:Name="TabControl_Main" Background="{x:Null}" BorderThickness="0">
                <!--Background="{DynamicResource SecondaryRegionBrush}"-->
                <TabControl.Effect>
                    <DropShadowEffect ShadowDepth="2" BlurRadius="10" Direction="270"/>
                </TabControl.Effect>
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem" BasedOn="{StaticResource TabItemStyle}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                    </Style>
                </TabControl.ItemContainerStyle>
                <TabItem Header="Home">
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10" ClipToBounds="True">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TabControl x:Name="TabControl_Home_Sub" Margin="0,0,0,10" Style="{StaticResource TabControlCapsuleSolid}" TabStripPlacement="Bottom">
                                <TabControl.Resources>
                                    <utils:DeezerProvider x:Key="DeezerProvider" ArtistQuery="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayedArtist2.Name}" TrackQuery="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.RandomGroup[0].TitleArtist}" FetchProp="{Binding Source={x:Static utils:SharedProperties.Instance},Path=AllInitialized}"/>
                                </TabControl.Resources>
                                <TabItem Header="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayed.Title}" Visibility="Visible">
                                    <Grid DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayed}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Image x:Name="Image_Home_XLarge" Source="{Binding DefaultCover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <Image.Effect>
                                                <BlurEffect/>
                                            </Image.Effect>
                                            <Image.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5">
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <Image x:Name="Image_Home_Large" Source="{Binding DefaultCover}">
                                                    <Image.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large,Path=ActualWidth}" VerticalAlignment="Top" CornerRadius="18" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </Image.OpacityMask>
                                                </Image>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>                                        
                                        <Run Text="{DynamicResource LOC_MOSTPLAYED}"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Title}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Text="{Binding DefaultArtist}" Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_PLAY}" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                            <Button Content="{DynamicResource LOC_PREVIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayedArtist.Name}" Visibility="Visible">
                                    <Grid DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.MostPlayedArtist}">
                                        <Grid.Resources>
                                            <utils:FanArtProvider x:Key="FanArtProvider" BindToDefault="True"/>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Image Source="{Binding Source={StaticResource FanArtProvider},Path=Background}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <Image.Effect>
                                                <BlurEffect/>
                                            </Image.Effect>
                                            <Image.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5" >
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <hc:LoadingIndicator Grid.ColumnSpan="2" Grid.RowSpan="3" Style="{StaticResource LoadingIndicatorWaveStyle}" IsActive="{Binding Source={StaticResource FanArtProvider},Path=IsBusy}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsActive,Converter={StaticResource B2V}}"/>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large2_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large2_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <Image x:Name="Image_Home_Large2" Source="{Binding Source={StaticResource FanArtProvider},Path=Thumb}">
                                                    <Image.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large2,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large2,Path=ActualWidth}" CornerRadius="8" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </Image.OpacityMask>
                                                </Image>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        <Run Text="{DynamicResource LOC_MOSTPLAYED}"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24">
                                            <Run Text="{DynamicResource LOC_PLAYCOUNT}"/>: <Run Text="{Binding PlayCount}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_VIEW}" CommandParameter="{Binding Name}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={StaticResource DeezerProvider},Path=Artist.Name}" Visibility="{Binding Source={StaticResource DeezerProvider},Path=Artist,Converter={StaticResource N2V}}">
                                    <Grid DataContext="{Binding Source={StaticResource DeezerProvider},Path=Artist}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Image Source="{Binding Source={StaticResource DeezerProvider},Path=Artist.Cover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <Image.Effect>
                                                <BlurEffect/>
                                            </Image.Effect>
                                            <Image.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5" >
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <hc:LoadingIndicator Grid.ColumnSpan="2" Grid.RowSpan="3" Style="{StaticResource LoadingIndicatorWaveStyle}" IsActive="{Binding Source={StaticResource DeezerProvider},Path=IsBusy}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsActive,Converter={StaticResource B2V}}"/>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large4_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large4_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <Image x:Name="Image_Home_Large4" Source="{Binding Source={StaticResource DeezerProvider},Path=Artist.Cover}">
                                                    <Image.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large4,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large4,Path=ActualWidth}" CornerRadius="8" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </Image.OpacityMask>
                                                </Image>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        <Run Text="Deezer"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24">
                                            <Run Text="{DynamicResource LOC_PLAYCOUNT}"/>: <Run Text="{Binding PlayCount}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_VIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={StaticResource DeezerProvider},Path=RelatedArtist.Name}" Visibility="{Binding Source={StaticResource DeezerProvider},Path=RelatedArtist,Converter={StaticResource N2V}}">
                                    <Grid DataContext="{Binding Source={StaticResource DeezerProvider},Path=RelatedArtist}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Image Source="{Binding Cover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <Image.Effect>
                                                <BlurEffect/>
                                            </Image.Effect>
                                            <Image.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5" >
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <hc:LoadingIndicator Grid.ColumnSpan="2" Grid.RowSpan="3" Style="{StaticResource LoadingIndicatorWaveStyle}" IsActive="{Binding Source={StaticResource DeezerProvider},Path=IsBusy}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=IsActive,Converter={StaticResource B2V}}"/>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large6_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large6_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <Image x:Name="Image_Home_Large6" Source="{Binding Cover}">
                                                    <Image.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large6,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large6,Path=ActualWidth}" CornerRadius="8" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </Image.OpacityMask>
                                                </Image>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        <Run Text="Deezer"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24">
                                            <Run Text="{DynamicResource LOC_PLAYCOUNT}"/>: <Run Text="{Binding PlayCount}"/>
                                            </TextBlock>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_VIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{Binding Source={StaticResource DeezerProvider},Path=Track.Title}" Visibility="{Binding Source={StaticResource DeezerProvider},Path=Track,Converter={StaticResource N2V}}">
                                    <Grid DataContext="{Binding Source={StaticResource DeezerProvider},Path=Track}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Image x:Name="Image_Home_XLarge5" Source="{Binding DefaultCover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <Image.Effect>
                                                <BlurEffect/>
                                            </Image.Effect>
                                            <Image.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5">
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large5_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large5_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <Image x:Name="Image_Home_Large5" Source="{Binding DefaultCover}">
                                                    <Image.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large5,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large5,Path=ActualWidth}" VerticalAlignment="Top" CornerRadius="18" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </Image.OpacityMask>
                                                </Image>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>                                        
                                        <Run Text="Deezer"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Title}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Text="{Binding DefaultArtist}" Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_PLAY}" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" IsEnabled="False"/>
                                            <Button Content="{DynamicResource LOC_PREVIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                                <TabItem Header="{DynamicResource LOC_RANDOM}" Visibility="Visible">
                                    <Grid DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.RandomGroup}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Image Source="{Binding Cover}" Grid.ColumnSpan="2" Grid.RowSpan="3" Stretch="UniformToFill" Margin="0,-150,0,0">
                                            <Image.Effect>
                                                <BlurEffect/>
                                            </Image.Effect>
                                            <Image.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Image.Triggers>
                                        </Image>
                                        <Rectangle Fill="{DynamicResource RegionBrush}" Grid.ColumnSpan="2" Grid.RowSpan="3" Opacity="0.5" >
                                            <Rectangle.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="50,-120,50,0" To="0,-150,0,0" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="0.5" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Rectangle}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Rectangle.Triggers>
                                        </Rectangle>
                                        <!---->
                                        <Viewport3D Grid.Column="1" Grid.RowSpan="3" Height="250" Width="250">
                                            <Viewport3D.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="30" To="15" Duration="0:0:2.5" DecelerationRatio="0.9" Storyboard.TargetName="Image_Home_Large3_Angle3D" Storyboard.TargetProperty="Angle">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Viewport3D.Triggers>
                                            <Viewport3D.Camera>
                                                <PerspectiveCamera Position="0, 0, 3"/>
                                            </Viewport3D.Camera>

                                            <!-- Button on 3D -->
                                            <Viewport2DVisual3D>
                                                <!-- Give the plane a slight rotation -->
                                                <Viewport2DVisual3D.Transform>
                                                    <RotateTransform3D>
                                                        <RotateTransform3D.Rotation>
                                                            <AxisAngleRotation3D x:Name="Image_Home_Large3_Angle3D" Angle="30" Axis="5, -15, 0" />
                                                        </RotateTransform3D.Rotation>
                                                    </RotateTransform3D>
                                                </Viewport2DVisual3D.Transform>

                                                <!-- The Geometry, Material, and Visual for the Viewport2DVisual3D -->
                                                <Viewport2DVisual3D.Geometry>
                                                    <MeshGeometry3D Positions="-1,1,0 -1,-1,0 1,-1,0 1,1,0" TextureCoordinates="0,0 0,1 1,1 1,0" TriangleIndices="0 1 2 0 2 3"/>
                                                </Viewport2DVisual3D.Geometry>

                                                <Viewport2DVisual3D.Material>
                                                    <DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" Brush="White"/>
                                                </Viewport2DVisual3D.Material>

                                                <Image x:Name="Image_Home_Large3" Source="{Binding Cover}">
                                                    <Image.OpacityMask>
                                                        <VisualBrush>
                                                            <VisualBrush.Visual>
                                                                <Border Height="{Binding ElementName=Image_Home_Large3,Path=ActualHeight}" Width="{Binding ElementName=Image_Home_Large3,Path=ActualWidth}" CornerRadius="8" Background="Black"/>
                                                            </VisualBrush.Visual>
                                                        </VisualBrush>
                                                    </Image.OpacityMask>
                                                </Image>
                                            </Viewport2DVisual3D>

                                            <!-- Lights -->
                                            <ModelVisual3D>
                                                <ModelVisual3D.Content>
                                                    <DirectionalLight Color="White" Direction="0,0,-1"/>
                                                </ModelVisual3D.Content>
                                            </ModelVisual3D>
                                        </Viewport3D>
                                        <!---->
                                        <TextBlock Grid.Row="0" Grid.Column="0" Margin="5,10,0,10" VerticalAlignment="Center" FontWeight="Bold" FontSize="18">
                                            <TextBlock.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <!--<ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Margin"/>-->
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.5" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=TextBlock}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </TextBlock.Triggers>
                                        <Run Text="{DynamicResource LOC_RANDOM}"/>(<Run Text="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}, Path=HomeTabSwitchTicksLeft}"/>)
                                        </TextBlock>
                                        <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="10">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <TextBlock Text="{Binding Name}" Grid.Row="1" Grid.Column="0" Margin="0,0,0,10" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                            <TextBlock Grid.Row="2" Grid.Column="0" FontWeight="DemiBold" FontSize="24" Text="{DynamicResource LOC_HINT_RANDOM}"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" HorizontalAlignment="Left" Margin="5,0,0,10" Orientation="Horizontal">
                                            <StackPanel.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation From="0" To="5,0,0,10" Duration="0:0:0.2" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Margin"/>
                                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.3" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=StackPanel}}" Storyboard.TargetProperty="Opacity"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </StackPanel.Triggers>
                                            <Button Content="{DynamicResource LOC_VIEW}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}" Grid.Row="3" Grid.Column="0" Margin="0,0,10,0" HorizontalAlignment="Left" />
                                        </StackPanel>
                                    </Grid>
                                </TabItem>
                            </TabControl>
                            <ListBox Grid.Row="1" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=RecommendedPlaylists}" Style="{StaticResource ListBoxCustom}" Margin="0,0,0,10">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ScrollViewer VirtualizingPanel.IsVirtualizing="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
                                            <ItemsPresenter/>
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Horizontal">
                                            <VirtualizingStackPanel.Effect>
                                                <DropShadowEffect ShadowDepth="2" BlurRadius="5" Direction="270" Color="#19000000"/>
                                            </VirtualizingStackPanel.Effect>
                                        </VirtualizingStackPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="0,0,10,10" Width="148" Height="210" Background="{DynamicResource MainContentBackgroundBrush}">
                                            <Grid.Clip>
                                                <RectangleGeometry Rect="0,0,148,210" RadiusX="10" RadiusY="10"/>
                                            </Grid.Clip>
                                            <Grid Margin="10" VerticalAlignment="Top">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Image Source="{Binding .,Converter={StaticResource P2I}}" Stretch="Fill" Width="128" Height="128">
                                                    <Image.Clip>
                                                        <RectangleGeometry Rect="0,0,128,128" RadiusX="10" RadiusY="10"/>
                                                    </Image.Clip>
                                                </Image>
                                                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Opacity="0" Background="Transparent" Margin="10">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.Triggers>
                                                        <EventTrigger RoutedEvent="MouseEnter">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="(Grid.Opacity)" From="0" To="1" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                        <EventTrigger RoutedEvent="MouseLeave">
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="(Grid.Opacity)" From="1" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </EventTrigger>
                                                    </Grid.Triggers>
                                                    <Button Content="{DynamicResource LOC_PLAY}" HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="0" Margin="0,0,10,0" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadPlaylistCommand}"/>
                                                    <Button Content="{DynamicResource LOC_VIEW}" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusGroupCommand}"/>
                                                </Grid>
                                                <TextBlock Grid.Row="1" TextWrapping="WrapWithOverflow" Text="{Binding Name}" Foreground="{DynamicResource PrimaryTextBrush}" FontWeight="DemiBold" FontSize="18" TextTrimming="CharacterEllipsis" Margin="10"/>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Grid Background="Black" Grid.RowSpan="2" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.HasItems,Converter={StaticResource B2VP},ConverterParameter=0}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_LIBRARY_WARNING}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,150,10,10" MinHeight="24" Width="Auto" Height="Auto"/>
                                <TextBlock Grid.Row="1" Text="{DynamicResource LOC_HINT_NOTHING}" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource TextBlock_HeaderStyle}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Playlist/Queue">
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" MaxHeight="300"/>
                                <RowDefinition Height="Auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <WrapPanel Grid.Row="0"  Orientation="Horizontal">
                                <ctl:ClickTextBlock Grid.Row="0" Style="{StaticResource TextBlock_HeaderStyle}" CommandParameter="{Binding Playlist}" Command="{Binding ChangePlaylistNameCommand}" ToolTip="{Binding Playlist.Description}">
                                    <Run Text="{DynamicResource LOC_PLAYINGFROM}" />
                                    <Run Text="{Binding Playlist.Name}" /> (
                                    <Run Text="{Binding Playlist.ActualIndex,Mode=OneWay}"/> /
                                    <Run Text="{Binding Playlist.Count,Mode=OneWay}"/> )
                                </ctl:ClickTextBlock>
                                <ctl:ClickTextBlock Margin="10,0,0,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_CLEAR}" CommandParameter="{Binding Playlist}" Command="{Binding ClearPlaylistCommand}"/>
                                <ctl:ClickTextBlock Margin="10,0,0,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_NEW}" Command="{Binding NewPlaylistCommand}"/>
                            </WrapPanel>
                            <TextBlock Grid.Row="1" Style="{StaticResource TextBlock_HeaderStyle}" Visibility="{Binding Playlist.HasQueueItems,Converter={StaticResource B2V}}" >
                                <Run Text="{DynamicResource LOC_QUEUE}"/> (
                                <Run Text="{Binding Playlist.Queue.Count,Mode=OneWay}"/> )
                            </TextBlock>
                            <ListBox Grid.Row="2" ItemsSource="{Binding Playlist.Queue}" SelectedIndex="{Binding Playlist.QueueIndex}" Grid.IsSharedSizeScope="True" Margin="0,0,0,10" Visibility="{Binding Playlist.HasQueueItems,Converter={StaticResource B2V}}">
                                <ListBox.Template>
                                    <ControlTemplate>
                                        <ScrollViewer Background="{DynamicResource MainContentBackgroundBrush}" VirtualizingPanel.IsVirtualizing="True">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="10,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Col0" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col1" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col2" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col3" Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ctl:ClickTextBlock Text="👁️" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Margin="0,0,20,0"/>
                                            <!--<ctl:ClickTextBlock Text="▶" Grid.Column="1" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Margin="0,0,20,0" IsEnabled="False"/>-->
                                            <StackPanel Margin="0,0,20,0" Grid.Column="2">
                                                <TextBlock Text="{Binding Title}" Margin="0,0,0,5" />
                                                <ctl:ClickTextBlock Text="{Binding DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                            </StackPanel>
                                            <ctl:ClickTextBlock Text="{Binding Album}" Margin="0,0,20,0" Grid.Column="3" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusAlbumCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <StackPanel Grid.Row="3" HorizontalAlignment="Left" Orientation="Horizontal" Margin="0,0,0,10">
                                <TextBlock Text="{DynamicResource LOC_PLAYLIST}" Style="{StaticResource TextBlock_HeaderStyle}" Visibility="{Binding Playlist.HasItems,Converter={StaticResource B2V}}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                <ToggleButton Content="{DynamicResource LOC_EDIT}" hc:IconElement.Geometry="{StaticResource DragVerticalGeometry}" IsChecked="{Binding ElementName=ListBox_Playlist,Path=IsDragDropMode,Mode=TwoWay}" VerticalAlignment="Center" Opacity="0.5">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonDefault}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ListBox_Playlist,Path=IsDragDropMode}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation To="1" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ToggleButton.Opacity)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation To="0.5" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ToggleButton.Opacity)">
                                                                    <DoubleAnimation.EasingFunction>
                                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                    </DoubleAnimation.EasingFunction>
                                                                </DoubleAnimation>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                </ToggleButton>
                            </StackPanel>
                            <ctl:DragDropListBox x:Name="ListBox_Playlist" Grid.Row="4" ItemsSource="{Binding Playlist}" SelectedIndex="{Binding Playlist.Index}" Grid.IsSharedSizeScope="True" Visibility="{Binding Playlist.HasItems,Converter={StaticResource B2V}}" Style="{StaticResource ListBoxPlaylistBaseStyle}"/>
                            <Grid Grid.RowSpan="5" Visibility="{Binding IsPlayingFromPlaylist,Converter={StaticResource B2VP}, ConverterParameter=0}">
                                <Rectangle Fill="{DynamicResource RegionBrush}" Opacity="0.5"/>
                                <TextBlock Text="{DynamicResource LOC_DIRECTPLAY}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="24" Margin="0,0,0,24" FontFamily="Yu Gothic UI Light"/>
                                <Button Content="{DynamicResource LOC_QUERY_SWITCHTOPLAYLIST}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,48,0,0" Command="{Binding SyncWithPlaylistCommand}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Library">
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <WrapPanel Grid.Row="0"  Orientation="Horizontal">
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_PLAYALL}" Command="{StaticResource Commands.PlayLibrary}"/>
                                <TextBlock Grid.Row="0" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0,0,10,0">
                                <Run Text="{DynamicResource LOC_SORT}"/>:
                                </TextBlock>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_NONE}" CommandParameter="none" Command="{StaticResource Commands.SortLibrary}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_TITLE}" CommandParameter="Title" Command="{StaticResource Commands.SortLibrary}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_ARTIST}" CommandParameter="Artist" Command="{StaticResource Commands.SortLibrary}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_ALBUM}" CommandParameter="Album" Command="{StaticResource Commands.SortLibrary}"/>
                            </WrapPanel>
                            <ListBox x:Name="ListBox_Library" Grid.Row="1" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Style="{StaticResource ListBoxMetadataBaseStyle}" Grid.IsSharedSizeScope="True" Margin="10" >
                                <!--<ListBox.Template>
                                <ControlTemplate>
                                    <ScrollViewer Background="{DynamicResource MainContentBackgroundBrush}" VirtualizingPanel.IsVirtualizing="True">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListBox.Template>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="10,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col1" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col2" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col3" Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ctl:ClickTextBlock Text="👁️" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Margin="0,0,20,0"/>
                                        <ctl:ClickTextBlock Text="▶" Grid.Column="1" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Margin="0,0,20,0"/>
                                        <StackPanel Margin="0,0,20,0" Grid.Column="2">
                                            <TextBlock Text="{Binding Title}" Margin="0,0,0,5" />
                                            <ctl:ClickTextBlock Text="{Binding DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </StackPanel>
                                        <ctl:ClickTextBlock Text="{Binding Album}" Margin="0,0,20,0" Grid.Column="3" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusAlbumCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>-->
                            </ListBox>
                            <Grid Background="Black" Grid.RowSpan="2" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.HasItems,Converter={StaticResource B2VP},ConverterParameter=0}">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_LIBRARY_WARNING}" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,150,10,10" MinHeight="24" Width="Auto" Height="Auto"/>
                                <TextBlock Grid.Row="1" Text="{DynamicResource LOC_HINT_NOTHING}" HorizontalAlignment="Center" VerticalAlignment="Top" Style="{StaticResource TextBlock_HeaderStyle}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Search">
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <hc:SearchBar SearchStarted="SearchBar_SearchStarted" Style="{StaticResource SearchBarExtend}" hc:InfoElement.Placeholder="Query" Text="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Library.SearchQuery,UpdateSourceTrigger=PropertyChanged}" Command="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Library.SearchCommand}" Margin="10" />
                            <!--<ListBox Grid.Row="1" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.SearchResult}" SelectedIndex="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Library.SearchIndex}" Grid.IsSharedSizeScope="True" Margin="10">-->
                            <TextBlock Grid.Row="1" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10">
                            <Run Text="{DynamicResource LOC_HINT_SEARCH_TOOK}"/> <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.SearchTookTime}"/> s
                            </TextBlock>
                            <ListBox Grid.Row="2" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.SearchResult}" Grid.IsSharedSizeScope="True" Margin="10" Style="{StaticResource ListBoxMetadataBaseStyle}">
                                <!--<ListBox.Template>
                                <ControlTemplate>
                                    <ScrollViewer VirtualizingPanel.IsVirtualizing="True">
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListBox.Template>
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="10,5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition SharedSizeGroup="Col0" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col1" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col2" Width="Auto" />
                                            <ColumnDefinition SharedSizeGroup="Col3" Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <ctl:ClickTextBlock Text="👁️" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadCommand}" Margin="0,0,20,0"/>
                                        <ctl:ClickTextBlock Text="▶" Grid.Column="1" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Margin="0,0,20,0"/>
                                        <StackPanel Margin="0,0,20,0" Grid.Column="2">
                                            <TextBlock Text="{Binding Title}" Margin="0,0,0,5" />
                                            <ctl:ClickTextBlock Text="{Binding DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </StackPanel>
                                        <ctl:ClickTextBlock Text="{Binding Album}" Margin="0,0,20,0" Grid.Column="3" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusAlbumCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>-->
                            </ListBox>
                            <Grid Grid.RowSpan="3" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.IsSearching,Converter={StaticResource B2V}}">
                                <Rectangle Fill="{DynamicResource RegionBrush}" Opacity="0.5"/>
                                <hc:LoadingCircle IsRunning="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=Visibility,Converter={StaticResource V2B}}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Settings">
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Margin="10">
                            <VirtualizingStackPanel Orientation="Vertical" Grid.IsSharedSizeScope="True">
                                <TextBlock Text="{DynamicResource LOC_GENERAL}" Style="{StaticResource TextBlock_HeaderStyle}" />
                                <Grid Margin="0,0,0,10" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=SleepTimer}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                        <ColumnDefinition SharedSizeGroup="Col2"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center" Text="{DynamicResource LOC_SLEEPTIMER}"/>
                                    <Grid Grid.Column="1" IsEnabled="{Binding IsEnabled, Converter={StaticResource B2NB}}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <hc:NumericUpDown Grid.Column="0" Margin="0,0,10,0" Minimum="0" Maximum="24" Value="{Binding Hours}" Style="{StaticResource NumericUpDownExtend}" hc:TitleElement.Title="{DynamicResource LOC_HOURS}" hc:TitleElement.TitlePlacement="Left"/>
                                        <hc:NumericUpDown Grid.Column="1" Margin="0,0,10,0" Minimum="0" Maximum="60" Value="{Binding Minutes}" Style="{StaticResource NumericUpDownExtend}" hc:TitleElement.Title="{DynamicResource LOC_MINUTES}" hc:TitleElement.TitlePlacement="Left"/>
                                        <hc:NumericUpDown Grid.Column="2" Margin="0,0,10,0" Minimum="0" Maximum="60" Value="{Binding Seconds}" Style="{StaticResource NumericUpDownExtend}" hc:TitleElement.Title="{DynamicResource LOC_SECONDS}" hc:TitleElement.TitlePlacement="Left"/>
                                    </Grid>
                                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                                        <Button Margin="0,0,10,0" hc:IconElement.Geometry="{StaticResource ClockGeometry}" CommandParameter="{Binding .}" Command="{Binding StartCommand}" IsEnabled="{Binding IsEnabled,Converter={StaticResource B2NB}}">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource ButtonDefault}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsFinished}" Value="True">
                                                            <Setter Property="Background" Value="{StaticResource SuccessBrush}"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding IsFinished}" Value="False">
                                                            <Setter Property="Background" Value="{StaticResource DefaultBrush}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <hc:ProgressButton Visibility="{Binding IsEnabled,Converter={StaticResource B2V}}" IsChecked="True" Progress="{Binding Progress}" Margin="0,0,10,0" MinWidth="48" Style="{StaticResource ProgressButtonInfo}" Content="{Binding TimeLeft.TotalSeconds, Converter={StaticResource N2RN},ConverterParameter=0+ s}"/>
                                        <Button hc:IconElement.Geometry="{StaticResource RemoveGeometry}" Command="{Binding StopCommand}" CommandParameter="{Binding .}" IsEnabled="{Binding IsEnabled}" Margin="0,0,10,0"/>
                                        <ComboBox SelectedIndex="{Binding Action,Converter={StaticResource STA2I}}">
                                            <ComboBoxItem Content="{DynamicResource LOC_NONE}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_NOTIFY}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_PAUSE}"/>
                                            <ComboBoxItem Content="{DynamicResource LOC_EXIT}"/>
                                        </ComboBox>
                                    </StackPanel>
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                        <Run Text="{DynamicResource LOC_COLORPRESET}"/>:
                                    </TextBlock>
                                    <ComboBox Grid.Column="1" Margin="0,0,10,0" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Themes}" SelectedIndex="{Binding Source={x:Static utils:SharedProperties.Instance},Path=ThemesSelectedIndex}" Grid.IsSharedSizeScope="True">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition SharedSizeGroup="Theme_Col0"/>
                                                        <ColumnDefinition Width="Auto" SharedSizeGroup="Theme_Col1"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding Name}" Margin="0,0,10,0"/>
                                                    <ItemsControl ItemsSource="{Binding .,Converter={StaticResource TT2CP}}" Grid.Column="1">
                                                        <ItemsControl.ItemsPanel>
                                                            <ItemsPanelTemplate>
                                                                <VirtualizingStackPanel Orientation="Horizontal" VirtualizingPanel.IsVirtualizing="True"/>
                                                            </ItemsPanelTemplate>
                                                        </ItemsControl.ItemsPanel>
                                                        <ItemsControl.ItemTemplate>
                                                            <DataTemplate>
                                                                <Border Width="16" Height="16" VerticalAlignment="Center" Margin="0,0,5,0" CornerRadius="1" BorderThickness="1" BorderBrush="Gray" Background="{Binding .,Converter={StaticResource C2B}}"/>
                                                            </DataTemplate>
                                                        </ItemsControl.ItemTemplate>
                                                    </ItemsControl>
                                                </Grid>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Center" hc:InfoElement.Necessary="True">
                                        <Run Text="{DynamicResource LOC_THEME_LIGHT}"/> ⁽ᴮᴱᵀᴬ⁾
                                    </TextBlock>
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding Source={x:Static hc:ThemeManager.Current},Path=ApplicationTheme,Converter={StaticResource B2AT},ConverterParameter=0}" HorizontalAlignment="Left" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_STARTUPBEHAVIOUR}"/>:
                                    </TextBlock>
                                    <ComboBox x:Name="ComboBox_Settings_StartupBehaviour" Grid.Column="1" Margin="0,0,10,0" SelectionChanged="ComboBox_Settings_StartupBehaviour_SelectionChanged">
                                        <ComboBoxItem Content="{DynamicResource LOC_NORMAL}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_MINIMIZE}"/>
                                    </ComboBox>
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_CLOSINGBEHAVIOUR}"/>:
                                    </TextBlock>
                                    <ComboBox x:Name="ComboBox_Settings_ClosingBehaviour" Grid.Column="1" Margin="0,0,10,0" SelectionChanged="ComboBox_Settings_ClosingBehaviour_SelectionChanged">
                                        <ComboBoxItem Content="{DynamicResource LOC_CLOSE}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_MINIMIZE}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_SYSTEMTRAY}"/>
                                    </ComboBox>
                                </Grid>
                                <Separator Margin="0,0,0,10"/>
                                <TextBlock Text="{DynamicResource LOC_PLAYER}" Style="{StaticResource TextBlock_HeaderStyle}" />
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_AUTOPLAY}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding AutoPlay}" HorizontalAlignment="Left" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_FADEAUDIO}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding IsFadingAudio}" HorizontalAlignment="Left" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="TrueVolume" Margin="0,0,10,0" VerticalAlignment="Center" />
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding TrueVolume}" HorizontalAlignment="Left" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_CROSSFADE}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding IsCrossfading}" HorizontalAlignment="Left" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_CROSSFADE}" />: <Run Text="{DynamicResource LOC_DURATION}" />
                                    </TextBlock>
                                    <Slider Maximum="10000" TickPlacement="BottomRight" TickFrequency="1000" Width="200" SmallChange="100" LargeChange="1000" Grid.Column="1" Value="{Binding CrossfadeDuration}" HorizontalAlignment="Left" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_SILENCESKIP}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding IsSkippingSilence}" HorizontalAlignment="Left" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0" />
                                        <ColumnDefinition SharedSizeGroup="Col1" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_REMOTETAGSREADING}" Margin="0,0,10,0" VerticalAlignment="Center" />
                                    <ToggleButton Grid.Column="1" IsChecked="{Binding RemoteTagsReading}" HorizontalAlignment="Left" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                        <ColumnDefinition SharedSizeGroup="Col2"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_ADDBEHAVIOUR}"/>:
                                    </TextBlock>
                                    <ComboBox SelectedIndex="{Binding Playlist.SongAddBehaviour,Mode=TwoWay,Converter={StaticResource AB2I}}" Grid.Column="1" Margin="0,0,10,0">
                                        <ComboBoxItem Content="{DynamicResource LOC_FIRST}"/>
                                        <ComboBoxItem Content="{DynamicResource LOC_LAST}"/>
                                    </ComboBox>
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                        <ColumnDefinition SharedSizeGroup="Col2"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_AUDIOEFFECTS}"/>:
                                    </TextBlock>
                                    <ComboBox x:Name="ComboBox_Settings_Player_AudioEffects" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.EffectsProfile}" Grid.Column="1" Margin="0,0,10,0">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock >
                                                <Run Text="{Binding Category}"/>/<Run Text="{Binding Name}"/>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <WrapPanel Orientation="Horizontal" Grid.Column="2">
                                        <Button hc:IconElement.Geometry="{StaticResource AddGeometry}" Command="{Binding AddAudioEffectCommand}" Margin="0,0,10,0"/>
                                        <Button hc:IconElement.Geometry="{StaticResource RemoveGeometry}" CommandParameter="{Binding ElementName=ComboBox_Settings_Player_AudioEffects,Path=SelectedItem}" Command="{Binding RemoveAudioEffectCommand}" Margin="0,0,10,0"/>
                                        <Button hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Command="{Binding ClearAudioEffectsCommand}" Margin="0,0,10,0"/>
                                        <Button hc:IconElement.Geometry="{StaticResource ConfigGeometry}" CommandParameter="{Binding ElementName=ComboBox_Settings_Player_AudioEffects,Path=SelectedItem}" Command="{Binding ConfigAudioEffectCommand}" Margin="0,0,10,0"/>
                                        <ToggleButton IsChecked="{Binding ElementName=ComboBox_Settings_Player_AudioEffects,Path=SelectedItem.IsEnabled}" Margin="0,0,10,0"/>
                                    </WrapPanel>
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                        <ColumnDefinition SharedSizeGroup="Col2"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_MODULES}"/>:
                                    </TextBlock>
                                    <ComboBox x:Name="ComboBox_Settings_Player_Modules" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.Modules}" Grid.Column="1" Margin="0,0,10,0">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock >
                                                <Run Text="{Binding Name, Mode=OneWay}"/>: <Run Text="{Binding Info, Mode=OneWay}"/>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <WrapPanel Orientation="Horizontal" Grid.Column="2">
                                        <Button hc:IconElement.Geometry="{StaticResource AddGeometry}" Command="{Binding AddEngineModuleCommand}" Margin="0,0,10,0"/>
                                        <Button hc:IconElement.Geometry="{StaticResource RemoveGeometry}" CommandParameter="{Binding ElementName=ComboBox_Settings_Player_Modules,Path=SelectedItem}" Command="{Binding RemoveEngineModuleCommand}" Margin="0,0,10,0"/>
                                        <Button hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Command="{Binding ClearEngineModulesCommand}" Margin="0,0,10,0"/>
                                        <Button hc:IconElement.Geometry="{StaticResource ConfigGeometry}" CommandParameter="{Binding ElementName=ComboBox_Settings_Player_Modules,Path=SelectedItem}" Command="{Binding ConfigEngineModuleCommand}" Margin="0,0,10,0"/>
                                        <ToggleButton IsChecked="{Binding ElementName=ComboBox_Settings_Player_Modules,Path=SelectedItem.IsEnabled}" Margin="0,0,10,0"/>
                                    </WrapPanel>
                                </Grid>
                                <TextBlock Text="{DynamicResource LOC_HINT_ENGINEMODULE_OPERATIONS}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                        <ColumnDefinition SharedSizeGroup="Col2"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                        <Run Text="{DynamicResource LOC_OUTPUT}"/>:
                                    </TextBlock>
                                    <ComboBox ItemsSource="{Binding Devices}" SelectedIndex="{Binding Output}" Grid.Column="1" Margin="0,0,10,0">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock>
                                                <Run Text="{Binding .,Converter={StaticResource V2S}}"/>
                                                </TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <Button hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" CommandParameter="{Binding .}" Command="{Binding RefreshDevicesCommand}" Grid.Column="2" HorizontalAlignment="Left" Margin="0,0,10,0"/>
                                </Grid>
                                <Separator Margin="0,0,0,10"/>
                                <TextBlock Text="{DynamicResource LOC_LIBRARY}" Style="{StaticResource TextBlock_HeaderStyle}" Margin="0,0,0,10" />
                                <TextBlock Margin="0,0,0,10">
                                    <Run Text="{DynamicResource LOC_COUNT}"/>: <Run Text="{Binding Source={x:Static utils:SharedProperties.Instance}, Path=Library.Count,Mode=OneWay}"/>
                                </TextBlock>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_SOURCES}"/>:
                                    </TextBlock>
                                    <ComboBox x:Name="ComboBox_Settings_Library_Paths" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=LibraryPaths}" Grid.Column="1" Margin="0,0,10,0" />
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_SOURCES}"/>:
                                    </TextBlock>
                                    <WrapPanel Grid.Column="1">
                                        <Button Content="{DynamicResource LOC_ADD}" Command="{x:Static utils:Commands.LibraryPathAddCommand}" hc:IconElement.Geometry="{StaticResource AddGeometry}" Margin="0,0,10,0" />
                                        <Button Content="{DynamicResource LOC_REMOVE}" CommandParameter="{Binding ElementName=ComboBox_Settings_Library_Paths,Path=SelectedItem}" Command="{x:Static utils:Commands.LibraryPathRemoveCommand}" hc:IconElement.Geometry="{StaticResource RemoveGeometry}" Margin="0,0,10,0" />
                                        <Button Content="{DynamicResource LOC_CLEAR}" Command="{x:Static utils:Commands.LibraryPathClearCommand}" hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Margin="0,0,10,0" />
                                    </WrapPanel>
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_LIBRARY}"/>:
                                    </TextBlock>
                                    <WrapPanel Grid.Column="1">
                                        <Button Content="{DynamicResource LOC_REBUILD}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryRebuildCommand}" hc:IconElement.Geometry="{StaticResource ConfigGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRebuildCommand},Path=IsRebuilding,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                        <ToggleButton Content="{DynamicResource LOC_CANCEL}" IsChecked="{Binding Source={x:Static utils:Commands.LibraryRebuildCommand},Path=StopRebuilding}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRebuildCommand},Path=IsRebuilding,Converter={StaticResource B2V}}" Margin="0,0,10,0"/>
                                        <Button Content="{DynamicResource LOC_SCAN}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryScanCommand}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryScanCommand},Path=IsScanning,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                        <ToggleButton Content="{DynamicResource LOC_CANCEL}" IsChecked="{Binding Source={x:Static utils:Commands.LibraryScanCommand},Path=StopScanning}" Visibility="{Binding Source={x:Static utils:Commands.LibraryScanCommand},Path=IsScanning,Converter={StaticResource B2V}}" Margin="0,0,10,0"/>
                                        <Button Content="{DynamicResource LOC_REFRESH}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryRefreshTagsCommand}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRefreshTagsCommand},Path=IsScanning,ConverterParameter=0,Converter={StaticResource B2VP}}" Margin="0,0,10,0" />
                                        <ToggleButton Content="{DynamicResource LOC_CANCEL}" IsChecked="{Binding Source={x:Static utils:Commands.LibraryRefreshTagsCommand},Path=StopScanning}" Visibility="{Binding Source={x:Static utils:Commands.LibraryRefreshTagsCommand},Path=IsScanning,Converter={StaticResource B2V}}" Margin="0,0,10,0"/>
                                        <Button Content="{DynamicResource LOC_CLEAR}" CommandParameter="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library}" Command="{x:Static utils:Commands.LibraryClearCommand}" hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Margin="0,0,10,0" />
                                    </WrapPanel>
                                </Grid>
                                <Separator Margin="0,0,0,10"/>
                                <TextBlock Style="{StaticResource TextBlock_HeaderStyle}" Margin="0,0,0,10">
                                    <Run Text="{DynamicResource LOC_IMPORT}"/>/<Run Text="{DynamicResource LOC_EXPORT}"/>
                                </TextBlock>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_PLAYLIST}"/>:
                                    </TextBlock>
                                    <WrapPanel Grid.Column="1">
                                        <Button Content="{DynamicResource LOC_IMPORT}" Command="{x:Static utils:Commands.ImportPlaylistCommand}" hc:IconElement.Geometry="{StaticResource DownloadGeometry}" Margin="0,0,10,0" />
                                        <Button Content="{DynamicResource LOC_EXPORT}" Command="{x:Static utils:Commands.ExportPlaylistCommand}" hc:IconElement.Geometry="{StaticResource SaveGeometry}" Margin="0,0,10,0" />
                                    </WrapPanel>
                                </Grid>
                                <Separator Margin="0,0,0,10"/>
                                <TextBlock Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_KEYBOARD}" Margin="0,0,0,10"/>
                                <ListBox x:Name="ComboBox_Settings_Hotkeys_Hotkeys" Style="{StaticResource ListBoxModernStyle}" ItemsSource="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager}" Grid.IsSharedSizeScope="True" Margin="0,0,0,10" Visibility="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager.HasItems,Converter={StaticResource B2V}}">
                                    <ListBox.Template>
                                        <ControlTemplate>
                                            <ScrollViewer VirtualizingPanel.IsVirtualizing="True">
                                                <ItemsPresenter />
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </ListBox.Template>
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid >
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="HCol0" Width="Auto" />
                                                    <ColumnDefinition SharedSizeGroup="HCol1" Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Margin="0,0,10,0" Grid.Column="0" VerticalAlignment="Center">
                                            <Run Text="{Binding ModifierString,Mode=OneWay}"/> + <Run Text="{Binding Key,Mode=OneWay,Converter={StaticResource V2S}}"/>
                                                </TextBlock>
                                                <TextBlock Text="{Binding Message}" Margin="0,0,10,0" Grid.Column="1" VerticalAlignment="Center"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_HOTKEYS}"/>:
                                    </TextBlock>
                                    <WrapPanel Grid.Column="1" HorizontalAlignment="Left">
                                        <Button Content="{DynamicResource LOC_ADD}" CommandParameter="{Binding ElementName=Hotkey_Settings_Hotkeys_Hotkey,Path=Hotkey}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager.AddCommand}" hc:IconElement.Geometry="{StaticResource AddGeometry}" Margin="0,0,10,0" />
                                        <Button Content="{DynamicResource LOC_REMOVE}" CommandParameter="{Binding ElementName=ComboBox_Settings_Hotkeys_Hotkeys,Path=SelectedItem}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager.RemoveCommand}" hc:IconElement.Geometry="{StaticResource RemoveGeometry}" Margin="0,0,10,0" />
                                        <Button Content="{DynamicResource LOC_CLEAR}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=HotkeyManager.ClearCommand}" hc:IconElement.Geometry="{StaticResource DeleteFillCircleGeometry}" Margin="0,0,10,0" />
                                    </WrapPanel>
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Center">
                                <Run Text="{DynamicResource LOC_HOTKEY}"/>:
                                    </TextBlock>
                                    <ctl:Hotkey x:Name="Hotkey_Settings_Hotkeys_Hotkey" Grid.Column="1" HorizontalAlignment="Left" Width="350" Height="Auto"/>
                                </Grid>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_SETTINGS}" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                    <Button Grid.Column="1" HorizontalAlignment="Left" Content="{DynamicResource LOC_RESET}" hc:IconElement.Geometry="{StaticResource RotateLeftGeometry}" Style="{StaticResource ButtonDanger}" Click="Button_Settings_Reset_Click"/>
                                </Grid>
                                <TextBlock Text="{DynamicResource LOC_HINT_SETTINGSRESET}" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                <Grid Margin="0,0,0,10">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="Col0"/>
                                        <ColumnDefinition SharedSizeGroup="Col1"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{DynamicResource LOC_APPLICATION}" Margin="0,0,10,0" VerticalAlignment="Center"/>
                                    <Button Grid.Column="1" HorizontalAlignment="Left" Content="{DynamicResource LOC_FORCESTOP}" hc:IconElement.Geometry="{StaticResource CloseGeometry}" Style="{StaticResource ButtonDanger}" Click="Button_Settings_ForceStop_Click"/>
                                </Grid>
                                <Separator Margin="0,0,0,10"/>
                                <TextBlock Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_DEVELOPER}" Margin="0,0,0,10"/>
                                <TextBlock Text="*English-only" FontStyle="Italic" Opacity="0.75" Margin="0,0,0,10"/>
                                <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                    <TextBlock Margin="0,0,10,0">
                                Debug Mode: <Run Text="{Binding IsEnabled ,Source={x:Static utils:DebugMode.Instance}}"/>
                                    </TextBlock>
                                    <ctl:ClickTextBlock Text="Enable" Command="{Binding StartCommand,Source={x:Static utils:DebugMode.Instance}}"/>
                                </StackPanel>
                                <StackPanel Orientation="Vertical" Visibility="{Binding Source={x:Static utils:DebugMode.Instance},Path=IsEnabled,Converter={StaticResource B2V}}">
                                    <Separator Margin="0,0,0,10"/>
                                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10">
                                        <TextBlock Text="Resources" Margin="0,0,10,0"/>
                                        <ctl:ClickTextBlock Text="Load Dictionary" Margin="0,0,10,0" Command="{Binding Source={x:Static utils:Commands.LoadResourceDictionaryCommand}}"/>
                                        <ctl:ClickTextBlock Text="Merge Dictionary" Margin="0,0,10,0" Command="{Binding Source={x:Static utils:Commands.MergeResourceDictionaryCommand}}"/>
                                        <ctl:ClickTextBlock Text="Merge Relative Dictionary" Margin="0,0,10,0" CommandParameter="0" Command="{Binding Source={x:Static utils:Commands.MergeResourceDictionaryCommand}}"/>
                                        <ctl:ClickTextBlock Text="Remove Merged Dictionary" Margin="0,0,10,0" Command="{Binding Source={x:Static utils:Commands.RemoveMergedResourceDictionaryCommand}}"/>
                                        <ctl:ClickTextBlock Text="Clear Merged Dictionaries" Margin="0,0,10,0" ToolTip="Double Click" CommandTriggerMode="DoubleClick" Command="{Binding Source={x:Static utils:Commands.ClearMergedResourceDictionariesCommand}}"/>
                                        <ctl:ClickTextBlock Text="Restore Resources" Foreground="Lime" Margin="0,0,10,0" Command="{Binding Source={x:Static utils:Commands.RestoreResourcesCommand}}"/>
                                    </StackPanel>
                                    <TextBlock Style="{StaticResource TextBlock_HeaderStyle}" Text="Info" Margin="0,0,0,10"/>
                                    <StackPanel Orientation="Horizontal" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=MemoryManager}" Margin="0,0,0,10">
                                        <TextBlock Text="Memory Manager" Margin="0,0,10,0"/>
                                        <hc:Shield Subject="Running" Status="{Binding IsPeriodicCleaning}" Margin="0,0,10,0"/>
                                        <hc:Shield Subject="Cleaned" Status="{Binding TotalCleaned}" Color="{StaticResource SuccessBrush}"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=FilePipe}" Margin="0,0,0,10">
                                        <TextBlock Text="Server" Margin="0,0,10,0"/>
                                        <hc:Shield Subject="Name" Status="{Binding NamedPipeName}" Margin="0,0,10,0"/>
                                        <hc:Shield Subject="Running" Status="{Binding IsRunning}" Color="{StaticResource SuccessBrush}" Margin="0,0,10,0"/>
                                        <hc:Shield Subject="Received" Status="{Binding TotalReceived}" Color="{StaticResource PrimaryBrush}" Margin="0,0,10,0"/>
                                        <hc:Shield Subject="Max Instances" Status="{Binding MaxServerInstances}" Color="{StaticResource InfoBrush}"/>
                                    </StackPanel>
                                    <WrapPanel Orientation="Horizontal" DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player}">
                                        <TextBlock Text="Player" Margin="0,0,10,0"/>
                                        <hc:Shield Subject="Initialized" Status="{Binding IsInitialized}" Color="{StaticResource WarningBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="Sample Rate" Status="{Binding SampleRate}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="Handle" Status="{Binding Stream}" Color="{StaticResource SuccessBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="Quality" Status="{Binding StreamQuality}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="Bitrate" Status="{Binding Bitrate}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="Playlist" Status="{Binding Playlist.Name}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="Effects" Status="{Binding EffectsProfile.Count}" Color="{StaticResource WarningBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="VFX" Status="{Binding VideoEffect.Name}" Color="{StaticResource DangerBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="SMTC" Status="{Binding IsUsingSMTC}" Color="{StaticResource DangerBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="A-B Loop" Status="{Binding IsABLoop}" Color="{StaticResource WarningBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="A" Status="{Binding ABLoop.AString}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="B" Status="{Binding ABLoop.BString}" Color="{StaticResource InfoBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="Modules" Status="{Binding Modules.Count}" Color="{StaticResource DangerBrush}" Margin="0,0,10,10"/>
                                        <hc:Shield Subject="Streams" Status="{Binding Streams.Count}" Color="{StaticResource DangerBrush}" Margin="0,0,0,10"/>
                                    </WrapPanel>
                                    <Separator Margin="0,0,0,10"/>
                                    <TextBlock Style="{StaticResource TextBlock_HeaderStyle}" Text="Stream Manager" Margin="0,0,0,10"/>
                                    <ListBox ItemsSource="{Binding Streams}" Grid.IsSharedSizeScope="True" Margin="0,0,10,10" MaxHeight="250">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid IsEnabled="{Binding IsFreed,Converter={StaticResource B2NB}}" Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition SharedSizeGroup="Handle"/>
                                                        <ColumnDefinition SharedSizeGroup="Metadata"/>
                                                        <ColumnDefinition SharedSizeGroup="IsFreed"/>
                                                        <ColumnDefinition SharedSizeGroup="AutoFree"/>
                                                        <ColumnDefinition SharedSizeGroup="Controls"/>
                                                        <ColumnDefinition SharedSizeGroup="Pos/Len"/>
                                                        <ColumnDefinition SharedSizeGroup="Info"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0" Text="{Binding Handle}" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Metadata.Title}" VerticalAlignment="Center" Margin="0,0,10,0" MaxWidth="120" TextTrimming="CharacterEllipsis"/>
                                                    <CheckBox Grid.Column="2" IsChecked="{Binding IsFreed,Mode=OneWay}" Margin="0,0,10,0" IsEnabled="False"/>
                                                    <CheckBox Grid.Column="3" IsChecked="{Binding AutoFree}" Background="{DynamicResource DangerBrush}" Margin="0,0,10,0"/>
                                                    <StackPanel Grid.Column="4" Orientation="Horizontal" Margin="0,0,10,0">
                                                        <ToggleButton IsChecked="{Binding ControlHandle.IsPlaying}" Style="{StaticResource ToggleButtonIcon}" hc:IconElement.Geometry="{StaticResource GEO_PLAYPAUSE}" hc:IconSwitchElement.GeometrySelected="{StaticResource GEO_PLAYPAUSE}" Margin="0,0,10,0"/>
                                                        <ToggleButton IsChecked="{Binding ControlHandle.IsStopped}" Background="{DynamicResource DangerBrush}" hc:IconElement.Geometry="{StaticResource CloseGeometry}" Margin="0,0,10,0"/>
                                                        <Button Content="{DynamicResource LOC_SWITCH}" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.SwitchStreamCommand}" hc:IconElement.Geometry="{StaticResource SuccessGeometry}"/>
                                                    </StackPanel>
                                                    <TextBlock Grid.Column="5" VerticalAlignment="Center" Margin="0,0,10,0">
                                                    <Run Text="{Binding ControlHandle.PositionString ,Mode=OneWay}"/>/<Run Text="{Binding ControlHandle.Length,Mode=OneWay}"/>
                                                    </TextBlock>
                                                    <TextBlock Grid.Column="6" VerticalAlignment="Center" Text="{Binding StreamInfo}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                </StackPanel>
                            </VirtualizingStackPanel>
                        </ScrollViewer>
                    </Border>
                </TabItem>
                <TabItem Header="Metadata Group">
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid DataContext="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusedGroup}" Margin="10" ClipToBounds="True">
                            <Image Margin="0,-300,0,200" Stretch="UniformToFill" Source="{Binding Cover}">
                                <Image.Effect>
                                    <BlurEffect/>
                                </Image.Effect>
                            </Image>
                            <Rectangle Fill="{DynamicResource RegionBrush}" Margin="0,0,0,200" Opacity="0.5" />
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{Binding Name}" Margin="30,100,0,30" FontSize="64" FontWeight="Bold" />
                                <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10,0,10,5">
                                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="25" Width="52" Height="52" Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center">
                                        <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAY}" Margin="15" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadGroupCommand}"/>
                                    </Border>
                                    <ctl:GeoImage GeoSource="{DynamicResource GEO_ADDTOLIST_LAST}" Width="32" VerticalAlignment="Center" Margin="0,0,10,0" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.AddGroupToPlaylistCommand}"/>
                                    <ctl:GeoImage GeoSource="{DynamicResource GEO_ADDTOLIST_FIRST}" Width="32" VerticalAlignment="Center" Margin="0,0,10,0" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.EnqueueGroupCommand}"/>
                                </StackPanel>
                                <WrapPanel Grid.Row="2" Margin="0,0,0,5">
                                    <TextBlock Margin="10,0,10,0" VerticalAlignment="Bottom">
                                    <Run Text="{DynamicResource LOC_DURATION}" />: <Run Text="{Binding TotalDurationString,Mode=OneWay}" />
                                    </TextBlock>
                                    <TextBlock Text="|" Margin="0,0,10,1" VerticalAlignment="Bottom"/>
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Bottom">
                                    <Run Text="{DynamicResource LOC_PLAYCOUNT}" />: <Run Text="{Binding PlayCount}" />
                                    </TextBlock>
                                    <TextBlock Text="|" Margin="0,0,10,1" VerticalAlignment="Bottom" />
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Bottom">
                                    <Run Text="{DynamicResource LOC_TOTALFAVORITETRACKS}" />: <Run Text="{Binding TotalFavorite}" />
                                    </TextBlock>
                                    <TextBlock Text="|" Margin="0,0,10,1" VerticalAlignment="Bottom" />
                                    <TextBlock Margin="0,0,10,0" VerticalAlignment="Bottom">
                                    <Run Text="{DynamicResource LOC_COUNT}" />: <Run Text="{Binding Count,Mode=OneWay}" />
                                    </TextBlock>
                                </WrapPanel>
                                <ListBox Grid.Row="3" ItemsSource="{Binding }" Grid.IsSharedSizeScope="True" Margin="0,0,0,10" Style="{StaticResource ListBoxMetadataBaseStyle}"/>
                                <!--<ListBox.Template>
                                    <ControlTemplate>
                                        <ScrollViewer VirtualizingPanel.IsVirtualizing="True" Background="{DynamicResource SecondaryRegionBrush}">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </ControlTemplate>
                                </ListBox.Template>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Margin="10,5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="Col0" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col1" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col2" Width="Auto" />
                                                <ColumnDefinition SharedSizeGroup="Col3" Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <ctl:ClickTextBlock Text="👁️" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding .}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.PreviewCommand}" Margin="0,0,20,0"/>
                                            <ctl:ClickTextBlock Text="▶" Grid.Column="1" VerticalAlignment="Center" DecorateOnMouseEnter="False" CommandParameter="{Binding Path}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.LoadAndAddCommand}" Margin="0,0,20,0"/>
                                            <StackPanel Margin="0,0,20,0" Grid.Column="2">
                                                <TextBlock Text="{Binding Title}" Margin="0,0,0,5" />
                                                <ctl:ClickTextBlock Text="{Binding DefaultArtist}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusArtistCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                            </StackPanel>
                                            <ctl:ClickTextBlock Text="{Binding Album}" Margin="0,0,20,0" Grid.Column="3" CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text}" Command="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Library.FocusAlbumCommand}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>-->
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
                <TabItem Header="Now Playing">
                    <Grid>
                        <Image x:Name="Image_VisualizerOutput" Stretch="Fill" DataContext="{Binding VideoEffect}" Source="{Binding CurrentFrame}" Effect="{Binding Effect}" PreviewMouseLeftButtonUp="Image_VisualizerOutput_PreviewMouseLeftButtonUp"/>
                        <Grid Visibility="{Binding ElementName=YourOwner,Path=ShowVisualizerControls,Converter={StaticResource B2V}}">
                            <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,10,0,10" Text="{Binding ElementName=YourOwner,Path=InfoText}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text,Converter={StaticResource NS2V}}" FontFamily="Yu Gothic UI Light" FontSize="48"/>
                        </Grid>
                        <Grid x:Name="Grid_NowPlaying_VisualizerHost" Visibility="Collapsed" SizeChanged="Grid_NowPlaying_VisualizerHost_SizeChanged" PreviewMouseLeftButtonUp="Grid_NowPlaying_VisualizerHost_PreviewMouseLeftButtonUp" Effect="{Binding VideoEffect.Effect}"/>
                        <Grid Visibility="{Binding ElementName=YourOwner,Path=ShowVisualizerControls,Converter={StaticResource B2V}}">
                            <ScrollViewer Margin="5" Visibility="{Binding ElementName=TextBlock_Lyrics,Path=Text,Converter={StaticResource NS2V}}">
                                <TextBlock x:Name="TextBlock_Lyrics" TextAlignment="Center" Text="{Binding StreamMetadata,Converter={StaticResource M2L},Mode=OneWay}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self},Path=Text,Converter={StaticResource NS2V}}"/>
                            </ScrollViewer>
                            <StackPanel HorizontalAlignment="Left" VerticalAlignment="Bottom" Opacity="0">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation BeginTime="0:0:0.50" Storyboard.TargetProperty="(StackPanel.Margin)" From="15" To="275,0,0,15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                            <DoubleAnimation BeginTime="0:0:0.50" Storyboard.TargetProperty="(StackPanel.Opacity)" From="0" To="1" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation BeginTime="0:0:0.25" Storyboard.TargetProperty="(StackPanel.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                            <ThicknessAnimation BeginTime="0:0:0.25" Storyboard.TargetProperty="(StackPanel.Margin)" To="15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <StackPanel.Effect>
                                    <DropShadowEffect BlurRadius="15" ShadowDepth="0" Color="{DynamicResource BackgroundColor}"/>
                                </StackPanel.Effect>
                                <TextBlock Text="{Binding StreamMetadata.Title}" FontWeight="Bold" FontSize="48" TextTrimming="CharacterEllipsis"/>
                                <TextBlock Text="{Binding StreamMetadata.DefaultArtist}" FontWeight="DemiBold" FontSize="24" TextTrimming="CharacterEllipsis"/>
                            </StackPanel>
                            <Image HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="250" Height="250" Margin="15" Source="{Binding StreamMetadata.DefaultCover}" Stretch="Fill">
                                <Image.Clip>
                                    <RectangleGeometry Rect="0,0,250,250" RadiusX="15" RadiusY="15"/>
                                </Image.Clip>
                                <Image.Style>
                                    <Style TargetType="Image">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation BeginTime="0:0:0.25" Storyboard.TargetProperty="(Image.Margin)" From="-200,15,15,15" To="15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <ThicknessAnimation BeginTime="0:0:0.25" Storyboard.TargetProperty="(Image.Margin)" To="-250,15,15,15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <ThicknessAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </ThicknessAnimation.EasingFunction>
                                                            </ThicknessAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Image.Style>
                                <!--<Image.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation BeginTime="0:0:0.25" Storyboard.Target="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Image}}" Storyboard.TargetProperty="Margin" From="-200,15,15,15" To="15" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                <ThicknessAnimation.EasingFunction>
                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                </ThicknessAnimation.EasingFunction>
                                            </ThicknessAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Image.Triggers>-->
                            </Image>
                            <Grid x:Name="Grid_NowPlaying_Controls" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="250" Height="250" Margin="15" Background="Transparent" Opacity="0">
                                <Grid.Triggers>
                                    <EventTrigger RoutedEvent="MouseEnter">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Grid_NowPlaying_Controls" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="MouseLeave">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Grid_NowPlaying_Controls" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" DecelerationRatio="0.95">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </Grid.Triggers>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="2" Source="{Binding Source={x:Static utils:SharedProperties.Instance},Path=Player.StreamMetadata.DefaultCover}" DataContext="{Binding VideoEffect}" Stretch="Fill">
                                    <Image.Effect>
                                        <BlurEffect Radius="10"/>
                                    </Image.Effect>
                                    <Image.Clip>
                                        <RectangleGeometry Rect="0,0,250,250" RadiusX="15" RadiusY="15"/>
                                    </Image.Clip>
                                    <Image.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Header="{DynamicResource LOC_RETURN}" CommandParameter="0" Command="{StaticResource Commands.SetTabIndexCommand}"/>
                                            <Separator/>
                                            <MenuItem Header="{Binding Name}"/>
                                            <Separator/>
                                            <MenuItem Header="{StaticResource LOC_BIND}" CommandParameter="{x:Reference Name=Image_VisualizerOutput}" Command="{Binding SetOutputCommand}" IsEnabled="False"/>
                                            <MenuItem Header="{StaticResource LOC_VISUALIZER}" IsCheckable="True" IsChecked="{Binding IsEnabled}"/>
                                            <MenuItem Header="{StaticResource LOC_FRAMERATE}">
                                                <MenuItem IsEnabled="False" Header="{Binding ActualFramerate}"/>
                                            </MenuItem>
                                            <MenuItem Header="{StaticResource LOC_RESOLUTION}">
                                                <MenuItem IsEnabled="False">
                                                    <MenuItem.Header>
                                                        <TextBlock>
                                                        <Run Text="{Binding Width}"/>x<Run Text="{Binding Height}"/>
                                                        </TextBlock>
                                                    </MenuItem.Header>
                                                </MenuItem>
                                                <Separator/>
                                                <MenuItem Header="SD" CommandParameter="640x480" Command="{Binding SetResolutionCommand}"/>
                                                <MenuItem Header="HD" CommandParameter="1280x720" Command="{Binding SetResolutionCommand}"/>
                                                <MenuItem Header="FHD" CommandParameter="1920x1080" Command="{Binding SetResolutionCommand}"/>
                                                <MenuItem Header="QHD" CommandParameter="2560x1440" Command="{Binding SetResolutionCommand}"/>
                                                <MenuItem Header="UHD" CommandParameter="3840x2160" Command="{Binding SetResolutionCommand}"/>
                                            </MenuItem>
                                        </ContextMenu>
                                    </Image.ContextMenu>
                                </Image>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_PREVIOUS}" CommandParameter="{Binding Playlist}" Command="{Binding PreviousCommand}" Margin="24" VerticalAlignment="Center"/>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAYPAUSE}" Grid.Column="1" CommandParameter="{Binding Stream}" Command="{Binding PlayPauseCommand}" Margin="10" VerticalAlignment="Center">
                                    <ctl:GeoImage.Style>
                                        <Style TargetType="ctl:GeoImage">
                                            <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                    <Setter Property="GeoBrush" Value="{DynamicResource PrimaryBrush}" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsPlaying}" Value="False">
                                                    <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ctl:GeoImage.Style>
                                </ctl:GeoImage>
                                <ctl:GeoImage GeoSource="{DynamicResource GEO_NEXT}" Grid.Column="2" CommandParameter="{Binding Playlist}" Command="{Binding NextCommand}" Margin="24" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="0,0,0,10">
                                <Run Text="{Binding PositionString ,Mode=OneWay}"/> / <Run Text="{Binding StreamMetadata.LengthString,Mode=OneWay}"/>
                                </TextBlock>
                            </Grid>
                            <Slider Width="250" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="15,0,0,7.5" Maximum="{Binding StreamMetadata.Length}" Value="{Binding Position, Delay=100}" IsMoveToPointEnabled="True" Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Opacity, Converter={StaticResource D2V}}">
                                <Slider.Style>
                                    <Style TargetType="Slider" BasedOn="{StaticResource ColorPickerSlider}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=YourOwner,Path=IsNowPlaying}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="1" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="(Slider.Opacity)" To="0" Duration="0:0:0.25" DecelerationRatio="0.95">
                                                                <DoubleAnimation.EasingFunction>
                                                                    <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                </DoubleAnimation.EasingFunction>
                                                            </DoubleAnimation>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Slider.Style>
                            </Slider>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="UPnP">
                    <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="0,0,5,5" Margin="0,2,0,0" ClipToBounds="True">
                        <Grid Margin="10" ClipToBounds="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <WrapPanel Grid.Row="0" Orientation="Horizontal" DataContext="{Binding Source={StaticResource uProvider}}">
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_SEARCH}" Command="{Binding SearchCommand}"/>
                                <ctl:ClickTextBlock Margin="0,0,10,0" Style="{StaticResource TextBlock_HeaderStyle}" Text="{DynamicResource LOC_STOPSTREAM}" Command="{Binding StopStreamCommand}"/>
                            </WrapPanel>
                            <Grid Grid.Row="1" DataContext="{Binding Source={StaticResource uProvider}}" Margin="0,0,0,10">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" Margin="0,0,5,0">
                                    <ListBox Style="{StaticResource ListBoxTransparentStyle}" ItemsSource="{Binding Servers}" SelectedIndex="{Binding SelectedServerIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextBlock.Foreground="{DynamicResource PrimaryTextBrush}">
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ScrollViewer VirtualizingPanel.IsVirtualizing="True" Background="{DynamicResource SecondaryRegionBrush}">
                                                    <ItemsPresenter />
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Image Source="{Binding Info.Icon}" Grid.Column="0" Grid.RowSpan="3" Margin="0,0,5,0" MaxWidth="48"/>
                                                    <TextBlock Text="{Binding Info.Name ,Mode=OneWay}" Grid.Column="1" Grid.Row="0" FontSize="16"/>
                                                    <TextBlock Grid.Column="1" Grid.Row="1" FontWeight="Light">
                                                        <Run Text="{Binding Info.ModelName,Mode=OneWay}"/> • <Run Text="{Binding Info.ModelNumber,Mode=OneWay}"/>
                                                    </TextBlock>
                                                    <TextBlock Text="{Binding Info.ManufacturerName ,Mode=OneWay}" Grid.Column="1" Grid.Row="2" FontWeight="Light"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Grid Visibility="{Binding IsServersBusy,Converter={StaticResource B2V}}" Background="{DynamicResource RegionBrush}" Opacity="0.75">
                                        <hc:LoadingIndicator Style="{StaticResource LoadingIndicatorRingStyle}" IsActive="{Binding IsServersBusy}"/>
                                    </Grid>
                                </Grid>
                                <Grid Grid.Column="1" Margin="5,0,0,0">
                                    <ListBox ItemsSource="{Binding Renderers}" SelectedIndex="{Binding SelectedRendererIndex,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" TextBlock.Foreground="{DynamicResource PrimaryTextBrush}" Opacity="0.5">
                                        <ListBox.Style>
                                            <Style TargetType="ListBox" BasedOn="{StaticResource ListBoxTransparentStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Source={StaticResource uProvider},Path=IsUsingRenderer}" Value="True">
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation To="1" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ListBox.Opacity)">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                        <DataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation To="0.5" Duration="0:0:0.5" DecelerationRatio="0.9" Storyboard.TargetProperty="(ListBox.Opacity)">
                                                                        <DoubleAnimation.EasingFunction>
                                                                            <ExponentialEase Exponent="2" EasingMode="EaseInOut"/>
                                                                        </DoubleAnimation.EasingFunction>
                                                                    </DoubleAnimation>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.ExitActions>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListBox.Style>
                                        <ListBox.Template>
                                            <ControlTemplate>
                                                <ScrollViewer VirtualizingPanel.IsVirtualizing="True" Background="{DynamicResource SecondaryRegionBrush}">
                                                    <ItemsPresenter />
                                                </ScrollViewer>
                                            </ControlTemplate>
                                        </ListBox.Template>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="5">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                        <RowDefinition/>
                                                    </Grid.RowDefinitions>
                                                    <Image Source="{Binding Info.Icon}" Grid.Column="0" Grid.RowSpan="3" Margin="0,0,5,0" MaxWidth="48"/>
                                                    <TextBlock Text="{Binding Info.Name ,Mode=OneWay}" Grid.Column="1" Grid.Row="0" FontSize="16"/>
                                                    <TextBlock Grid.Column="1" Grid.Row="1" FontWeight="Light">
                                                        <Run Text="{Binding Info.ModelName,Mode=OneWay}"/> • <Run Text="{Binding Info.ModelNumber,Mode=OneWay}"/>
                                                    </TextBlock>
                                                    <TextBlock Text="{Binding Info.ManufacturerName ,Mode=OneWay}" Grid.Column="1" Grid.Row="2" FontWeight="Light"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    <Grid Visibility="{Binding IsRenderersBusy,Converter={StaticResource B2V}}" Background="{DynamicResource RegionBrush}" Opacity="0.75">
                                        <hc:LoadingIndicator Style="{StaticResource LoadingIndicatorRingStyle}" IsActive="{Binding IsRenderersBusy}"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                            <Border Grid.Row="2" CornerRadius="15" Margin="0,0,0,10" HorizontalAlignment="Center" Visibility="{Binding Source={StaticResource uProvider},Path=SelectedRenderer,Converter={StaticResource N2V}}">
                                <Grid Margin="10" DataContext="{Binding Source={StaticResource uProvider},Path=SelectedRenderer}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Grid.Column="0" Source="Resources/MusicRecord.png" MaxWidth="48" Margin="0,0,10,0"/>
                                    <TextBlock Grid.Column="1" Margin="0,0,10,0" MaxWidth="150" VerticalAlignment="Center" TextTrimming="CharacterEllipsis">
                                        <Run Text="{Binding CurrentTrackTitle}"/> • <Run Text="{Binding CurrentTrackArtist}"/><LineBreak/>
                                        <Run Text="{Binding CurrentTrackAlbum}"/>
                                    </TextBlock>
                                    <Border Grid.Column="2" Margin="0,0,10,0" Background="{DynamicResource BorderBrush}" CornerRadius="10" HorizontalAlignment="Center">
                                        <Grid Margin="10,0" ClipToBounds="True">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.Resources>
                                                <Style TargetType="ctl:GeoImage">
                                                    <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                                </Style>
                                            </Grid.Resources>
                                            <ctl:GeoImage GeoSource="{DynamicResource GEO_PREVIOUS}" Width="16" Height="16" Margin="0,0,10,0" CommandParameter="previous" Command="{Binding PlaybackControlCommand}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                            <Border Background="{DynamicResource SecondaryRegionBrush}" CornerRadius="25" Grid.Column="1" Width="40" Height="40" HorizontalAlignment="Left" VerticalAlignment="Center">
                                                <Grid>
                                                    <ctl:GeoImage GeoSource="{DynamicResource GEO_PLAYPAUSE}" Grid.Column="1" Margin="10" CommandParameter="playpause" Command="{Binding PlaybackControlCommand}">
                                                        <ctl:GeoImage.Style>
                                                            <Style TargetType="ctl:GeoImage">
                                                                <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                                                        <Setter Property="GeoBrush" Value="{DynamicResource PrimaryBrush}" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding IsPlaying}" Value="False">
                                                                        <Setter Property="GeoBrush" Value="{DynamicResource PrimaryTextBrush}" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ctl:GeoImage.Style>
                                                    </ctl:GeoImage>
                                                </Grid>
                                            </Border>
                                            <ctl:GeoImage GeoSource="{DynamicResource GEO_NEXT}" Grid.Column="2" Margin="10,0,0,0" Width="16" Height="16" CommandParameter="next" Command="{Binding PlaybackControlCommand}" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                        </Grid>
                                    </Border>
                                    <StackPanel Grid.Column="3" Orientation="Horizontal">
                                        <TextBlock Text="{Binding PositionString,Mode=OneWay}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                        <Slider Maximum="{Binding Duration,Mode=OneWay}" Value="{Binding Position,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Delay=100}" IsMoveToPointEnabled="True" Width="250" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                        <TextBlock Text="{Binding DurationString,Mode=OneWay}" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                    </StackPanel>
                                </Grid>                                    
                            </Border>
                            <TreeView Grid.Row="3" ItemsSource="{Binding Source={StaticResource uProvider},Path=SelectedServer.Items}" VirtualizingStackPanel.IsVirtualizing="True" TreeViewItem.Expanded="TreeView_UPnP_Expanded" TreeViewItem.Collapsed="TreeView_UPnP_Collapsed">
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Items}" DataType="{x:Type upnp:UPnPItem}">
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Image Source="{Binding Icon}" Grid.Column="0" Margin="0,0,5,0" HorizontalAlignment="Left" VerticalAlignment="Top" MaxWidth="16"/>
                                            <TextBlock Text="{Binding Header ,Mode=OneWay}" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                        </Grid>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                            </TreeView>
                            <Grid Grid.Row="3" Visibility="{Binding Source={StaticResource uProvider},Path=IsBrowseBusy,Converter={StaticResource B2V}}" Background="{DynamicResource RegionBrush}" Opacity="0.75">
                                <hc:LoadingIndicator Style="{StaticResource LoadingIndicatorRingStyle}" IsActive="{Binding Source={StaticResource uProvider},Path=IsBrowseBusy}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </TabItem>
            </TabControl>
        </DockPanel>
    </Grid>
</hc:Window>